{"version":3,"sources":["userpriv.js"],"names":["ids","priv","getRecords","permissions","slice","map","row","Object","fromEntries","table","index","allowed","id","permission","getFormatter","cell","formatterParams","getRow","getIndex","name","trueValue","getData","checked","getValue","displayTableName","getTitleHtml","phraseId","ew","language","phrase","getColumns","title","field","formatter","sorter","headerSortTristate","resizable","headerSort","$","timer","options","deepAssign","data","layout","initialSort","column","dir","columnHeaderSortMulti","columns","tableOptions","Tabulator","on","parseInt","this","dataset","value","isNaN","initMultiSelectCheckboxes","fixLayoutHeight","cancel","later","setFilter","val","jQuery"],"mappings":"AACA,IAAIA,IAAMC,KAAKD,IAGf,SAASE,aAEL,OADWD,KAAKE,YAAYC,MAAM,GACtBC,IAAIC,GAAOC,OAAOC,YAAY,CACtC,CAAC,QAASF,EAAIG,OACd,CAAC,QAASH,EAAII,OACd,CAAC,UAAWJ,EAAIK,YACbX,IAAIK,IAAIO,GAAM,CAACA,EAAIN,EAAIO,WAAaZ,KAAKW,QAKpD,SAASE,aAAaF,GAClB,OAAO,SAASG,EAAMC,GAClB,IAAIV,EAAMS,EAAKE,SACXP,EAAQJ,EAAIY,WACZC,EAAOP,EAAK,IAAMF,EAClBU,EAAYnB,KAAKW,GACjBD,EAAUL,EAAIe,UAAUV,QACxBW,EAAUP,EAAKQ,YAAcH,EAEjC,OADAd,EAAIgB,QAAUA,EACP,yGAA2GH,EAAO,SAAWA,EAChI,YAAcC,EAAY,iBAAmBV,EAAQ,KACpDY,EAAU,WAAa,MACrBX,EAAUS,IAAcA,EAAa,YAAc,IAAM,WAKxE,SAASI,iBAAiBT,EAAMC,GAC5B,IAAIV,EAAMS,EAAKE,SACf,OAAOX,EAAIe,UAAUZ,MAAQ,oCAAsCH,EAAIY,WAAa,eAIxF,SAASO,aAAab,EAAIc,GACtB,MAAO,yFAA2Fd,EAAK,SAAWA,EAA3G,sEACuCA,EAAK,KAAOe,GAAGC,SAASC,OAAO,cAAgBH,GAAYd,IAAO,iBAIpH,SAASkB,aACL,MAAO,CAAC,CACAC,MAAO,2BAA6BJ,GAAGC,SAASC,OAAO,UAAY,UACnEG,MAAO,QACPC,UAAWT,iBACXU,OAAQ,SACRC,mBAAoBA,mBACpBC,WAAW,MAEZpC,IAAIK,IAAIO,IACA,CACHmB,MAAON,aAAab,GACpBoB,MAAOpB,EACPqB,UAAWnB,aAAaF,GACxByB,YAAY,EACZD,WAAW,MAO3B,CAACE,IACG,IA6BIC,EA7BAC,EAAUb,GAAGc,WAAW,CACxB/B,MAAO,QACPgC,KAAMxC,aACNyC,OAAQ,cACRC,YAAa,CACT,CAAEC,OAAQ,QAASC,IAAK,QAE5BC,uBAAuB,EACvBC,QAASlB,cACVmB,cAECxC,EAAQ,IAAIyC,UAAU,sCAAuCV,GACjE/B,EAAM0C,GAAG,gBAAiB,KACtBb,EAAE,wBAAwBa,GAAG,SAAS,WAClC,IAAIzC,EAAQ0C,SAASC,KAAKC,QAAQ5C,MAAO,IACrC6C,EAAQH,SAASC,KAAKE,MAAO,IAC5BC,MAAM9C,IAAW8C,MAAMD,KACpBF,KAAK/B,QACLrB,KAAKE,YAAYO,GAAOG,YAAc0C,EAEtCtD,KAAKE,YAAYO,GAAOG,YAAcZ,KAAKE,YAAYO,GAAOG,WAAa0C,MAGvF5B,GAAG8B,4BACH9B,GAAG+B,oBAMPpB,EAAE,eAAea,GAAG,6BAA8B,KAC9CZ,GAAOoB,SACPpB,EAAQD,EAAEsB,MAAM,IAAK,KAAM,IAAMnD,EAAMoD,UAAU,QAAS,OAAQvB,EAAE,eAAewB,WAjC3F,CAmCGC","sourcesContent":["// IDs\r\nlet ids = priv.ids;\r\n\r\n// Get records\r\nfunction getRecords() {\r\n    let rows = priv.permissions.slice(0);\r\n    return rows.map(row => Object.fromEntries([\r\n        [\"table\", row.table],\r\n        [\"index\", row.index],\r\n        [\"allowed\", row.allowed],\r\n        ...ids.map(id => [id, row.permission & priv[id]])\r\n    ]));\r\n}\r\n\r\n// Get formatter function\r\nfunction getFormatter(id) {\r\n    return function(cell, formatterParams) {\r\n        let row = cell.getRow(),\r\n            index = row.getIndex(),\r\n            name = id + '_' + index,\r\n            trueValue = priv[id],\r\n            allowed = row.getData().allowed,\r\n            checked = cell.getValue() == trueValue;\r\n        row.checked = checked;\r\n        return '<div class=\"form-check\"><input type=\"checkbox\" class=\"form-check-input ew-priv ew-multi-select\" name=\"' + name + '\" id=\"' + name +\r\n            '\" value=\"' + trueValue + '\" data-index=\"' + index + '\"' +\r\n            (checked ? ' checked' : '') +\r\n            (((allowed & trueValue) != trueValue) ? ' disabled' : '') + '></div>';\r\n    };\r\n}\r\n\r\n// Get display table name\r\nfunction displayTableName(cell, formatterParams) {\r\n    let row = cell.getRow();\r\n    return row.getData().table + '<input type=\"hidden\" name=\"table_' + row.getIndex() + '\" value=\"1\">';\r\n}\r\n\r\n// Get title HTML\r\nfunction getTitleHtml(id, phraseId) {\r\n    return '<div class=\"form-check\"><input type=\"checkbox\" class=\"form-check-input ew-priv\" name=\"' + id + '\" id=\"' + id + '\" data-ew-action=\"select-all\">' +\r\n        '<label class=\"form-check-label\" for=\"' + id + '\">' + ew.language.phrase(\"Permission\" + (phraseId || id)) + '</label></div>'\r\n}\r\n\r\n// Get columns\r\nfunction getColumns() {\r\n    return [{\r\n            title: '<span class=\"fw-normal\">' + ew.language.phrase(\"Tables\") + '</span>',\r\n            field: \"table\",\r\n            formatter: displayTableName,\r\n            sorter: \"string\",\r\n            headerSortTristate: headerSortTristate,\r\n            resizable: false\r\n        },\r\n        ...ids.map(id => {\r\n            return {\r\n                title: getTitleHtml(id),\r\n                field: id,\r\n                formatter: getFormatter(id),\r\n                headerSort: false,\r\n                resizable: false\r\n            };\r\n        })\r\n    ];\r\n}\r\n\r\n// Init\r\n($ => {\r\n    let options = ew.deepAssign({\r\n        index: \"index\",\r\n        data: getRecords(), // Load row data from array\r\n        layout: \"fitDataFill\", // Fit columns to Data\r\n        initialSort: [ // Set the initial sort order of the data\r\n            { column: \"table\", dir: \"asc\" },\r\n        ],\r\n        columnHeaderSortMulti: false, // Multi Column Sorting\r\n        columns: getColumns() // Define the table columns\r\n    }, tableOptions);\r\n\r\n    let table = new Tabulator(\".ew-card.ew-user-priv .ew-card-body\", options);\r\n    table.on(\"dataProcessed\", () => {\r\n        $(\"input[type=checkbox]\").on(\"click\", function() {\r\n            let index = parseInt(this.dataset.index, 10),\r\n                value = parseInt(this.value, 10);\r\n            if (!isNaN(index) && !isNaN(value)) {\r\n                if (this.checked)\r\n                    priv.permissions[index].permission |= value;\r\n                else\r\n                    priv.permissions[index].permission ^= priv.permissions[index].permission ^ value;\r\n            }\r\n        });\r\n        ew.initMultiSelectCheckboxes();\r\n        ew.fixLayoutHeight();\r\n        // console.log(\"dataProcessed\");\r\n    });\r\n\r\n    // Re-load records on search\r\n    let timer;\r\n    $(\"#table-name\").on(\"keydown keypress cut paste\", () => {\r\n        timer?.cancel();\r\n        timer = $.later(200, null, () => table.setFilter(\"table\", \"like\", $(\"#table-name\").val()));\r\n    });\r\n})(jQuery);\r\n"]}