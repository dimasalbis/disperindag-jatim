{"version":3,"names":["tempusDominus","$","luxon","_interopDefaultLegacy","e","default","_interopNamespace","__esModule","n","Object","create","keys","forEach","k","d","getOwnPropertyDescriptor","defineProperty","get","enumerable","$__default","luxon__namespace","TdError","Error","NAME","Namespace","dataKey","events","Events","constructor","this","key","change","update","error","show","hide","blur","focus","keyup","keydown","css","Css","widget","calendarHeader","switch","toolbar","noHighlight","sideBySide","previous","next","disabled","old","new","active","dateContainer","decadesContainer","decade","yearsContainer","year","monthsContainer","month","daysContainer","day","calendarWeeks","dayOfTheWeek","today","weekend","rangeIn","rangeStart","rangeEnd","timeContainer","separator","clockContainer","hourContainer","minuteContainer","secondContainer","hour","minute","second","toggleMeridiem","collapsing","collapse","inline","lightTheme","darkTheme","isDarkPreferredQuery","errorMessages","ErrorMessages","base","failedToSetInvalidDate","failedToParseInput","unexpectedOption","optionName","code","unexpectedOptions","join","unexpectedOptionValue","badValue","validOptions","typeMismatch","badType","expectedType","numbersOutOfRange","lower","upper","failedToParseDate","date","soft","console","warn","mustProvideElement","subscribeMismatch","conflictingConfiguration","message","customDateFormatError","dateString","deprecatedWarning","remediation","throwError","Unit","DefaultFormatLocalization$1","locale","hourCycle","undefined","dateFormats","LTS","LT","L","LL","LLL","LLLL","ordinal","s","v","format","twoDigitTemplate","getFormatByUnit","unit","dateStyle","guessHourCycle","template","numberingSystem","dt","DateTime","setLocalization","hours","start","parts","end","Date","super","arguments","localization","nonLeapLadder","leapLadder","dateTimeRegex","formattingTokens","match2","match3","match4","match1to2","matchSigned","matchOffset","matchWord","zoneExpressions","obj","input","offset","offsetFromString","expressions","t","ojb","afternoon","meridiemMatch","T","fff","milliseconds","addInput","ss","m","mm","H","h","HH","hh","dd","Do","match","i","replace","M","MM","MMM","months","getAllMonths","matchIndex","map","_","slice","indexOf","MMMM","y","yy","parseTwoDigitYear","yyyy","setLocale","value","static","formatLocalization","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","clone","minutes","seconds","JSON","stringify","name","startOf","startOfTheWeek","setMilliseconds","setSeconds","setMinutes","setHours","weekDay","goBack","manipulate","setDate","setMonth","endOf","endOfWeek","isBefore","compare","isValid","valueOf","isAfter","isSame","convert","isBetween","left","right","inclusivity","leftInclusivity","rightInclusivity","isLeftInRange","isRightInRange","timeStyle","Intl","DateTimeFormat","formatToParts","filter","x","type","secondsFormatted","minutesFormatted","getHoursFormatted","meridiem","hour12","find","p","dateFormatted","getDay","targetMonth","endOfMonth","monthFormatted","setFullYear","week","computeOrdinal","weekday","getUTCDay","weekNumber","Math","floor","weeksInWeekYear","p1","last","p2","isLeapYear","applyFormat","Array","replaceTokens","formatStr","formats","a","b","B","toUpperCase","string","first","third","zoneInformation","style","timeZoneName","negative","includes","substring","property","time","toLowerCase","correctHours","makeParser","array","length","token","parseTo","regex","parser","part","exec","call","zone","UTC","formatString","formatter","HHCycle","startsWith","hhCycle","matches","ddd","dddd","$1","ServiceLocator","cache","Map","locate","identifier","service","set","serviceLocator","CalendarModes","className","step","OptionsStore","_currentCalendarViewMode","_viewDate","minimumCalendarViewMode","currentView","currentCalendarViewMode","viewDate","options","refreshCurrentView","isTwelveHour","Validation","optionsStore","targetDate","granularity","_enabledDisabledDatesIsValid","restrictions","daysOfWeekDisabled","_minMaxIsValid","_enabledDisabledHoursIsValid","disabledTimeIntervals","internal","from","to","disabledDates","_isInDisabledDates","enabledDates","_isInEnabledDates","testDate","minDate","maxDate","disabledHours","_isInDisabledHours","enabledHours","_isInEnabledHours","formattedDate","dateRangeIsValid","dates","index","target","dateRange","EventEmitter","subscribers","subscribe","callback","push","unsubscribe","bind","splice","emit","destroy","EventEmitters","triggerEvent","viewUpdate","updateDisplay","action","updateViewDate","defaultEnLocalization","clear","close","dayViewHeaderFormat","decrementHour","decrementMinute","decrementSecond","incrementHour","incrementMinute","incrementSecond","nextCentury","nextDecade","nextMonth","nextYear","pickHour","pickMinute","pickSecond","previousCentury","previousDecade","previousMonth","previousYear","selectDate","selectDecade","selectMonth","selectTime","selectYear","DefaultOptions","allowInputToggle","container","debug","defaultDate","display","icons","up","down","viewMode","toolbarPlacement","keepOpen","buttons","components","calendar","decades","clock","useTwentyfourHour","theme","placement","keepInvalid","meta","multipleDates","multipleDatesSeparator","promptTimeOnDateChange","promptTimeOnDateChangeTransitionDelay","stepping","useCurrent","DefaultEnLocalization","tryConvertToDateTime","dateTime","fromString","convertToDateTime","converted","typeCheckDateArray","providedType","isArray","typeCheckNumberArray","some","mandatoryDate","optionalDate","mandatory","args","numbersInRange","validHourRange","validDateArray","validKeyOption","keyOptions","path","optionProcessors","freeze","valueObject","vk","subOptionName","HTMLElement","Element","appendChild","defaultType","defaultProcessor","toString","processKey","OptionConverter","o","inputElement","deepCopy","paths","charAt","split","reduce","isValue","provided","copyTo","defaultOptions","objectPath","unsupportedOptions","flattenedOptions","getFlattenDefaultOptions","errors","didYouMean","defaultOptionValue","lastIndexOf","ignoreProperties","spread","providedOptions","mergeTo","newConfig","element","eData","parse","dataset","tdTargetInput","tdTargetToggle","DOMStringMap","dataOptions","objectToNormalized","object","lowered","normalizeObject","optionsLower","keyOption","_mergeOptions","optionSubgroup","internalObject","_flattenDefaults","deepKeys","pre","entries","flatMap","config","Dates","_dates","validation","_eventEmitters","picked","lastPicked","lastPickedIndex","formatInput","parseInput","dateConversion","setFromInput","setValue","add","isPicked","innerDateFormatted","pickedIndex","unset","oldDate","isClear","factor","startYear","updateInput","newValue","noIndex","_setValueNull","round","onUpdate","reason","ActionTypes","ActionTypes$1","DateDisplay","getPicker","document","createElement","classList","append","_daysOfTheWeek","div","rangeHoverEvent","rangeHoverOutEvent","handleMouseEvents","setAttribute","selectDay","matchMedia","addEventListener","_update","paint","getElementsByClassName","_updateCalendarView","innerDate","_handleCalendarWeeks","querySelectorAll","classes","_handleDateRange","remove","_dateToDataValue","innerText","currentTarget","contains","allDays","attributeValue","getAttribute","dayIndex","findIndex","rangeStartFormatted","rangeStartIndex","rangeStartElement","lambda","switcher","parentElement","getElementsByTagName","row","htmlDivElement","MonthDisplay","containerClone","YearDisplay","_startYear","_endYear","DecadeDisplay","getStartEndYear","_startDecade","_endDecade","pickedYears","textContent","startDecadeYear","endDecadeYear","TimeDisplay","_gridColumns","iconTag","_grid","timesDiv","querySelector","incrementHours","decrementHours","incrementMinutes","decrementMinutes","incrementSeconds","decrementSeconds","toggle","meridiemDate","gridTemplateAreas","top","middle","bottom","upIcon","downIcon","separatorColon","cloneNode","innerHTML","getSeparator","colon","divElement","showHours","showMinutes","showSeconds","button","trim","HourDisplay","selectHour","MinuteDisplay","selectMinute","secondDisplay","selectSecond","Collapse","height","setTimeout","showImmediately","getTransitionDurationFromElement","scrollHeight","getBoundingClientRect","offsetHeight","hideImmediately","transitionDuration","transitionDelay","window","getComputedStyle","floatTransitionDuration","Number","parseFloat","floatTransitionDelay","Display","_isVisible","_documentClickEvent","composedPath","_actionsClickEvent","dateDisplay","monthDisplay","yearDisplay","decadeDisplay","timeDisplay","hourDisplay","minuteDisplay","_widget","result","isVisible","_hasTime","_updateCalendarHeader","_hasDate","_unit","_date","_classes","_element","_showSetDefaultIfNeeded","_buildWidget","_updateTheme","_showSetupViewMode","body","createPopup","modifiers","enabled","documentElement","dir","then","showClock","updatePopup","onlyClock","_showMode","tries","direction","async","createPopperFunction","Popper","createPopper","import","_popperInstance","max","min","datePickerMode","picker","_getThemeClass","removeEventListener","currentTheme","isDarkMode","showing","_dispose","parentNode","removeChild","dateView","getHeadTemplate","timeView","_iconTag","getToolbarElements","_hasDateAndTime","_buildWidgetSideBySide","setupComponentView","hasFirst","hasSecond","shouldShow","arrow","title","icon","togglePicker","changeCalendarView","iconClass","svg","createElementNS","_rebuild","wasVisible","Actions","do","handleNextPrevious","handleSelectCalendarMode","handleSelectDay","hideOrClock","manipulateAndSet","handleToggle","handleShowClockContainers","htmlElement","classToUse","newDate","outerHTML","handleDateRange","handleMultiDate","other","getTime","TempusDominus","_subscribers","_isDisabled","_inputChangeEvent","event","internallyTriggered","detail","setViewDate","valueSplit","_toggleClickEvent","actions","_initializeOptions","_initializeInput","_initializeToggle","_triggerEvent","_viewUpdate","updateOptions","reset","disable","enable","removeAttribute","eventTypes","callbacks","callBackArray","returnArray","eventType","_unsubscribe","dispose","_toggle","language","asked","loadedLocales","isChangeEvent","_handleAfterChangeEvent","dispatchEvent","CustomEvent","jQuery","trigger","_publish","eventName","includeDataset","_dataToOptions","_validateConflicts","tagName","query","clearTimeout","_currentPromptTimeTimeout","loadLocale","l","extend","plugin","option","installed","tempusDominus$1","version","__proto__","tdClasses","tdFactory","prototype","opts","parsedDate","fromFormat","toJSDate","outputCalendar","fromJSDate","toFormat","jQueryInterface","argument","jQueryHandleThis","each","me","data","isDateUpdateThroughDateOptionFromClientCode","ret","JQUERY_NO_CONFLICT","fn","Constructor","noConflict"],"sources":["./dist/js/tempus-dominus.js"],"sourcesContent":["/*!\n  * Tempus Dominus v6.7.7 (https://getdatepicker.com/)\n  * Copyright 2013-2023 Jonathan Peterson\n  * Licensed under MIT (https://github.com/Eonasdan/tempus-dominus/blob/master/LICENSE)\n  */\nvar tempusDominus = (function ($, luxon) {\n  'use strict';\n\n  function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (e) {\n      Object.keys(e).forEach(function (k) {\n        if (k !== 'default') {\n          var d = Object.getOwnPropertyDescriptor(e, k);\n          Object.defineProperty(n, k, d.get ? d : {\n            enumerable: true,\n            get: function () { return e[k]; }\n          });\n        }\n      });\n    }\n    n[\"default\"] = e;\n    return n;\n  }\n\n  var $__default = /*#__PURE__*/_interopDefaultLegacy($);\n  var luxon__namespace = /*#__PURE__*/_interopNamespace(luxon);\n\n  class TdError extends Error {\r\n  }\r\n  class ErrorMessages {\r\n      constructor() {\r\n          this.base = 'TD:';\r\n          //#endregion\r\n          //#region used with notify.error\r\n          /**\r\n           * Used with an Error Event type if the user selects a date that\r\n           * fails restriction validation.\r\n           */\r\n          this.failedToSetInvalidDate = 'Failed to set invalid date';\r\n          /**\r\n           * Used with an Error Event type when a user changes the value of the\r\n           * input field directly, and does not provide a valid date.\r\n           */\r\n          this.failedToParseInput = 'Failed parse input field';\r\n          //#endregion\r\n      }\r\n      //#region out to console\r\n      /**\r\n       * Throws an error indicating that a key in the options object is invalid.\r\n       * @param optionName\r\n       */\r\n      unexpectedOption(optionName) {\r\n          const error = new TdError(`${this.base} Unexpected option: ${optionName} does not match a known option.`);\r\n          error.code = 1;\r\n          throw error;\r\n      }\r\n      /**\r\n       * Throws an error indicating that one more keys in the options object is invalid.\r\n       * @param optionName\r\n       */\r\n      unexpectedOptions(optionName) {\r\n          const error = new TdError(`${this.base}: ${optionName.join(', ')}`);\r\n          error.code = 1;\r\n          throw error;\r\n      }\r\n      /**\r\n       * Throws an error when an option is provide an unsupported value.\r\n       * For example a value of 'cheese' for toolbarPlacement which only supports\r\n       * 'top', 'bottom', 'default'.\r\n       * @param optionName\r\n       * @param badValue\r\n       * @param validOptions\r\n       */\r\n      unexpectedOptionValue(optionName, badValue, validOptions) {\r\n          const error = new TdError(`${this.base} Unexpected option value: ${optionName} does not accept a value of \"${badValue}\". Valid values are: ${validOptions.join(', ')}`);\r\n          error.code = 2;\r\n          throw error;\r\n      }\r\n      /**\r\n       * Throws an error when an option value is the wrong type.\r\n       * For example a string value was provided to multipleDates which only\r\n       * supports true or false.\r\n       * @param optionName\r\n       * @param badType\r\n       * @param expectedType\r\n       */\r\n      typeMismatch(optionName, badType, expectedType) {\r\n          const error = new TdError(`${this.base} Mismatch types: ${optionName} has a type of ${badType} instead of the required ${expectedType}`);\r\n          error.code = 3;\r\n          throw error;\r\n      }\r\n      /**\r\n       * Throws an error when an option value is  outside of the expected range.\r\n       * For example restrictions.daysOfWeekDisabled excepts a value between 0 and 6.\r\n       * @param optionName\r\n       * @param lower\r\n       * @param upper\r\n       */\r\n      numbersOutOfRange(optionName, lower, upper) {\r\n          const error = new TdError(`${this.base} ${optionName} expected an array of number between ${lower} and ${upper}.`);\r\n          error.code = 4;\r\n          throw error;\r\n      }\r\n      /**\r\n       * Throws an error when a value for a date options couldn't be parsed. Either\r\n       * the option was an invalid string or an invalid Date object.\r\n       * @param optionName\r\n       * @param date\r\n       * @param soft If true, logs a warning instead of an error.\r\n       */\r\n      //eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n      failedToParseDate(optionName, date, soft = false) {\r\n          const error = new TdError(`${this.base} Could not correctly parse \"${date}\" to a date for ${optionName}.`);\r\n          error.code = 5;\r\n          if (!soft)\r\n              throw error;\r\n          console.warn(error);\r\n      }\r\n      /**\r\n       * Throws when an element to attach to was not provided in the constructor.\r\n       */\r\n      mustProvideElement() {\r\n          const error = new TdError(`${this.base} No element was provided.`);\r\n          error.code = 6;\r\n          throw error;\r\n      }\r\n      /**\r\n       * Throws if providing an array for the events to subscribe method doesn't have\r\n       * the same number of callbacks. E.g., subscribe([1,2], [1])\r\n       */\r\n      subscribeMismatch() {\r\n          const error = new TdError(`${this.base} The subscribed events does not match the number of callbacks`);\r\n          error.code = 7;\r\n          throw error;\r\n      }\r\n      /**\r\n       * Throws if the configuration has conflicting rules e.g. minDate is after maxDate\r\n       */\r\n      conflictingConfiguration(message) {\r\n          const error = new TdError(`${this.base} A configuration value conflicts with another rule. ${message}`);\r\n          error.code = 8;\r\n          throw error;\r\n      }\r\n      /**\r\n       * customDateFormat errors\r\n       */\r\n      customDateFormatError(message) {\r\n          const error = new TdError(`${this.base} Custom Date Format: ${message}`);\r\n          error.code = 9;\r\n          throw error;\r\n      }\r\n      /**\r\n       * Logs a warning if a date option value is provided as a string, instead of\r\n       * a date/datetime object.\r\n       */\r\n      dateString() {\r\n          console.warn(`${this.base} Using a string for date options is not recommended unless you specify an ISO string or use the customDateFormat plugin.`);\r\n      }\r\n      deprecatedWarning(message, remediation) {\r\n          console.warn(`${this.base} Warning ${message} is deprecated and will be removed in a future version. ${remediation}`);\r\n      }\r\n      throwError(message) {\r\n          const error = new TdError(`${this.base} ${message}`);\r\n          error.code = 9;\r\n          throw error;\r\n      }\r\n  }\n\n  // this is not the way I want this to stay but nested classes seemed to blown up once its compiled.\r\n  const NAME = 'tempus-dominus', dataKey = 'td';\r\n  /**\r\n   * Events\r\n   */\r\n  class Events {\r\n      constructor() {\r\n          this.key = `.${dataKey}`;\r\n          /**\r\n           * Change event. Fired when the user selects a date.\r\n           * See also EventTypes.ChangeEvent\r\n           */\r\n          this.change = `change${this.key}`;\r\n          /**\r\n           * Emit when the view changes for example from month view to the year view.\r\n           * See also EventTypes.ViewUpdateEvent\r\n           */\r\n          this.update = `update${this.key}`;\r\n          /**\r\n           * Emits when a selected date or value from the input field fails to meet the provided validation rules.\r\n           * See also EventTypes.FailEvent\r\n           */\r\n          this.error = `error${this.key}`;\r\n          /**\r\n           * Show event\r\n           * @event Events#show\r\n           */\r\n          this.show = `show${this.key}`;\r\n          /**\r\n           * Hide event\r\n           * @event Events#hide\r\n           */\r\n          this.hide = `hide${this.key}`;\r\n          // blur and focus are used in the jQuery provider but are otherwise unused.\r\n          // keyup/down will be used later for keybinding options\r\n          this.blur = `blur${this.key}`;\r\n          this.focus = `focus${this.key}`;\r\n          this.keyup = `keyup${this.key}`;\r\n          this.keydown = `keydown${this.key}`;\r\n      }\r\n  }\r\n  class Css {\r\n      constructor() {\r\n          /**\r\n           * The outer element for the widget.\r\n           */\r\n          this.widget = `${NAME}-widget`;\r\n          /**\r\n           * Hold the previous, next and switcher divs\r\n           */\r\n          this.calendarHeader = 'calendar-header';\r\n          /**\r\n           * The element for the action to change the calendar view. E.g. month -> year.\r\n           */\r\n          this.switch = 'picker-switch';\r\n          /**\r\n           * The elements for all the toolbar options\r\n           */\r\n          this.toolbar = 'toolbar';\r\n          /**\r\n           * Disables the hover and rounding affect.\r\n           */\r\n          this.noHighlight = 'no-highlight';\r\n          /**\r\n           * Applied to the widget element when the side by side option is in use.\r\n           */\r\n          this.sideBySide = 'timepicker-sbs';\r\n          /**\r\n           * The element for the action to change the calendar view, e.g. August -> July\r\n           */\r\n          this.previous = 'previous';\r\n          /**\r\n           * The element for the action to change the calendar view, e.g. August -> September\r\n           */\r\n          this.next = 'next';\r\n          /**\r\n           * Applied to any action that would violate any restriction options. ALso applied\r\n           * to an input field if the disabled function is called.\r\n           */\r\n          this.disabled = 'disabled';\r\n          /**\r\n           * Applied to any date that is less than requested view,\r\n           * e.g. the last day of the previous month.\r\n           */\r\n          this.old = 'old';\r\n          /**\r\n           * Applied to any date that is greater than of requested view,\r\n           * e.g. the last day of the previous month.\r\n           */\r\n          this.new = 'new';\r\n          /**\r\n           * Applied to any date that is currently selected.\r\n           */\r\n          this.active = 'active';\r\n          //#region date element\r\n          /**\r\n           * The outer element for the calendar view.\r\n           */\r\n          this.dateContainer = 'date-container';\r\n          /**\r\n           * The outer element for the decades view.\r\n           */\r\n          this.decadesContainer = `${this.dateContainer}-decades`;\r\n          /**\r\n           * Applied to elements within the decade container, e.g. 2020, 2030\r\n           */\r\n          this.decade = 'decade';\r\n          /**\r\n           * The outer element for the years view.\r\n           */\r\n          this.yearsContainer = `${this.dateContainer}-years`;\r\n          /**\r\n           * Applied to elements within the years container, e.g. 2021, 2021\r\n           */\r\n          this.year = 'year';\r\n          /**\r\n           * The outer element for the month view.\r\n           */\r\n          this.monthsContainer = `${this.dateContainer}-months`;\r\n          /**\r\n           * Applied to elements within the month container, e.g. January, February\r\n           */\r\n          this.month = 'month';\r\n          /**\r\n           * The outer element for the calendar view.\r\n           */\r\n          this.daysContainer = `${this.dateContainer}-days`;\r\n          /**\r\n           * Applied to elements within the day container, e.g. 1, 2..31\r\n           */\r\n          this.day = 'day';\r\n          /**\r\n           * If display.calendarWeeks is enabled, a column displaying the week of year\r\n           * is shown. This class is applied to each cell in that column.\r\n           */\r\n          this.calendarWeeks = 'cw';\r\n          /**\r\n           * Applied to the first row of the calendar view, e.g. Sunday, Monday\r\n           */\r\n          this.dayOfTheWeek = 'dow';\r\n          /**\r\n           * Applied to the current date on the calendar view.\r\n           */\r\n          this.today = 'today';\r\n          /**\r\n           * Applied to the locale's weekend dates on the calendar view, e.g. Sunday, Saturday\r\n           */\r\n          this.weekend = 'weekend';\r\n          this.rangeIn = 'range-in';\r\n          this.rangeStart = 'range-start';\r\n          this.rangeEnd = 'range-end';\r\n          //#endregion\r\n          //#region time element\r\n          /**\r\n           * The outer element for all time related elements.\r\n           */\r\n          this.timeContainer = 'time-container';\r\n          /**\r\n           * Applied the separator columns between time elements, e.g. hour *:* minute *:* second\r\n           */\r\n          this.separator = 'separator';\r\n          /**\r\n           * The outer element for the clock view.\r\n           */\r\n          this.clockContainer = `${this.timeContainer}-clock`;\r\n          /**\r\n           * The outer element for the hours selection view.\r\n           */\r\n          this.hourContainer = `${this.timeContainer}-hour`;\r\n          /**\r\n           * The outer element for the minutes selection view.\r\n           */\r\n          this.minuteContainer = `${this.timeContainer}-minute`;\r\n          /**\r\n           * The outer element for the seconds selection view.\r\n           */\r\n          this.secondContainer = `${this.timeContainer}-second`;\r\n          /**\r\n           * Applied to each element in the hours selection view.\r\n           */\r\n          this.hour = 'hour';\r\n          /**\r\n           * Applied to each element in the minutes selection view.\r\n           */\r\n          this.minute = 'minute';\r\n          /**\r\n           * Applied to each element in the seconds selection view.\r\n           */\r\n          this.second = 'second';\r\n          /**\r\n           * Applied AM/PM toggle button.\r\n           */\r\n          this.toggleMeridiem = 'toggleMeridiem';\r\n          //#endregion\r\n          //#region collapse\r\n          /**\r\n           * Applied the element of the current view mode, e.g. calendar or clock.\r\n           */\r\n          this.show = 'show';\r\n          /**\r\n           * Applied to the currently showing view mode during a transition\r\n           * between calendar and clock views\r\n           */\r\n          this.collapsing = 'td-collapsing';\r\n          /**\r\n           * Applied to the currently hidden view mode.\r\n           */\r\n          this.collapse = 'td-collapse';\r\n          //#endregion\r\n          /**\r\n           * Applied to the widget when the option display.inline is enabled.\r\n           */\r\n          this.inline = 'inline';\r\n          /**\r\n           * Applied to the widget when the option display.theme is light.\r\n           */\r\n          this.lightTheme = 'light';\r\n          /**\r\n          * Applied to the widget when the option display.theme is dark.\r\n          */\r\n          this.darkTheme = 'dark';\r\n          /**\r\n          * Used for detecting if the system color preference is dark mode\r\n          */\r\n          this.isDarkPreferredQuery = '(prefers-color-scheme: dark)';\r\n      }\r\n  }\r\n  class Namespace {\r\n  }\r\n  Namespace.NAME = NAME;\r\n  // noinspection JSUnusedGlobalSymbols\r\n  Namespace.dataKey = dataKey;\r\n  Namespace.events = new Events();\r\n  Namespace.css = new Css();\r\n  Namespace.errorMessages = new ErrorMessages();\n\n  const DefaultFormatLocalization = {\r\n      locale: 'default',\r\n      hourCycle: undefined,\r\n      dateFormats: {\r\n          LTS: 'h:mm:ss T',\r\n          LT: 'h:mm T',\r\n          L: 'MM/dd/yyyy',\r\n          LL: 'MMMM d, yyyy',\r\n          LLL: 'MMMM d, yyyy h:mm T',\r\n          LLLL: 'dddd, MMMM d, yyyy h:mm T',\r\n      },\r\n      ordinal: (n) => {\r\n          const s = ['th', 'st', 'nd', 'rd'];\r\n          const v = n % 100;\r\n          return `[${n}${s[(v - 20) % 10] || s[v] || s[0]}]`;\r\n      },\r\n      format: 'L LT',\r\n  };\r\n  var DefaultFormatLocalization$1 = { ...DefaultFormatLocalization };\n\n  var Unit;\r\n  (function (Unit) {\r\n      Unit[\"seconds\"] = \"seconds\";\r\n      Unit[\"minutes\"] = \"minutes\";\r\n      Unit[\"hours\"] = \"hours\";\r\n      Unit[\"date\"] = \"date\";\r\n      Unit[\"month\"] = \"month\";\r\n      Unit[\"year\"] = \"year\";\r\n  })(Unit || (Unit = {}));\r\n  const twoDigitTemplate = {\r\n      month: '2-digit',\r\n      day: '2-digit',\r\n      year: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n      second: '2-digit',\r\n  };\r\n  /**\r\n   * Returns an Intl format object based on the provided object\r\n   * @param unit\r\n   */\r\n  const getFormatByUnit = (unit) => {\r\n      switch (unit) {\r\n          case 'date':\r\n              return { dateStyle: 'short' };\r\n          case 'month':\r\n              return {\r\n                  month: 'numeric',\r\n                  year: 'numeric',\r\n              };\r\n          case 'year':\r\n              return { year: 'numeric' };\r\n      }\r\n  };\r\n  /**\r\n   * Attempts to guess the hour cycle of the given local\r\n   * @param locale\r\n   */\r\n  const guessHourCycle = (locale) => {\r\n      if (!locale)\r\n          return 'h12';\r\n      // noinspection SpellCheckingInspection\r\n      const template = {\r\n          hour: '2-digit',\r\n          minute: '2-digit',\r\n          numberingSystem: 'latn',\r\n      };\r\n      const dt = new DateTime().setLocalization({ locale });\r\n      dt.hours = 0;\r\n      const start = dt.parts(undefined, template).hour;\r\n      //midnight is 12 so en-US style 12 AM\r\n      if (start === '12')\r\n          return 'h12';\r\n      //midnight is 24 is from 00-24\r\n      if (start === '24')\r\n          return 'h24';\r\n      dt.hours = 23;\r\n      const end = dt.parts(undefined, template).hour;\r\n      //if midnight is 00 and hour 23 is 11 then\r\n      if (start === '00' && end === '11')\r\n          return 'h11';\r\n      if (start === '00' && end === '23')\r\n          return 'h23';\r\n      console.warn(`couldn't determine hour cycle for ${locale}. start: ${start}. end: ${end}`);\r\n      return undefined;\r\n  };\r\n  /**\r\n   * For the most part this object behaves exactly the same way\r\n   * as the native Date object with a little extra spice.\r\n   */\r\n  class DateTime extends Date {\r\n      constructor() {\r\n          super(...arguments);\r\n          this.localization = DefaultFormatLocalization$1;\r\n          this.nonLeapLadder = [\r\n              0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334,\r\n          ];\r\n          this.leapLadder = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335];\r\n          //#region CDF stuff\r\n          this.dateTimeRegex = \r\n          //is regex cannot be simplified beyond what it already is\r\n          /(\\[[^[\\]]*])|y{1,4}|M{1,4}|d{1,4}|H{1,2}|h{1,2}|t|T|m{1,2}|s{1,2}|f{3}/g; //NOSONAR\r\n          this.formattingTokens = /(\\[[^[\\]]*])|([-_:/.,()\\s]+)|(T|t|yyyy|yy?|MM?M?M?|Do|dd?|hh?|HH?|mm?|ss?)/g; //NOSONAR is regex cannot be simplified beyond what it already is\r\n          this.match2 = /\\d\\d/; // 00 - 99\r\n          this.match3 = /\\d{3}/; // 000 - 999\r\n          this.match4 = /\\d{4}/; // 0000 - 9999\r\n          this.match1to2 = /\\d\\d?/; // 0 - 99\r\n          this.matchSigned = /[+-]?\\d+/; // -inf - inf\r\n          this.matchOffset = /[+-]\\d\\d:?(\\d\\d)?|Z/; // +00:00 -00:00 +0000 or -0000 +00 or Z\r\n          this.matchWord = /[^\\d_:/,\\-()\\s]+/; // Word\r\n          this.zoneExpressions = [\r\n              this.matchOffset,\r\n              (obj, input) => {\r\n                  obj.offset = this.offsetFromString(input);\r\n              },\r\n          ];\r\n          this.expressions = {\r\n              t: [\r\n                  this.matchWord,\r\n                  (ojb, input) => {\r\n                      ojb.afternoon = this.meridiemMatch(input);\r\n                  },\r\n              ],\r\n              T: [\r\n                  this.matchWord,\r\n                  (ojb, input) => {\r\n                      ojb.afternoon = this.meridiemMatch(input);\r\n                  },\r\n              ],\r\n              fff: [\r\n                  this.match3,\r\n                  (ojb, input) => {\r\n                      ojb.milliseconds = +input;\r\n                  },\r\n              ],\r\n              s: [this.match1to2, this.addInput('seconds')],\r\n              ss: [this.match1to2, this.addInput('seconds')],\r\n              m: [this.match1to2, this.addInput('minutes')],\r\n              mm: [this.match1to2, this.addInput('minutes')],\r\n              H: [this.match1to2, this.addInput('hours')],\r\n              h: [this.match1to2, this.addInput('hours')],\r\n              HH: [this.match1to2, this.addInput('hours')],\r\n              hh: [this.match1to2, this.addInput('hours')],\r\n              d: [this.match1to2, this.addInput('day')],\r\n              dd: [this.match2, this.addInput('day')],\r\n              Do: [\r\n                  this.matchWord,\r\n                  (ojb, input) => {\r\n                      [ojb.day] = input.match(/\\d+/);\r\n                      if (!this.localization.ordinal)\r\n                          return;\r\n                      for (let i = 1; i <= 31; i += 1) {\r\n                          if (this.localization.ordinal(i).replace(/[[\\]]/g, '') === input) {\r\n                              ojb.day = i;\r\n                          }\r\n                      }\r\n                  },\r\n              ],\r\n              M: [this.match1to2, this.addInput('month')],\r\n              MM: [this.match2, this.addInput('month')],\r\n              MMM: [\r\n                  this.matchWord,\r\n                  (obj, input) => {\r\n                      const months = this.getAllMonths();\r\n                      const monthsShort = this.getAllMonths('short');\r\n                      const matchIndex = (monthsShort || months.map((_) => _.slice(0, 3))).indexOf(input) + 1;\r\n                      if (matchIndex < 1) {\r\n                          throw new Error();\r\n                      }\r\n                      obj.month = matchIndex % 12 || matchIndex;\r\n                  },\r\n              ],\r\n              MMMM: [\r\n                  this.matchWord,\r\n                  (obj, input) => {\r\n                      const months = this.getAllMonths();\r\n                      const matchIndex = months.indexOf(input) + 1;\r\n                      if (matchIndex < 1) {\r\n                          throw new Error();\r\n                      }\r\n                      obj.month = matchIndex % 12 || matchIndex;\r\n                  },\r\n              ],\r\n              y: [this.matchSigned, this.addInput('year')],\r\n              yy: [\r\n                  this.match2,\r\n                  (obj, input) => {\r\n                      obj.year = this.parseTwoDigitYear(input);\r\n                  },\r\n              ],\r\n              yyyy: [this.match4, this.addInput('year')],\r\n              // z: this.zoneExpressions,\r\n              // zz: this.zoneExpressions,\r\n              // zzz: this.zoneExpressions\r\n          };\r\n          //#endregion CDF stuff\r\n      }\r\n      /**\r\n       * Chainable way to set the {@link locale}\r\n       * @param value\r\n       * @deprecated use setLocalization with a FormatLocalization object instead\r\n       */\r\n      setLocale(value) {\r\n          if (!this.localization) {\r\n              this.localization = DefaultFormatLocalization$1;\r\n              this.localization.locale = value;\r\n          }\r\n          return this;\r\n      }\r\n      /**\r\n       * Chainable way to set the {@link localization}\r\n       * @param value\r\n       */\r\n      setLocalization(value) {\r\n          this.localization = value;\r\n          return this;\r\n      }\r\n      /**\r\n       * Converts a plain JS date object to a DateTime object.\r\n       * Doing this allows access to format, etc.\r\n       * @param  date\r\n       * @param locale this parameter is deprecated. Use formatLocalization instead.\r\n       * @param formatLocalization\r\n       */\r\n      static convert(date, locale = 'default', formatLocalization = undefined) {\r\n          if (!date)\r\n              throw new Error(`A date is required`);\r\n          if (!formatLocalization) {\r\n              formatLocalization = DefaultFormatLocalization$1;\r\n              formatLocalization.locale = locale;\r\n          }\r\n          return new DateTime(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()).setLocalization(formatLocalization);\r\n      }\r\n      /**\r\n       * Native date manipulations are not pure functions. This function creates a duplicate of the DateTime object.\r\n       */\r\n      get clone() {\r\n          return new DateTime(this.year, this.month, this.date, this.hours, this.minutes, this.seconds, this.getMilliseconds()).setLocalization(this.localization);\r\n      }\r\n      static isValid(d) {\r\n          if (d === undefined || JSON.stringify(d) === 'null')\r\n              return false;\r\n          if (d.constructor.name === DateTime.name)\r\n              return true;\r\n          return false;\r\n      }\r\n      /**\r\n       * Sets the current date to the start of the {@link unit} provided\r\n       * Example: Consider a date of \"April 30, 2021, 11:45:32.984 AM\" => new DateTime(2021, 3, 30, 11, 45, 32, 984).startOf('month')\r\n       * would return April 1, 2021, 12:00:00.000 AM (midnight)\r\n       * @param unit\r\n       * @param startOfTheWeek Allows for the changing the start of the week.\r\n       */\r\n      startOf(unit, startOfTheWeek = 0) {\r\n          if (this[unit] === undefined)\r\n              throw new Error(`Unit '${unit}' is not valid`);\r\n          switch (unit) {\r\n              case 'seconds':\r\n                  this.setMilliseconds(0);\r\n                  break;\r\n              case 'minutes':\r\n                  this.setSeconds(0, 0);\r\n                  break;\r\n              case 'hours':\r\n                  this.setMinutes(0, 0, 0);\r\n                  break;\r\n              case 'date':\r\n                  this.setHours(0, 0, 0, 0);\r\n                  break;\r\n              case 'weekDay': {\r\n                  this.startOf(Unit.date);\r\n                  if (this.weekDay === startOfTheWeek)\r\n                      break;\r\n                  let goBack = this.weekDay;\r\n                  if (startOfTheWeek !== 0 && this.weekDay === 0)\r\n                      goBack = 8 - startOfTheWeek;\r\n                  this.manipulate(startOfTheWeek - goBack, Unit.date);\r\n                  break;\r\n              }\r\n              case 'month':\r\n                  this.startOf(Unit.date);\r\n                  this.setDate(1);\r\n                  break;\r\n              case 'year':\r\n                  this.startOf(Unit.date);\r\n                  this.setMonth(0, 1);\r\n                  break;\r\n          }\r\n          return this;\r\n      }\r\n      /**\r\n       * Sets the current date to the end of the {@link unit} provided\r\n       * Example: Consider a date of \"April 30, 2021, 11:45:32.984 AM\" => new DateTime(2021, 3, 30, 11, 45, 32, 984).endOf('month')\r\n       * would return April 30, 2021, 11:59:59.999 PM\r\n       * @param unit\r\n       * @param startOfTheWeek\r\n       */\r\n      endOf(unit, startOfTheWeek = 0) {\r\n          if (this[unit] === undefined)\r\n              throw new Error(`Unit '${unit}' is not valid`);\r\n          switch (unit) {\r\n              case 'seconds':\r\n                  this.setMilliseconds(999);\r\n                  break;\r\n              case 'minutes':\r\n                  this.setSeconds(59, 999);\r\n                  break;\r\n              case 'hours':\r\n                  this.setMinutes(59, 59, 999);\r\n                  break;\r\n              case 'date':\r\n                  this.setHours(23, 59, 59, 999);\r\n                  break;\r\n              case 'weekDay': {\r\n                  this.endOf(Unit.date);\r\n                  const endOfWeek = 6 + startOfTheWeek;\r\n                  if (this.weekDay === endOfWeek)\r\n                      break;\r\n                  this.manipulate(endOfWeek - this.weekDay, Unit.date);\r\n                  break;\r\n              }\r\n              case 'month':\r\n                  this.endOf(Unit.date);\r\n                  this.manipulate(1, Unit.month);\r\n                  this.setDate(0);\r\n                  break;\r\n              case 'year':\r\n                  this.endOf(Unit.date);\r\n                  this.setMonth(11, 31);\r\n                  break;\r\n          }\r\n          return this;\r\n      }\r\n      /**\r\n       * Change a {@link unit} value. Value can be positive or negative\r\n       * Example: Consider a date of \"April 30, 2021, 11:45:32.984 AM\" => new DateTime(2021, 3, 30, 11, 45, 32, 984).manipulate(1, 'month')\r\n       * would return May 30, 2021, 11:45:32.984 AM\r\n       * @param value A positive or negative number\r\n       * @param unit\r\n       */\r\n      manipulate(value, unit) {\r\n          if (this[unit] === undefined)\r\n              throw new Error(`Unit '${unit}' is not valid`);\r\n          this[unit] += value;\r\n          return this;\r\n      }\r\n      /**\r\n       * Return true if {@link compare} is before this date\r\n       * @param compare The Date/DateTime to compare\r\n       * @param unit If provided, uses {@link startOf} for\r\n       * comparison.\r\n       */\r\n      isBefore(compare, unit) {\r\n          // If the comparisons is undefined, return false\r\n          if (!DateTime.isValid(compare))\r\n              return false;\r\n          if (!unit)\r\n              return this.valueOf() < compare.valueOf();\r\n          if (this[unit] === undefined)\r\n              throw new Error(`Unit '${unit}' is not valid`);\r\n          return (this.clone.startOf(unit).valueOf() < compare.clone.startOf(unit).valueOf());\r\n      }\r\n      /**\r\n       * Return true if {@link compare} is after this date\r\n       * @param compare The Date/DateTime to compare\r\n       * @param unit If provided, uses {@link startOf} for\r\n       * comparison.\r\n       */\r\n      isAfter(compare, unit) {\r\n          // If the comparisons is undefined, return false\r\n          if (!DateTime.isValid(compare))\r\n              return false;\r\n          if (!unit)\r\n              return this.valueOf() > compare.valueOf();\r\n          if (this[unit] === undefined)\r\n              throw new Error(`Unit '${unit}' is not valid`);\r\n          return (this.clone.startOf(unit).valueOf() > compare.clone.startOf(unit).valueOf());\r\n      }\r\n      /**\r\n       * Return true if {@link compare} is same this date\r\n       * @param compare The Date/DateTime to compare\r\n       * @param unit If provided, uses {@link startOf} for\r\n       * comparison.\r\n       */\r\n      isSame(compare, unit) {\r\n          // If the comparisons is undefined, return false\r\n          if (!DateTime.isValid(compare))\r\n              return false;\r\n          if (!unit)\r\n              return this.valueOf() === compare.valueOf();\r\n          if (this[unit] === undefined)\r\n              throw new Error(`Unit '${unit}' is not valid`);\r\n          compare = DateTime.convert(compare);\r\n          return (this.clone.startOf(unit).valueOf() === compare.startOf(unit).valueOf());\r\n      }\r\n      /**\r\n       * Check if this is between two other DateTimes, optionally looking at unit scale. The match is exclusive.\r\n       * @param left\r\n       * @param right\r\n       * @param unit.\r\n       * @param inclusivity. A [ indicates inclusion of a value. A ( indicates exclusion.\r\n       * If the inclusivity parameter is used, both indicators must be passed.\r\n       */\r\n      isBetween(left, right, unit, inclusivity = '()') {\r\n          // If one of the comparisons is undefined, return false\r\n          if (!DateTime.isValid(left) || !DateTime.isValid(right))\r\n              return false;\r\n          // If a unit is provided and is not a valid property of the DateTime object, throw an error\r\n          if (unit && this[unit] === undefined) {\r\n              throw new Error(`Unit '${unit}' is not valid`);\r\n          }\r\n          const leftInclusivity = inclusivity[0] === '(';\r\n          const rightInclusivity = inclusivity[1] === ')';\r\n          const isLeftInRange = leftInclusivity\r\n              ? this.isAfter(left, unit)\r\n              : !this.isBefore(left, unit);\r\n          const isRightInRange = rightInclusivity\r\n              ? this.isBefore(right, unit)\r\n              : !this.isAfter(right, unit);\r\n          return isLeftInRange && isRightInRange;\r\n      }\r\n      /**\r\n       * Returns flattened object of the date. Does not include literals\r\n       * @param locale\r\n       * @param template\r\n       */\r\n      parts(locale = this.localization.locale, template = { dateStyle: 'full', timeStyle: 'long' }) {\r\n          const parts = {};\r\n          new Intl.DateTimeFormat(locale, template)\r\n              .formatToParts(this)\r\n              .filter((x) => x.type !== 'literal')\r\n              .forEach((x) => (parts[x.type] = x.value));\r\n          return parts;\r\n      }\r\n      /**\r\n       * Shortcut to Date.getSeconds()\r\n       */\r\n      get seconds() {\r\n          return this.getSeconds();\r\n      }\r\n      /**\r\n       * Shortcut to Date.setSeconds()\r\n       */\r\n      set seconds(value) {\r\n          this.setSeconds(value);\r\n      }\r\n      /**\r\n       * Returns two digit hours\r\n       */\r\n      get secondsFormatted() {\r\n          return this.parts(undefined, twoDigitTemplate).second;\r\n      }\r\n      /**\r\n       * Shortcut to Date.getMinutes()\r\n       */\r\n      get minutes() {\r\n          return this.getMinutes();\r\n      }\r\n      /**\r\n       * Shortcut to Date.setMinutes()\r\n       */\r\n      set minutes(value) {\r\n          this.setMinutes(value);\r\n      }\r\n      /**\r\n       * Returns two digit minutes\r\n       */\r\n      get minutesFormatted() {\r\n          return this.parts(undefined, twoDigitTemplate).minute;\r\n      }\r\n      /**\r\n       * Shortcut to Date.getHours()\r\n       */\r\n      get hours() {\r\n          return this.getHours();\r\n      }\r\n      /**\r\n       * Shortcut to Date.setHours()\r\n       */\r\n      set hours(value) {\r\n          this.setHours(value);\r\n      }\r\n      /**\r\n       * Returns two digit hour, e.g. 01...10\r\n       * @param hourCycle Providing an hour cycle will change 00 to 24 depending on the given value.\r\n       */\r\n      getHoursFormatted(hourCycle = 'h12') {\r\n          return this.parts(undefined, { ...twoDigitTemplate, hourCycle: hourCycle })\r\n              .hour;\r\n      }\r\n      /**\r\n       * Get the meridiem of the date. E.g. AM or PM.\r\n       * If the {@link locale} provides a \"dayPeriod\" then this will be returned,\r\n       * otherwise it will return AM or PM.\r\n       * @param locale\r\n       */\r\n      meridiem(locale = this.localization.locale) {\r\n          return new Intl.DateTimeFormat(locale, {\r\n              hour: 'numeric',\r\n              hour12: true,\r\n          })\r\n              .formatToParts(this)\r\n              .find((p) => p.type === 'dayPeriod')?.value;\r\n      }\r\n      /**\r\n       * Shortcut to Date.getDate()\r\n       */\r\n      get date() {\r\n          return this.getDate();\r\n      }\r\n      /**\r\n       * Shortcut to Date.setDate()\r\n       */\r\n      set date(value) {\r\n          this.setDate(value);\r\n      }\r\n      /**\r\n       * Return two digit date\r\n       */\r\n      get dateFormatted() {\r\n          return this.parts(undefined, twoDigitTemplate).day;\r\n      }\r\n      /**\r\n       * Shortcut to Date.getDay()\r\n       */\r\n      get weekDay() {\r\n          return this.getDay();\r\n      }\r\n      /**\r\n       * Shortcut to Date.getMonth()\r\n       */\r\n      get month() {\r\n          return this.getMonth();\r\n      }\r\n      /**\r\n       * Shortcut to Date.setMonth()\r\n       */\r\n      set month(value) {\r\n          const targetMonth = new Date(this.year, value + 1);\r\n          targetMonth.setDate(0);\r\n          const endOfMonth = targetMonth.getDate();\r\n          if (this.date > endOfMonth) {\r\n              this.date = endOfMonth;\r\n          }\r\n          this.setMonth(value);\r\n      }\r\n      /**\r\n       * Return two digit, human expected month. E.g. January = 1, December = 12\r\n       */\r\n      get monthFormatted() {\r\n          return this.parts(undefined, twoDigitTemplate).month;\r\n      }\r\n      /**\r\n       * Shortcut to Date.getFullYear()\r\n       */\r\n      get year() {\r\n          return this.getFullYear();\r\n      }\r\n      /**\r\n       * Shortcut to Date.setFullYear()\r\n       */\r\n      set year(value) {\r\n          this.setFullYear(value);\r\n      }\r\n      // borrowed a bunch of stuff from Luxon\r\n      /**\r\n       * Gets the week of the year\r\n       */\r\n      get week() {\r\n          const ordinal = this.computeOrdinal(), weekday = this.getUTCDay();\r\n          let weekNumber = Math.floor((ordinal - weekday + 10) / 7);\r\n          if (weekNumber < 1) {\r\n              weekNumber = this.weeksInWeekYear();\r\n          }\r\n          else if (weekNumber > this.weeksInWeekYear()) {\r\n              weekNumber = 1;\r\n          }\r\n          return weekNumber;\r\n      }\r\n      /**\r\n       * Returns the number of weeks in the year\r\n       */\r\n      weeksInWeekYear() {\r\n          const p1 = (this.year +\r\n              Math.floor(this.year / 4) -\r\n              Math.floor(this.year / 100) +\r\n              Math.floor(this.year / 400)) %\r\n              7, last = this.year - 1, p2 = (last +\r\n              Math.floor(last / 4) -\r\n              Math.floor(last / 100) +\r\n              Math.floor(last / 400)) %\r\n              7;\r\n          return p1 === 4 || p2 === 3 ? 53 : 52;\r\n      }\r\n      /**\r\n       * Returns true or false depending on if the year is a leap year or not.\r\n       */\r\n      get isLeapYear() {\r\n          return (this.year % 4 === 0 && (this.year % 100 !== 0 || this.year % 400 === 0));\r\n      }\r\n      computeOrdinal() {\r\n          return (this.date +\r\n              (this.isLeapYear ? this.leapLadder : this.nonLeapLadder)[this.month]);\r\n      }\r\n      /**\r\n       * Returns a list of month values based on the current locale\r\n       */\r\n      getAllMonths(format = 'long') {\r\n          const applyFormat = new Intl.DateTimeFormat(this.localization.locale, {\r\n              month: format,\r\n          }).format;\r\n          return [...Array(12).keys()].map((m) => applyFormat(new Date(2021, m)));\r\n      }\r\n      /**\r\n       * Replaces an expanded token set (e.g. LT/LTS)\r\n       */\r\n      replaceTokens(formatStr, formats) {\r\n          /***\r\n           * _ => match\r\n           * a => first capture group. Anything between [ and ]\r\n           * b => second capture group\r\n           */\r\n          return formatStr.replace(/(\\[[^[\\]]*])|(LTS?|l{1,4}|L{1,4})/g, (_, a, b) => {\r\n              const B = b && b.toUpperCase();\r\n              return a || formats[B] || DefaultFormatLocalization$1.dateFormats[B];\r\n          });\r\n      }\r\n      parseTwoDigitYear(input) {\r\n          input = +input;\r\n          return input + (input > 68 ? 1900 : 2000);\r\n      }\r\n      offsetFromString(string) {\r\n          if (!string)\r\n              return 0;\r\n          if (string === 'Z')\r\n              return 0;\r\n          const [first, second, third] = string.match(/([+-]|\\d\\d)/g);\r\n          const minutes = +(second * 60) + (+third || 0);\r\n          const signed = first === '+' ? -minutes : minutes;\r\n          return minutes === 0 ? 0 : signed; // eslint-disable-line no-nested-ternary\r\n      }\r\n      /**\r\n       * z = -4, zz = -04, zzz = -0400\r\n       * @param date\r\n       * @param style\r\n       * @private\r\n       */\r\n      zoneInformation(date, style) {\r\n          let name = date\r\n              .parts(this.localization.locale, { timeZoneName: 'longOffset' })\r\n              .timeZoneName.replace('GMT', '')\r\n              .replace(':', '');\r\n          const negative = name.includes('-');\r\n          name = name.replace('-', '');\r\n          if (style === 'z')\r\n              name = name.substring(1, 2);\r\n          else if (style === 'zz')\r\n              name = name.substring(0, 2);\r\n          return `${negative ? '-' : ''}${name}`;\r\n      }\r\n      addInput(property) {\r\n          return (time, input) => {\r\n              time[property] = +input;\r\n          };\r\n      }\r\n      meridiemMatch(input) {\r\n          const meridiem = new Intl.DateTimeFormat(this.localization.locale, {\r\n              hour: 'numeric',\r\n              hour12: true,\r\n          })\r\n              .formatToParts(new Date(2022, 3, 4, 13))\r\n              .find((p) => p.type === 'dayPeriod')?.value;\r\n          return input.toLowerCase() === meridiem.toLowerCase();\r\n      }\r\n      correctHours(time) {\r\n          const { afternoon } = time;\r\n          if (afternoon !== undefined) {\r\n              const { hours } = time;\r\n              if (afternoon) {\r\n                  if (hours < 12) {\r\n                      time.hours += 12;\r\n                  }\r\n              }\r\n              else if (hours === 12) {\r\n                  time.hours = 0;\r\n              }\r\n              delete time.afternoon;\r\n          }\r\n      }\r\n      makeParser(format) {\r\n          format = this.replaceTokens(format, this.localization.dateFormats);\r\n          const array = format.match(this.formattingTokens);\r\n          const { length } = array;\r\n          for (let i = 0; i < length; i += 1) {\r\n              const token = array[i];\r\n              const parseTo = this.expressions[token];\r\n              const regex = parseTo && parseTo[0];\r\n              const parser = parseTo && parseTo[1];\r\n              if (parser) {\r\n                  array[i] = { regex, parser };\r\n              }\r\n              else {\r\n                  array[i] = token.replace(/^\\[[^[\\]]*]$/g, '');\r\n              }\r\n          }\r\n          return (input) => {\r\n              const time = {\r\n                  hours: 0,\r\n                  minutes: 0,\r\n                  seconds: 0,\r\n                  milliseconds: 0,\r\n              };\r\n              for (let i = 0, start = 0; i < length; i += 1) {\r\n                  const token = array[i];\r\n                  if (typeof token === 'string') {\r\n                      start += token.length;\r\n                  }\r\n                  else {\r\n                      const { regex, parser } = token;\r\n                      const part = input.slice(start);\r\n                      const match = regex.exec(part);\r\n                      const value = match[0];\r\n                      parser.call(this, time, value);\r\n                      input = input.replace(value, '');\r\n                  }\r\n              }\r\n              this.correctHours(time);\r\n              return time;\r\n          };\r\n      }\r\n      /**\r\n       * Attempts to create a DateTime from a string.\r\n       * @param input date as string\r\n       * @param localization provides the date template the string is in via the format property\r\n       */\r\n      //eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n      static fromString(input, localization) {\r\n          if (!localization?.format) {\r\n              Namespace.errorMessages.customDateFormatError('No format was provided');\r\n          }\r\n          try {\r\n              const dt = new DateTime();\r\n              dt.setLocalization(localization);\r\n              if (['x', 'X'].indexOf(localization.format) > -1)\r\n                  return new DateTime((localization.format === 'X' ? 1000 : 1) * +input);\r\n              const parser = dt.makeParser(localization.format);\r\n              const { year, month, day, hours, minutes, seconds, milliseconds, zone } = parser(input);\r\n              const d = day || (!year && !month ? dt.getDate() : 1);\r\n              const y = year || dt.getFullYear();\r\n              let M = 0;\r\n              if (!(year && !month)) {\r\n                  M = month > 0 ? month - 1 : dt.getMonth();\r\n              }\r\n              if (zone) {\r\n                  return new DateTime(Date.UTC(y, M, d, hours, minutes, seconds, milliseconds + zone.offset * 60 * 1000));\r\n              }\r\n              return new DateTime(y, M, d, hours, minutes, seconds, milliseconds);\r\n          }\r\n          catch (e) {\r\n              Namespace.errorMessages.customDateFormatError(`Unable to parse provided input: ${input}, format: ${localization.format}`);\r\n          }\r\n      }\r\n      /**\r\n       * Returns a string format.\r\n       * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\r\n       * for valid templates and locale objects\r\n       * @param template An optional object. If provided, method will use Intl., otherwise the localizations format properties\r\n       * @param locale Can be a string or an array of strings. Uses browser defaults otherwise.\r\n       */\r\n      format(template, locale = this.localization.locale) {\r\n          if (template && typeof template === 'object')\r\n              return new Intl.DateTimeFormat(locale, template).format(this);\r\n          const formatString = this.replaceTokens(\r\n          //try template first\r\n          template ||\r\n              //otherwise try localization format\r\n              this.localization.format ||\r\n              //otherwise try date + time\r\n              `${DefaultFormatLocalization$1.dateFormats.L}, ${DefaultFormatLocalization$1.dateFormats.LT}`, this.localization.dateFormats);\r\n          const formatter = (template) => new Intl.DateTimeFormat(this.localization.locale, template).format(this);\r\n          if (!this.localization.hourCycle)\r\n              this.localization.hourCycle = guessHourCycle(this.localization.locale);\r\n          //if the format asks for a twenty-four-hour string but the hour cycle is not, then make a base guess\r\n          const HHCycle = this.localization.hourCycle.startsWith('h1')\r\n              ? 'h24'\r\n              : this.localization.hourCycle;\r\n          const hhCycle = this.localization.hourCycle.startsWith('h2')\r\n              ? 'h12'\r\n              : this.localization.hourCycle;\r\n          const matches = {\r\n              yy: formatter({ year: '2-digit' }),\r\n              yyyy: this.year,\r\n              M: formatter({ month: 'numeric' }),\r\n              MM: this.monthFormatted,\r\n              MMM: this.getAllMonths('short')[this.getMonth()],\r\n              MMMM: this.getAllMonths()[this.getMonth()],\r\n              d: this.date,\r\n              dd: this.dateFormatted,\r\n              ddd: formatter({ weekday: 'short' }),\r\n              dddd: formatter({ weekday: 'long' }),\r\n              H: this.getHours(),\r\n              HH: this.getHoursFormatted(HHCycle),\r\n              h: this.hours > 12 ? this.hours - 12 : this.hours,\r\n              hh: this.getHoursFormatted(hhCycle),\r\n              t: this.meridiem(),\r\n              T: this.meridiem().toUpperCase(),\r\n              m: this.minutes,\r\n              mm: this.minutesFormatted,\r\n              s: this.seconds,\r\n              ss: this.secondsFormatted,\r\n              fff: this.getMilliseconds(),\r\n              // z: this.zoneInformation(dateTime, 'z'), //-4\r\n              // zz: this.zoneInformation(dateTime, 'zz'), //-04\r\n              // zzz: this.zoneInformation(dateTime, 'zzz') //-0400\r\n          };\r\n          return formatString\r\n              .replace(this.dateTimeRegex, (match, $1) => {\r\n              return $1 || matches[match];\r\n          })\r\n              .replace(/\\[/g, '')\r\n              .replace(/]/g, '');\r\n      }\r\n  }\n\n  class ServiceLocator {\r\n      constructor() {\r\n          this.cache = new Map();\r\n      }\r\n      locate(identifier) {\r\n          const service = this.cache.get(identifier);\r\n          if (service)\r\n              return service;\r\n          const value = new identifier();\r\n          this.cache.set(identifier, value);\r\n          return value;\r\n      }\r\n  }\r\n  const setupServiceLocator = () => {\r\n      serviceLocator = new ServiceLocator();\r\n  };\r\n  let serviceLocator;\n\n  const CalendarModes = [\r\n      {\r\n          name: 'calendar',\r\n          className: Namespace.css.daysContainer,\r\n          unit: Unit.month,\r\n          step: 1,\r\n      },\r\n      {\r\n          name: 'months',\r\n          className: Namespace.css.monthsContainer,\r\n          unit: Unit.year,\r\n          step: 1,\r\n      },\r\n      {\r\n          name: 'years',\r\n          className: Namespace.css.yearsContainer,\r\n          unit: Unit.year,\r\n          step: 10,\r\n      },\r\n      {\r\n          name: 'decades',\r\n          className: Namespace.css.decadesContainer,\r\n          unit: Unit.year,\r\n          step: 100,\r\n      },\r\n  ];\n\n  class OptionsStore {\r\n      constructor() {\r\n          this._currentCalendarViewMode = 0;\r\n          this._viewDate = new DateTime();\r\n          this.minimumCalendarViewMode = 0;\r\n          this.currentView = 'calendar';\r\n      }\r\n      get currentCalendarViewMode() {\r\n          return this._currentCalendarViewMode;\r\n      }\r\n      set currentCalendarViewMode(value) {\r\n          this._currentCalendarViewMode = value;\r\n          this.currentView = CalendarModes[value].name;\r\n      }\r\n      get viewDate() {\r\n          return this._viewDate;\r\n      }\r\n      set viewDate(v) {\r\n          this._viewDate = v;\r\n          if (this.options)\r\n              this.options.viewDate = v;\r\n      }\r\n      /**\r\n       * When switching back to the calendar from the clock,\r\n       * this sets currentView to the correct calendar view.\r\n       */\r\n      refreshCurrentView() {\r\n          this.currentView = CalendarModes[this.currentCalendarViewMode].name;\r\n      }\r\n      get isTwelveHour() {\r\n          return ['h12', 'h11'].includes(this.options.localization.hourCycle);\r\n      }\r\n  }\n\n  /**\r\n   * Main class for date validation rules based on the options provided.\r\n   */\r\n  class Validation {\r\n      constructor() {\r\n          this.optionsStore = serviceLocator.locate(OptionsStore);\r\n      }\r\n      /**\r\n       * Checks to see if the target date is valid based on the rules provided in the options.\r\n       * Granularity can be provided to check portions of the date instead of the whole.\r\n       * @param targetDate\r\n       * @param granularity\r\n       */\r\n      isValid(targetDate, granularity) {\r\n          if (!this._enabledDisabledDatesIsValid(granularity, targetDate))\r\n              return false;\r\n          if (granularity !== Unit.month &&\r\n              granularity !== Unit.year &&\r\n              this.optionsStore.options.restrictions.daysOfWeekDisabled?.length > 0 &&\r\n              this.optionsStore.options.restrictions.daysOfWeekDisabled.indexOf(targetDate.weekDay) !== -1)\r\n              return false;\r\n          if (!this._minMaxIsValid(granularity, targetDate))\r\n              return false;\r\n          if (granularity === Unit.hours ||\r\n              granularity === Unit.minutes ||\r\n              granularity === Unit.seconds) {\r\n              if (!this._enabledDisabledHoursIsValid(targetDate))\r\n                  return false;\r\n              if (this.optionsStore.options.restrictions.disabledTimeIntervals?.filter((internal) => targetDate.isBetween(internal.from, internal.to)).length !== 0)\r\n                  return false;\r\n          }\r\n          return true;\r\n      }\r\n      _enabledDisabledDatesIsValid(granularity, targetDate) {\r\n          if (granularity !== Unit.date)\r\n              return true;\r\n          if (this.optionsStore.options.restrictions.disabledDates.length > 0 &&\r\n              this._isInDisabledDates(targetDate)) {\r\n              return false;\r\n          }\r\n          // noinspection RedundantIfStatementJS\r\n          if (this.optionsStore.options.restrictions.enabledDates.length > 0 &&\r\n              !this._isInEnabledDates(targetDate)) {\r\n              return false;\r\n          }\r\n          return true;\r\n      }\r\n      /**\r\n       * Checks to see if the disabledDates option is in use and returns true (meaning invalid)\r\n       * if the `testDate` is with in the array. Granularity is by date.\r\n       * @param testDate\r\n       * @private\r\n       */\r\n      _isInDisabledDates(testDate) {\r\n          if (!this.optionsStore.options.restrictions.disabledDates ||\r\n              this.optionsStore.options.restrictions.disabledDates.length === 0)\r\n              return false;\r\n          return !!this.optionsStore.options.restrictions.disabledDates.find((x) => x.isSame(testDate, Unit.date));\r\n      }\r\n      /**\r\n       * Checks to see if the enabledDates option is in use and returns true (meaning valid)\r\n       * if the `testDate` is with in the array. Granularity is by date.\r\n       * @param testDate\r\n       * @private\r\n       */\r\n      _isInEnabledDates(testDate) {\r\n          if (!this.optionsStore.options.restrictions.enabledDates ||\r\n              this.optionsStore.options.restrictions.enabledDates.length === 0)\r\n              return true;\r\n          return !!this.optionsStore.options.restrictions.enabledDates.find((x) => x.isSame(testDate, Unit.date));\r\n      }\r\n      _minMaxIsValid(granularity, targetDate) {\r\n          if (this.optionsStore.options.restrictions.minDate &&\r\n              targetDate.isBefore(this.optionsStore.options.restrictions.minDate, granularity)) {\r\n              return false;\r\n          }\r\n          // noinspection RedundantIfStatementJS\r\n          if (this.optionsStore.options.restrictions.maxDate &&\r\n              targetDate.isAfter(this.optionsStore.options.restrictions.maxDate, granularity)) {\r\n              return false;\r\n          }\r\n          return true;\r\n      }\r\n      _enabledDisabledHoursIsValid(targetDate) {\r\n          if (this.optionsStore.options.restrictions.disabledHours.length > 0 &&\r\n              this._isInDisabledHours(targetDate)) {\r\n              return false;\r\n          }\r\n          // noinspection RedundantIfStatementJS\r\n          if (this.optionsStore.options.restrictions.enabledHours.length > 0 &&\r\n              !this._isInEnabledHours(targetDate)) {\r\n              return false;\r\n          }\r\n          return true;\r\n      }\r\n      /**\r\n       * Checks to see if the disabledHours option is in use and returns true (meaning invalid)\r\n       * if the `testDate` is with in the array. Granularity is by hours.\r\n       * @param testDate\r\n       * @private\r\n       */\r\n      _isInDisabledHours(testDate) {\r\n          if (!this.optionsStore.options.restrictions.disabledHours ||\r\n              this.optionsStore.options.restrictions.disabledHours.length === 0)\r\n              return false;\r\n          const formattedDate = testDate.hours;\r\n          return this.optionsStore.options.restrictions.disabledHours.includes(formattedDate);\r\n      }\r\n      /**\r\n       * Checks to see if the enabledHours option is in use and returns true (meaning valid)\r\n       * if the `testDate` is with in the array. Granularity is by hours.\r\n       * @param testDate\r\n       * @private\r\n       */\r\n      _isInEnabledHours(testDate) {\r\n          if (!this.optionsStore.options.restrictions.enabledHours ||\r\n              this.optionsStore.options.restrictions.enabledHours.length === 0)\r\n              return true;\r\n          const formattedDate = testDate.hours;\r\n          return this.optionsStore.options.restrictions.enabledHours.includes(formattedDate);\r\n      }\r\n      dateRangeIsValid(dates, index, target) {\r\n          // if we're not using the option, then return valid\r\n          if (!this.optionsStore.options.dateRange)\r\n              return true;\r\n          // if we've only selected 0..1 dates, and we're not setting the end date\r\n          // then return valid. We only want to validate the range if both are selected,\r\n          // because the other validation on the target has already occurred.\r\n          if (dates.length !== 2 && index !== 1)\r\n              return true;\r\n          // initialize start date\r\n          const start = dates[0].clone;\r\n          // check if start date is not the same as target date\r\n          if (start.isSame(target, Unit.date))\r\n              return true;\r\n          // add one day to start; start has already been validated\r\n          start.manipulate(1, Unit.date);\r\n          // check each date in the range to make sure it's valid\r\n          while (!start.isSame(target, Unit.date)) {\r\n              const valid = this.isValid(start, Unit.date);\r\n              if (!valid)\r\n                  return false;\r\n              start.manipulate(1, Unit.date);\r\n          }\r\n          return true;\r\n      }\r\n  }\n\n  class EventEmitter {\r\n      constructor() {\r\n          this.subscribers = [];\r\n      }\r\n      subscribe(callback) {\r\n          this.subscribers.push(callback);\r\n          return this.unsubscribe.bind(this, this.subscribers.length - 1);\r\n      }\r\n      unsubscribe(index) {\r\n          this.subscribers.splice(index, 1);\r\n      }\r\n      emit(value) {\r\n          this.subscribers.forEach((callback) => {\r\n              callback(value);\r\n          });\r\n      }\r\n      destroy() {\r\n          this.subscribers = null;\r\n          this.subscribers = [];\r\n      }\r\n  }\r\n  class EventEmitters {\r\n      constructor() {\r\n          this.triggerEvent = new EventEmitter();\r\n          this.viewUpdate = new EventEmitter();\r\n          this.updateDisplay = new EventEmitter();\r\n          this.action = new EventEmitter(); //eslint-disable-line @typescript-eslint/no-explicit-any\r\n          this.updateViewDate = new EventEmitter();\r\n      }\r\n      destroy() {\r\n          this.triggerEvent.destroy();\r\n          this.viewUpdate.destroy();\r\n          this.updateDisplay.destroy();\r\n          this.action.destroy();\r\n          this.updateViewDate.destroy();\r\n      }\r\n  }\n\n  const defaultEnLocalization = {\r\n      clear: 'Clear selection',\r\n      close: 'Close the picker',\r\n      dateFormats: DefaultFormatLocalization$1.dateFormats,\r\n      dayViewHeaderFormat: { month: 'long', year: '2-digit' },\r\n      decrementHour: 'Decrement Hour',\r\n      decrementMinute: 'Decrement Minute',\r\n      decrementSecond: 'Decrement Second',\r\n      format: DefaultFormatLocalization$1.format,\r\n      hourCycle: DefaultFormatLocalization$1.hourCycle,\r\n      incrementHour: 'Increment Hour',\r\n      incrementMinute: 'Increment Minute',\r\n      incrementSecond: 'Increment Second',\r\n      locale: DefaultFormatLocalization$1.locale,\r\n      nextCentury: 'Next Century',\r\n      nextDecade: 'Next Decade',\r\n      nextMonth: 'Next Month',\r\n      nextYear: 'Next Year',\r\n      ordinal: DefaultFormatLocalization$1.ordinal,\r\n      pickHour: 'Pick Hour',\r\n      pickMinute: 'Pick Minute',\r\n      pickSecond: 'Pick Second',\r\n      previousCentury: 'Previous Century',\r\n      previousDecade: 'Previous Decade',\r\n      previousMonth: 'Previous Month',\r\n      previousYear: 'Previous Year',\r\n      selectDate: 'Select Date',\r\n      selectDecade: 'Select Decade',\r\n      selectMonth: 'Select Month',\r\n      selectTime: 'Select Time',\r\n      selectYear: 'Select Year',\r\n      startOfTheWeek: 0,\r\n      today: 'Go to today',\r\n      toggleMeridiem: 'Toggle Meridiem',\r\n  };\r\n  const DefaultOptions = {\r\n      allowInputToggle: false,\r\n      container: undefined,\r\n      dateRange: false,\r\n      debug: false,\r\n      defaultDate: undefined,\r\n      display: {\r\n          icons: {\r\n              type: 'icons',\r\n              time: 'fa-solid fa-clock',\r\n              date: 'fa-solid fa-calendar',\r\n              up: 'fa-solid fa-arrow-up',\r\n              down: 'fa-solid fa-arrow-down',\r\n              previous: 'fa-solid fa-chevron-left',\r\n              next: 'fa-solid fa-chevron-right',\r\n              today: 'fa-solid fa-calendar-check',\r\n              clear: 'fa-solid fa-trash',\r\n              close: 'fa-solid fa-xmark',\r\n          },\r\n          sideBySide: false,\r\n          calendarWeeks: false,\r\n          viewMode: 'calendar',\r\n          toolbarPlacement: 'bottom',\r\n          keepOpen: false,\r\n          buttons: {\r\n              today: false,\r\n              clear: false,\r\n              close: false,\r\n          },\r\n          components: {\r\n              calendar: true,\r\n              date: true,\r\n              month: true,\r\n              year: true,\r\n              decades: true,\r\n              clock: true,\r\n              hours: true,\r\n              minutes: true,\r\n              seconds: false,\r\n              useTwentyfourHour: undefined,\r\n          },\r\n          inline: false,\r\n          theme: 'auto',\r\n          placement: 'bottom',\r\n      },\r\n      keepInvalid: false,\r\n      localization: defaultEnLocalization,\r\n      meta: {},\r\n      multipleDates: false,\r\n      multipleDatesSeparator: '; ',\r\n      promptTimeOnDateChange: false,\r\n      promptTimeOnDateChangeTransitionDelay: 200,\r\n      restrictions: {\r\n          minDate: undefined,\r\n          maxDate: undefined,\r\n          disabledDates: [],\r\n          enabledDates: [],\r\n          daysOfWeekDisabled: [],\r\n          disabledTimeIntervals: [],\r\n          disabledHours: [],\r\n          enabledHours: [],\r\n      },\r\n      stepping: 1,\r\n      useCurrent: true,\r\n      viewDate: new DateTime(),\r\n  };\r\n  const DefaultEnLocalization = { ...defaultEnLocalization };\n\n  /**\r\n   * Attempts to prove `d` is a DateTime or Date or can be converted into one.\r\n   * @param d If a string will attempt creating a date from it.\r\n   * @param localization object containing locale and format settings. Only used with the custom formats\r\n   * @private\r\n   */\r\n  function tryConvertToDateTime(d, localization) {\r\n      if (!d)\r\n          return null;\r\n      if (d.constructor.name === DateTime.name)\r\n          return d;\r\n      if (d.constructor.name === Date.name) {\r\n          return DateTime.convert(d);\r\n      }\r\n      if (typeof d === typeof '') {\r\n          const dateTime = DateTime.fromString(d, localization);\r\n          if (JSON.stringify(dateTime) === 'null') {\r\n              return null;\r\n          }\r\n          return dateTime;\r\n      }\r\n      return null;\r\n  }\r\n  /**\r\n   * Attempts to convert `d` to a DateTime object\r\n   * @param d value to convert\r\n   * @param optionName Provides text to error messages e.g. disabledDates\r\n   * @param localization object containing locale and format settings. Only used with the custom formats\r\n   */\r\n  function convertToDateTime(d, optionName, localization) {\r\n      if (typeof d === typeof '' && optionName !== 'input') {\r\n          Namespace.errorMessages.dateString();\r\n      }\r\n      const converted = tryConvertToDateTime(d, localization);\r\n      if (!converted) {\r\n          Namespace.errorMessages.failedToParseDate(optionName, d, optionName === 'input');\r\n      }\r\n      return converted;\r\n  }\r\n  /**\r\n   * Type checks that `value` is an array of Date or DateTime\r\n   * @param optionName Provides text to error messages e.g. disabledDates\r\n   * @param value Option value\r\n   * @param providedType Used to provide text to error messages\r\n   * @param localization\r\n   */\r\n  function typeCheckDateArray(optionName, value, //eslint-disable-line @typescript-eslint/no-explicit-any\r\n  providedType, localization) {\r\n      if (!Array.isArray(value)) {\r\n          Namespace.errorMessages.typeMismatch(optionName, providedType, 'array of DateTime or Date');\r\n      }\r\n      for (let i = 0; i < value.length; i++) {\r\n          const d = value[i];\r\n          const dateTime = convertToDateTime(d, optionName, localization);\r\n          if (!dateTime) {\r\n              Namespace.errorMessages.typeMismatch(optionName, typeof d, 'DateTime or Date');\r\n          }\r\n          dateTime.setLocalization(localization ?? DefaultFormatLocalization$1);\r\n          value[i] = dateTime;\r\n      }\r\n  }\r\n  /**\r\n   * Type checks that `value` is an array of numbers\r\n   * @param optionName Provides text to error messages e.g. disabledDates\r\n   * @param value Option value\r\n   * @param providedType Used to provide text to error messages\r\n   */\r\n  function typeCheckNumberArray(optionName, value, //eslint-disable-line @typescript-eslint/no-explicit-any\r\n  providedType) {\r\n      if (!Array.isArray(value) || value.some((x) => typeof x !== typeof 0)) {\r\n          Namespace.errorMessages.typeMismatch(optionName, providedType, 'array of numbers');\r\n      }\r\n  }\n\n  function mandatoryDate(key) {\r\n      return ({ value, providedType, localization }) => {\r\n          const dateTime = convertToDateTime(value, key, localization);\r\n          if (dateTime !== undefined) {\r\n              dateTime.setLocalization(localization);\r\n              return dateTime;\r\n          }\r\n          Namespace.errorMessages.typeMismatch(key, providedType, 'DateTime or Date');\r\n      };\r\n  }\r\n  function optionalDate(key) {\r\n      const mandatory = mandatoryDate(key);\r\n      return (args) => {\r\n          if (args.value === undefined) {\r\n              return args.value;\r\n          }\r\n          return mandatory(args);\r\n      };\r\n  }\r\n  function numbersInRange(key, lower, upper) {\r\n      return ({ value, providedType }) => {\r\n          if (value === undefined) {\r\n              return [];\r\n          }\r\n          typeCheckNumberArray(key, value, providedType);\r\n          if (value.some((x) => x < lower || x > upper))\r\n              Namespace.errorMessages.numbersOutOfRange(key, lower, upper);\r\n          return value;\r\n      };\r\n  }\r\n  function validHourRange(key) {\r\n      return numbersInRange(key, 0, 23);\r\n  }\r\n  function validDateArray(key) {\r\n      return ({ value, providedType, localization }) => {\r\n          if (value === undefined) {\r\n              return [];\r\n          }\r\n          typeCheckDateArray(key, value, providedType, localization);\r\n          return value;\r\n      };\r\n  }\r\n  function validKeyOption(keyOptions) {\r\n      return ({ value, path }) => {\r\n          if (!keyOptions.includes(value))\r\n              Namespace.errorMessages.unexpectedOptionValue(path.substring(1), value, keyOptions);\r\n          return value;\r\n      };\r\n  }\r\n  const optionProcessors = Object.freeze({\r\n      defaultDate: mandatoryDate('defaultDate'),\r\n      viewDate: mandatoryDate('viewDate'),\r\n      minDate: optionalDate('restrictions.minDate'),\r\n      maxDate: optionalDate('restrictions.maxDate'),\r\n      disabledHours: validHourRange('restrictions.disabledHours'),\r\n      enabledHours: validHourRange('restrictions.enabledHours'),\r\n      disabledDates: validDateArray('restrictions.disabledDates'),\r\n      enabledDates: validDateArray('restrictions.enabledDates'),\r\n      daysOfWeekDisabled: numbersInRange('restrictions.daysOfWeekDisabled', 0, 6),\r\n      disabledTimeIntervals: ({ key, value, providedType, localization }) => {\r\n          if (value === undefined) {\r\n              return [];\r\n          }\r\n          if (!Array.isArray(value)) {\r\n              Namespace.errorMessages.typeMismatch(key, providedType, 'array of { from: DateTime|Date, to: DateTime|Date }');\r\n          }\r\n          const valueObject = value; //eslint-disable-line @typescript-eslint/no-explicit-any\r\n          for (let i = 0; i < valueObject.length; i++) {\r\n              Object.keys(valueObject[i]).forEach((vk) => {\r\n                  const subOptionName = `${key}[${i}].${vk}`;\r\n                  const d = valueObject[i][vk];\r\n                  const dateTime = convertToDateTime(d, subOptionName, localization);\r\n                  if (!dateTime) {\r\n                      Namespace.errorMessages.typeMismatch(subOptionName, typeof d, 'DateTime or Date');\r\n                  }\r\n                  dateTime.setLocalization(localization);\r\n                  valueObject[i][vk] = dateTime;\r\n              });\r\n          }\r\n          return valueObject;\r\n      },\r\n      toolbarPlacement: validKeyOption(['top', 'bottom', 'default']),\r\n      type: validKeyOption(['icons', 'sprites']),\r\n      viewMode: validKeyOption([\r\n          'clock',\r\n          'calendar',\r\n          'months',\r\n          'years',\r\n          'decades',\r\n      ]),\r\n      theme: validKeyOption(['light', 'dark', 'auto']),\r\n      placement: validKeyOption(['top', 'bottom']),\r\n      meta: ({ value }) => value,\r\n      dayViewHeaderFormat: ({ value }) => value,\r\n      container: ({ value, path }) => {\r\n          if (value &&\r\n              !(value instanceof HTMLElement ||\r\n                  value instanceof Element ||\r\n                  value?.appendChild)) {\r\n              Namespace.errorMessages.typeMismatch(path.substring(1), typeof value, 'HTMLElement');\r\n          }\r\n          return value;\r\n      },\r\n      useTwentyfourHour: ({ value, path, providedType, defaultType }) => {\r\n          Namespace.errorMessages.deprecatedWarning('useTwentyfourHour', 'Please use \"options.localization.hourCycle\" instead');\r\n          if (value === undefined || providedType === 'boolean')\r\n              return value;\r\n          Namespace.errorMessages.typeMismatch(path, providedType, defaultType);\r\n      },\r\n      hourCycle: validKeyOption(['h11', 'h12', 'h23', 'h24']),\r\n  });\r\n  const defaultProcessor = ({ value, defaultType, providedType, path, }) => {\r\n      switch (defaultType) {\r\n          case 'boolean':\r\n              return value === 'true' || value === true;\r\n          case 'number':\r\n              return +value;\r\n          case 'string':\r\n              return value.toString();\r\n          case 'object':\r\n              return {};\r\n          case 'function':\r\n              return value;\r\n          default:\r\n              Namespace.errorMessages.typeMismatch(path, providedType, defaultType);\r\n      }\r\n  };\r\n  function processKey(args) {\r\n      return (optionProcessors[args.key] || defaultProcessor)(args);\r\n  }\n\n  class OptionConverter {\r\n      static deepCopy(input) {\r\n          const o = {};\r\n          Object.keys(input).forEach((key) => {\r\n              const inputElement = input[key];\r\n              if (inputElement instanceof DateTime) {\r\n                  o[key] = inputElement.clone;\r\n                  return;\r\n              }\r\n              else if (inputElement instanceof Date) {\r\n                  o[key] = new Date(inputElement.valueOf());\r\n                  return;\r\n              }\r\n              o[key] = inputElement;\r\n              if (typeof inputElement !== 'object' ||\r\n                  inputElement instanceof HTMLElement ||\r\n                  inputElement instanceof Element)\r\n                  return;\r\n              if (!Array.isArray(inputElement)) {\r\n                  o[key] = OptionConverter.deepCopy(inputElement);\r\n              }\r\n          });\r\n          return o;\r\n      }\r\n      /**\r\n       * Finds value out of an object based on a string, period delimited, path\r\n       * @param paths\r\n       * @param obj\r\n       */\r\n      static objectPath(paths, obj) {\r\n          if (paths.charAt(0) === '.')\r\n              paths = paths.slice(1);\r\n          if (!paths)\r\n              return obj;\r\n          return paths\r\n              .split('.')\r\n              .reduce((value, key) => OptionConverter.isValue(value) || OptionConverter.isValue(value[key])\r\n              ? value[key]\r\n              : undefined, obj);\r\n      }\r\n      /**\r\n       * The spread operator caused sub keys to be missing after merging.\r\n       * This is to fix that issue by using spread on the child objects first.\r\n       * Also handles complex options like disabledDates\r\n       * @param provided An option from new providedOptions\r\n       * @param copyTo Destination object. This was added to prevent reference copies\r\n       * @param localization\r\n       * @param path\r\n       */\r\n      static spread(provided, copyTo, localization, path = '') {\r\n          const defaultOptions = OptionConverter.objectPath(path, DefaultOptions);\r\n          const unsupportedOptions = Object.keys(provided).filter((x) => !Object.keys(defaultOptions).includes(x));\r\n          if (unsupportedOptions.length > 0) {\r\n              const flattenedOptions = OptionConverter.getFlattenDefaultOptions();\r\n              const errors = unsupportedOptions.map((x) => {\r\n                  let error = `\"${path}.${x}\" in not a known option.`;\r\n                  const didYouMean = flattenedOptions.find((y) => y.includes(x));\r\n                  if (didYouMean)\r\n                      error += ` Did you mean \"${didYouMean}\"?`;\r\n                  return error;\r\n              });\r\n              Namespace.errorMessages.unexpectedOptions(errors);\r\n          }\r\n          Object.keys(provided)\r\n              .filter((key) => key !== '__proto__' && key !== 'constructor')\r\n              .forEach((key) => {\r\n              path += `.${key}`;\r\n              if (path.charAt(0) === '.')\r\n                  path = path.slice(1);\r\n              const defaultOptionValue = defaultOptions[key];\r\n              const providedType = typeof provided[key];\r\n              const defaultType = typeof defaultOptionValue;\r\n              const value = provided[key];\r\n              if (value === undefined || value === null) {\r\n                  copyTo[key] = value;\r\n                  path = path.substring(0, path.lastIndexOf(`.${key}`));\r\n                  return;\r\n              }\r\n              if (typeof defaultOptionValue === 'object' &&\r\n                  !Array.isArray(provided[key]) &&\r\n                  !(defaultOptionValue instanceof Date ||\r\n                      OptionConverter.ignoreProperties.includes(key))) {\r\n                  OptionConverter.spread(provided[key], copyTo[key], localization, path);\r\n              }\r\n              else {\r\n                  copyTo[key] = OptionConverter.processKey(key, value, providedType, defaultType, path, localization);\r\n              }\r\n              path = path.substring(0, path.lastIndexOf(`.${key}`));\r\n          });\r\n      }\r\n      static processKey(key, value, //eslint-disable-line @typescript-eslint/no-explicit-any\r\n      providedType, defaultType, path, localization) {\r\n          return processKey({\r\n              key,\r\n              value,\r\n              providedType,\r\n              defaultType,\r\n              path,\r\n              localization,\r\n          });\r\n      }\r\n      static _mergeOptions(providedOptions, mergeTo) {\r\n          const newConfig = OptionConverter.deepCopy(mergeTo);\r\n          //see if the options specify a locale\r\n          const localization = mergeTo.localization?.locale !== 'default'\r\n              ? mergeTo.localization\r\n              : providedOptions?.localization || DefaultOptions.localization;\r\n          OptionConverter.spread(providedOptions, newConfig, localization, '');\r\n          return newConfig;\r\n      }\r\n      static _dataToOptions(element, options) {\r\n          const eData = JSON.parse(JSON.stringify(element.dataset));\r\n          if (eData?.tdTargetInput)\r\n              delete eData.tdTargetInput;\r\n          if (eData?.tdTargetToggle)\r\n              delete eData.tdTargetToggle;\r\n          if (!eData ||\r\n              Object.keys(eData).length === 0 ||\r\n              eData.constructor !== DOMStringMap)\r\n              return options;\r\n          const dataOptions = {};\r\n          // because dataset returns camelCase including the 'td' key the option\r\n          // key won't align\r\n          const objectToNormalized = (object) => {\r\n              const lowered = {};\r\n              Object.keys(object).forEach((x) => {\r\n                  lowered[x.toLowerCase()] = x;\r\n              });\r\n              return lowered;\r\n          };\r\n          const normalizeObject = this.normalizeObject(objectToNormalized);\r\n          const optionsLower = objectToNormalized(options);\r\n          Object.keys(eData)\r\n              .filter((x) => x.startsWith(Namespace.dataKey))\r\n              .map((x) => x.substring(2))\r\n              .forEach((key) => {\r\n              let keyOption = optionsLower[key.toLowerCase()];\r\n              // dataset merges dashes to camelCase... yay\r\n              // i.e. key = display_components_seconds\r\n              if (key.includes('_')) {\r\n                  // [display, components, seconds]\r\n                  const split = key.split('_');\r\n                  // display\r\n                  keyOption = optionsLower[split[0].toLowerCase()];\r\n                  if (keyOption !== undefined &&\r\n                      options[keyOption].constructor === Object) {\r\n                      dataOptions[keyOption] = normalizeObject(split, 1, options[keyOption], eData[`td${key}`]);\r\n                  }\r\n              }\r\n              // or key = multipleDate\r\n              else if (keyOption !== undefined) {\r\n                  dataOptions[keyOption] = eData[`td${key}`];\r\n              }\r\n          });\r\n          return this._mergeOptions(dataOptions, options);\r\n      }\r\n      //todo clean this up\r\n      static normalizeObject(objectToNormalized) {\r\n          const normalizeObject = (split, index, optionSubgroup, value) => {\r\n              // first round = display { ... }\r\n              const normalizedOptions = objectToNormalized(optionSubgroup);\r\n              const keyOption = normalizedOptions[split[index].toLowerCase()];\r\n              const internalObject = {};\r\n              if (keyOption === undefined)\r\n                  return internalObject;\r\n              // if this is another object, continue down the rabbit hole\r\n              if (optionSubgroup[keyOption].constructor === Object) {\r\n                  index++;\r\n                  internalObject[keyOption] = normalizeObject(split, index, optionSubgroup[keyOption], value);\r\n              }\r\n              else {\r\n                  internalObject[keyOption] = value;\r\n              }\r\n              return internalObject;\r\n          };\r\n          return normalizeObject;\r\n      }\r\n      /**\r\n       * Attempts to prove `d` is a DateTime or Date or can be converted into one.\r\n       * @param d If a string will attempt creating a date from it.\r\n       * @param localization object containing locale and format settings. Only used with the custom formats\r\n       * @private\r\n       */\r\n      static _dateTypeCheck(d, //eslint-disable-line @typescript-eslint/no-explicit-any\r\n      localization) {\r\n          return tryConvertToDateTime(d, localization);\r\n      }\r\n      /**\r\n       * Type checks that `value` is an array of Date or DateTime\r\n       * @param optionName Provides text to error messages e.g. disabledDates\r\n       * @param value Option value\r\n       * @param providedType Used to provide text to error messages\r\n       * @param localization\r\n       */\r\n      static _typeCheckDateArray(optionName, value, providedType, localization) {\r\n          return typeCheckDateArray(optionName, value, providedType, localization);\r\n      }\r\n      /**\r\n       * Type checks that `value` is an array of numbers\r\n       * @param optionName Provides text to error messages e.g. disabledDates\r\n       * @param value Option value\r\n       * @param providedType Used to provide text to error messages\r\n       */\r\n      static _typeCheckNumberArray(optionName, value, providedType) {\r\n          return typeCheckNumberArray(optionName, value, providedType);\r\n      }\r\n      /**\r\n       * Attempts to convert `d` to a DateTime object\r\n       * @param d value to convert\r\n       * @param optionName Provides text to error messages e.g. disabledDates\r\n       * @param localization object containing locale and format settings. Only used with the custom formats\r\n       */\r\n      static dateConversion(d, //eslint-disable-line @typescript-eslint/no-explicit-any\r\n      optionName, localization) {\r\n          return convertToDateTime(d, optionName, localization);\r\n      }\r\n      static getFlattenDefaultOptions() {\r\n          if (this._flattenDefaults)\r\n              return this._flattenDefaults;\r\n          const deepKeys = (t, pre = []) => {\r\n              if (Array.isArray(t))\r\n                  return [];\r\n              if (Object(t) === t) {\r\n                  return Object.entries(t).flatMap(([k, v]) => deepKeys(v, [...pre, k]));\r\n              }\r\n              else {\r\n                  return pre.join('.');\r\n              }\r\n          };\r\n          this._flattenDefaults = deepKeys(DefaultOptions);\r\n          return this._flattenDefaults;\r\n      }\r\n      /**\r\n       * Some options conflict like min/max date. Verify that these kinds of options\r\n       * are set correctly.\r\n       * @param config\r\n       */\r\n      static _validateConflicts(config) {\r\n          if (config.display.sideBySide &&\r\n              (!config.display.components.clock ||\r\n                  !(config.display.components.hours ||\r\n                      config.display.components.minutes ||\r\n                      config.display.components.seconds))) {\r\n              Namespace.errorMessages.conflictingConfiguration('Cannot use side by side mode without the clock components');\r\n          }\r\n          if (config.restrictions.minDate && config.restrictions.maxDate) {\r\n              if (config.restrictions.minDate.isAfter(config.restrictions.maxDate)) {\r\n                  Namespace.errorMessages.conflictingConfiguration('minDate is after maxDate');\r\n              }\r\n              if (config.restrictions.maxDate.isBefore(config.restrictions.minDate)) {\r\n                  Namespace.errorMessages.conflictingConfiguration('maxDate is before minDate');\r\n              }\r\n          }\r\n          if (config.multipleDates && config.dateRange) {\r\n              Namespace.errorMessages.conflictingConfiguration('Cannot uss option \"multipleDates\" with \"dateRange\"');\r\n          }\r\n      }\r\n  }\r\n  OptionConverter.ignoreProperties = [\r\n      'meta',\r\n      'dayViewHeaderFormat',\r\n      'container',\r\n      'dateForms',\r\n      'ordinal',\r\n  ];\r\n  OptionConverter.isValue = (a) => a != null; // everything except undefined + null\n\n  class Dates {\r\n      constructor() {\r\n          this._dates = [];\r\n          this.optionsStore = serviceLocator.locate(OptionsStore);\r\n          this.validation = serviceLocator.locate(Validation);\r\n          this._eventEmitters = serviceLocator.locate(EventEmitters);\r\n      }\r\n      /**\r\n       * Returns the array of selected dates\r\n       */\r\n      get picked() {\r\n          return [...this._dates];\r\n      }\r\n      /**\r\n       * Returns the last picked value.\r\n       */\r\n      get lastPicked() {\r\n          return this._dates[this.lastPickedIndex]?.clone;\r\n      }\r\n      /**\r\n       * Returns the length of picked dates -1 or 0 if none are selected.\r\n       */\r\n      get lastPickedIndex() {\r\n          if (this._dates.length === 0)\r\n              return 0;\r\n          return this._dates.length - 1;\r\n      }\r\n      /**\r\n       * Formats a DateTime object to a string. Used when setting the input value.\r\n       * @param date\r\n       */\r\n      formatInput(date) {\r\n          if (!date)\r\n              return '';\r\n          date.localization = this.optionsStore.options.localization;\r\n          return date.format();\r\n      }\r\n      /**\r\n       * parse the value into a DateTime object.\r\n       * this can be overwritten to supply your own parsing.\r\n       */\r\n      //eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n      parseInput(value) {\r\n          return OptionConverter.dateConversion(value, 'input', this.optionsStore.options.localization);\r\n      }\r\n      /**\r\n       * Tries to convert the provided value to a DateTime object.\r\n       * If value is null|undefined then clear the value of the provided index (or 0).\r\n       * @param value Value to convert or null|undefined\r\n       * @param index When using multidates this is the index in the array\r\n       */\r\n      //eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n      setFromInput(value, index) {\r\n          if (!value) {\r\n              this.setValue(undefined, index);\r\n              return;\r\n          }\r\n          const converted = this.parseInput(value);\r\n          if (converted) {\r\n              converted.setLocalization(this.optionsStore.options.localization);\r\n              this.setValue(converted, index);\r\n          }\r\n      }\r\n      /**\r\n       * Adds a new DateTime to selected dates array\r\n       * @param date\r\n       */\r\n      add(date) {\r\n          this._dates.push(date);\r\n      }\r\n      /**\r\n       * Returns true if the `targetDate` is part of the selected dates array.\r\n       * If `unit` is provided then a granularity to that unit will be used.\r\n       * @param targetDate\r\n       * @param unit\r\n       */\r\n      isPicked(targetDate, unit) {\r\n          if (!DateTime.isValid(targetDate))\r\n              return false;\r\n          if (!unit)\r\n              return this._dates.find((x) => x.isSame(targetDate)) !== undefined;\r\n          const format = getFormatByUnit(unit);\r\n          const innerDateFormatted = targetDate.format(format);\r\n          return (this._dates\r\n              .map((x) => x.format(format))\r\n              .find((x) => x === innerDateFormatted) !== undefined);\r\n      }\r\n      /**\r\n       * Returns the index at which `targetDate` is in the array.\r\n       * This is used for updating or removing a date when multi-date is used\r\n       * If `unit` is provided then a granularity to that unit will be used.\r\n       * @param targetDate\r\n       * @param unit\r\n       */\r\n      pickedIndex(targetDate, unit) {\r\n          if (!DateTime.isValid(targetDate))\r\n              return -1;\r\n          if (!unit)\r\n              return this._dates.map((x) => x.valueOf()).indexOf(targetDate.valueOf());\r\n          const format = getFormatByUnit(unit);\r\n          const innerDateFormatted = targetDate.format(format);\r\n          return this._dates.map((x) => x.format(format)).indexOf(innerDateFormatted);\r\n      }\r\n      /**\r\n       * Clears all selected dates.\r\n       */\r\n      clear() {\r\n          this.optionsStore.unset = true;\r\n          this._eventEmitters.triggerEvent.emit({\r\n              type: Namespace.events.change,\r\n              date: undefined,\r\n              oldDate: this.lastPicked,\r\n              isClear: true,\r\n              isValid: true,\r\n          });\r\n          this._dates = [];\r\n          if (this.optionsStore.input)\r\n              this.optionsStore.input.value = '';\r\n          this._eventEmitters.updateDisplay.emit('all');\r\n      }\r\n      /**\r\n       * Find the \"book end\" years given a `year` and a `factor`\r\n       * @param factor e.g. 100 for decades\r\n       * @param year e.g. 2021\r\n       */\r\n      static getStartEndYear(factor, year) {\r\n          const step = factor / 10, startYear = Math.floor(year / factor) * factor, endYear = startYear + step * 9, focusValue = Math.floor(year / step) * step;\r\n          return [startYear, endYear, focusValue];\r\n      }\r\n      updateInput(target) {\r\n          if (!this.optionsStore.input)\r\n              return;\r\n          let newValue = this.formatInput(target);\r\n          if (this.optionsStore.options.multipleDates ||\r\n              this.optionsStore.options.dateRange) {\r\n              newValue = this._dates\r\n                  .map((d) => this.formatInput(d))\r\n                  .join(this.optionsStore.options.multipleDatesSeparator);\r\n          }\r\n          if (this.optionsStore.input.value != newValue)\r\n              this.optionsStore.input.value = newValue;\r\n      }\r\n      /**\r\n       * Attempts to either clear or set the `target` date at `index`.\r\n       * If the `target` is null then the date will be cleared.\r\n       * If multi-date is being used then it will be removed from the array.\r\n       * If `target` is valid and multi-date is used then if `index` is\r\n       * provided the date at that index will be replaced, otherwise it is appended.\r\n       * @param target\r\n       * @param index\r\n       */\r\n      setValue(target, index) {\r\n          const noIndex = typeof index === 'undefined', isClear = !target && noIndex;\r\n          let oldDate = this.optionsStore.unset ? null : this._dates[index]?.clone;\r\n          if (!oldDate && !this.optionsStore.unset && noIndex && isClear) {\r\n              oldDate = this.lastPicked;\r\n          }\r\n          if (target && oldDate?.isSame(target)) {\r\n              this.updateInput(target);\r\n              return;\r\n          }\r\n          // case of calling setValue(null)\r\n          if (!target) {\r\n              this._setValueNull(isClear, index, oldDate);\r\n              return;\r\n          }\r\n          index = index || 0;\r\n          target = target.clone;\r\n          // minute stepping is being used, force the minute to the closest value\r\n          if (this.optionsStore.options.stepping !== 1) {\r\n              target.minutes =\r\n                  Math.round(target.minutes / this.optionsStore.options.stepping) *\r\n                      this.optionsStore.options.stepping;\r\n              target.startOf(Unit.minutes);\r\n          }\r\n          const onUpdate = (isValid) => {\r\n              this._dates[index] = target;\r\n              this._eventEmitters.updateViewDate.emit(target.clone);\r\n              this.updateInput(target);\r\n              this.optionsStore.unset = false;\r\n              this._eventEmitters.updateDisplay.emit('all');\r\n              this._eventEmitters.triggerEvent.emit({\r\n                  type: Namespace.events.change,\r\n                  date: target,\r\n                  oldDate,\r\n                  isClear,\r\n                  isValid: isValid,\r\n              });\r\n          };\r\n          if (this.validation.isValid(target) &&\r\n              this.validation.dateRangeIsValid(this.picked, index, target)) {\r\n              onUpdate(true);\r\n              return;\r\n          }\r\n          if (this.optionsStore.options.keepInvalid) {\r\n              onUpdate(false);\r\n          }\r\n          this._eventEmitters.triggerEvent.emit({\r\n              type: Namespace.events.error,\r\n              reason: Namespace.errorMessages.failedToSetInvalidDate,\r\n              date: target,\r\n              oldDate,\r\n          });\r\n      }\r\n      _setValueNull(isClear, index, oldDate) {\r\n          if (!this.optionsStore.options.multipleDates ||\r\n              this._dates.length === 1 ||\r\n              isClear) {\r\n              this.optionsStore.unset = true;\r\n              this._dates = [];\r\n          }\r\n          else {\r\n              this._dates.splice(index, 1);\r\n          }\r\n          this.updateInput();\r\n          this._eventEmitters.triggerEvent.emit({\r\n              type: Namespace.events.change,\r\n              date: undefined,\r\n              oldDate,\r\n              isClear,\r\n              isValid: true,\r\n          });\r\n          this._eventEmitters.updateDisplay.emit('all');\r\n      }\r\n  }\n\n  var ActionTypes;\r\n  (function (ActionTypes) {\r\n      ActionTypes[\"next\"] = \"next\";\r\n      ActionTypes[\"previous\"] = \"previous\";\r\n      ActionTypes[\"changeCalendarView\"] = \"changeCalendarView\";\r\n      ActionTypes[\"selectMonth\"] = \"selectMonth\";\r\n      ActionTypes[\"selectYear\"] = \"selectYear\";\r\n      ActionTypes[\"selectDecade\"] = \"selectDecade\";\r\n      ActionTypes[\"selectDay\"] = \"selectDay\";\r\n      ActionTypes[\"selectHour\"] = \"selectHour\";\r\n      ActionTypes[\"selectMinute\"] = \"selectMinute\";\r\n      ActionTypes[\"selectSecond\"] = \"selectSecond\";\r\n      ActionTypes[\"incrementHours\"] = \"incrementHours\";\r\n      ActionTypes[\"incrementMinutes\"] = \"incrementMinutes\";\r\n      ActionTypes[\"incrementSeconds\"] = \"incrementSeconds\";\r\n      ActionTypes[\"decrementHours\"] = \"decrementHours\";\r\n      ActionTypes[\"decrementMinutes\"] = \"decrementMinutes\";\r\n      ActionTypes[\"decrementSeconds\"] = \"decrementSeconds\";\r\n      ActionTypes[\"toggleMeridiem\"] = \"toggleMeridiem\";\r\n      ActionTypes[\"togglePicker\"] = \"togglePicker\";\r\n      ActionTypes[\"showClock\"] = \"showClock\";\r\n      ActionTypes[\"showHours\"] = \"showHours\";\r\n      ActionTypes[\"showMinutes\"] = \"showMinutes\";\r\n      ActionTypes[\"showSeconds\"] = \"showSeconds\";\r\n      ActionTypes[\"clear\"] = \"clear\";\r\n      ActionTypes[\"close\"] = \"close\";\r\n      ActionTypes[\"today\"] = \"today\";\r\n  })(ActionTypes || (ActionTypes = {}));\r\n  var ActionTypes$1 = ActionTypes;\n\n  /**\r\n   * Creates and updates the grid for `date`\r\n   */\r\n  class DateDisplay {\r\n      constructor() {\r\n          this.optionsStore = serviceLocator.locate(OptionsStore);\r\n          this.dates = serviceLocator.locate(Dates);\r\n          this.validation = serviceLocator.locate(Validation);\r\n      }\r\n      /**\r\n       * Build the container html for the display\r\n       * @private\r\n       */\r\n      getPicker() {\r\n          const container = document.createElement('div');\r\n          container.classList.add(Namespace.css.daysContainer);\r\n          container.append(...this._daysOfTheWeek());\r\n          if (this.optionsStore.options.display.calendarWeeks) {\r\n              const div = document.createElement('div');\r\n              div.classList.add(Namespace.css.calendarWeeks, Namespace.css.noHighlight);\r\n              container.appendChild(div);\r\n          }\r\n          const { rangeHoverEvent, rangeHoverOutEvent } = this.handleMouseEvents(container);\r\n          for (let i = 0; i < 42; i++) {\r\n              if (i !== 0 && i % 7 === 0) {\r\n                  if (this.optionsStore.options.display.calendarWeeks) {\r\n                      const div = document.createElement('div');\r\n                      div.classList.add(Namespace.css.calendarWeeks, Namespace.css.noHighlight);\r\n                      container.appendChild(div);\r\n                  }\r\n              }\r\n              const div = document.createElement('div');\r\n              div.setAttribute('data-action', ActionTypes$1.selectDay);\r\n              container.appendChild(div);\r\n              // if hover is supported then add the events\r\n              if (matchMedia('(hover: hover)').matches &&\r\n                  this.optionsStore.options.dateRange) {\r\n                  div.addEventListener('mouseover', rangeHoverEvent);\r\n                  div.addEventListener('mouseout', rangeHoverOutEvent);\r\n              }\r\n          }\r\n          return container;\r\n      }\r\n      /**\r\n       * Populates the grid and updates enabled states\r\n       * @private\r\n       */\r\n      _update(widget, paint) {\r\n          const container = widget.getElementsByClassName(Namespace.css.daysContainer)[0];\r\n          this._updateCalendarView(container);\r\n          const innerDate = this.optionsStore.viewDate.clone\r\n              .startOf(Unit.month)\r\n              .startOf('weekDay', this.optionsStore.options.localization.startOfTheWeek)\r\n              .manipulate(12, Unit.hours);\r\n          this._handleCalendarWeeks(container, innerDate.clone);\r\n          container\r\n              .querySelectorAll(`[data-action=\"${ActionTypes$1.selectDay}\"]`)\r\n              .forEach((element) => {\r\n              const classes = [];\r\n              classes.push(Namespace.css.day);\r\n              if (innerDate.isBefore(this.optionsStore.viewDate, Unit.month)) {\r\n                  classes.push(Namespace.css.old);\r\n              }\r\n              if (innerDate.isAfter(this.optionsStore.viewDate, Unit.month)) {\r\n                  classes.push(Namespace.css.new);\r\n              }\r\n              if (!this.optionsStore.unset &&\r\n                  !this.optionsStore.options.dateRange &&\r\n                  this.dates.isPicked(innerDate, Unit.date)) {\r\n                  classes.push(Namespace.css.active);\r\n              }\r\n              if (!this.validation.isValid(innerDate, Unit.date)) {\r\n                  classes.push(Namespace.css.disabled);\r\n              }\r\n              if (innerDate.isSame(new DateTime(), Unit.date)) {\r\n                  classes.push(Namespace.css.today);\r\n              }\r\n              if (innerDate.weekDay === 0 || innerDate.weekDay === 6) {\r\n                  classes.push(Namespace.css.weekend);\r\n              }\r\n              this._handleDateRange(innerDate, classes);\r\n              paint(Unit.date, innerDate, classes, element);\r\n              element.classList.remove(...element.classList);\r\n              element.classList.add(...classes);\r\n              element.setAttribute('data-value', this._dateToDataValue(innerDate));\r\n              element.setAttribute('data-day', `${innerDate.date}`);\r\n              element.innerText = innerDate.parts(undefined, {\r\n                  day: 'numeric',\r\n              }).day;\r\n              innerDate.manipulate(1, Unit.date);\r\n          });\r\n      }\r\n      _dateToDataValue(date) {\r\n          if (!DateTime.isValid(date))\r\n              return '';\r\n          return `${date.year}-${date.monthFormatted}-${date.dateFormatted}`;\r\n      }\r\n      _handleDateRange(innerDate, classes) {\r\n          const rangeStart = this.dates.picked[0];\r\n          const rangeEnd = this.dates.picked[1];\r\n          if (this.optionsStore.options.dateRange) {\r\n              if (innerDate.isBetween(rangeStart, rangeEnd, Unit.date)) {\r\n                  classes.push(Namespace.css.rangeIn);\r\n              }\r\n              if (innerDate.isSame(rangeStart, Unit.date)) {\r\n                  classes.push(Namespace.css.rangeStart);\r\n              }\r\n              if (innerDate.isSame(rangeEnd, Unit.date)) {\r\n                  classes.push(Namespace.css.rangeEnd);\r\n              }\r\n          }\r\n      }\r\n      handleMouseEvents(container) {\r\n          const rangeHoverEvent = (e) => {\r\n              const currentTarget = e?.currentTarget;\r\n              // if we have 0 or 2 selected or if the target is disabled then ignore\r\n              if (this.dates.picked.length !== 1 ||\r\n                  currentTarget.classList.contains(Namespace.css.disabled))\r\n                  return;\r\n              // select all the date divs\r\n              const allDays = [...container.querySelectorAll('.day')];\r\n              // get the date value from the element being hovered over\r\n              const attributeValue = currentTarget.getAttribute('data-value');\r\n              // format the string to a date\r\n              const innerDate = DateTime.fromString(attributeValue, {\r\n                  format: 'yyyy-MM-dd',\r\n              });\r\n              // find the position of the target in the date container\r\n              const dayIndex = allDays.findIndex((e) => e.getAttribute('data-value') === attributeValue);\r\n              // find the first and second selected dates\r\n              const rangeStart = this.dates.picked[0];\r\n              const rangeEnd = this.dates.picked[1];\r\n              //format the start date so that it can be found by the attribute\r\n              const rangeStartFormatted = this._dateToDataValue(rangeStart);\r\n              const rangeStartIndex = allDays.findIndex((e) => e.getAttribute('data-value') === rangeStartFormatted);\r\n              const rangeStartElement = allDays[rangeStartIndex];\r\n              //make sure we don't leave start/end classes if we don't need them\r\n              if (!innerDate.isSame(rangeStart, Unit.date)) {\r\n                  currentTarget.classList.remove(Namespace.css.rangeStart);\r\n              }\r\n              if (!innerDate.isSame(rangeEnd, Unit.date)) {\r\n                  currentTarget.classList.remove(Namespace.css.rangeEnd);\r\n              }\r\n              // the following figures out which direct from start date is selected\r\n              // the selection \"cap\" classes are applied if needed\r\n              // otherwise all the dates between will get the `rangeIn` class.\r\n              // We make this selection based on the element's index and the rangeStart index\r\n              let lambda;\r\n              if (innerDate.isBefore(rangeStart)) {\r\n                  currentTarget.classList.add(Namespace.css.rangeStart);\r\n                  rangeStartElement?.classList.remove(Namespace.css.rangeStart);\r\n                  rangeStartElement?.classList.add(Namespace.css.rangeEnd);\r\n                  lambda = (_, index) => index > dayIndex && index < rangeStartIndex;\r\n              }\r\n              else {\r\n                  currentTarget.classList.add(Namespace.css.rangeEnd);\r\n                  rangeStartElement?.classList.remove(Namespace.css.rangeEnd);\r\n                  rangeStartElement?.classList.add(Namespace.css.rangeStart);\r\n                  lambda = (_, index) => index < dayIndex && index > rangeStartIndex;\r\n              }\r\n              allDays.filter(lambda).forEach((e) => {\r\n                  e.classList.add(Namespace.css.rangeIn);\r\n              });\r\n          };\r\n          const rangeHoverOutEvent = (e) => {\r\n              // find all the dates in the container\r\n              const allDays = [...container.querySelectorAll('.day')];\r\n              // if only the start is selected, remove all the rangeIn classes\r\n              // we do this because once the user hovers over a new date the range will be recalculated.\r\n              if (this.dates.picked.length === 1)\r\n                  allDays.forEach((e) => e.classList.remove(Namespace.css.rangeIn));\r\n              // if we have 0 or 2 dates selected then ignore\r\n              if (this.dates.picked.length !== 1)\r\n                  return;\r\n              const currentTarget = e?.currentTarget;\r\n              // get the elements date from the attribute value\r\n              const innerDate = new DateTime(currentTarget.getAttribute('data-value'));\r\n              // verify selections and remove invalid classes\r\n              if (!innerDate.isSame(this.dates.picked[0], Unit.date)) {\r\n                  currentTarget.classList.remove(Namespace.css.rangeStart);\r\n              }\r\n              if (!innerDate.isSame(this.dates.picked[1], Unit.date)) {\r\n                  currentTarget.classList.remove(Namespace.css.rangeEnd);\r\n              }\r\n          };\r\n          return { rangeHoverEvent, rangeHoverOutEvent };\r\n      }\r\n      _updateCalendarView(container) {\r\n          if (this.optionsStore.currentView !== 'calendar')\r\n              return;\r\n          const [previous, switcher, next] = container.parentElement\r\n              .getElementsByClassName(Namespace.css.calendarHeader)[0]\r\n              .getElementsByTagName('div');\r\n          switcher.setAttribute(Namespace.css.daysContainer, this.optionsStore.viewDate.format(this.optionsStore.options.localization.dayViewHeaderFormat));\r\n          this.optionsStore.options.display.components.month\r\n              ? switcher.classList.remove(Namespace.css.disabled)\r\n              : switcher.classList.add(Namespace.css.disabled);\r\n          this.validation.isValid(this.optionsStore.viewDate.clone.manipulate(-1, Unit.month), Unit.month)\r\n              ? previous.classList.remove(Namespace.css.disabled)\r\n              : previous.classList.add(Namespace.css.disabled);\r\n          this.validation.isValid(this.optionsStore.viewDate.clone.manipulate(1, Unit.month), Unit.month)\r\n              ? next.classList.remove(Namespace.css.disabled)\r\n              : next.classList.add(Namespace.css.disabled);\r\n      }\r\n      /***\r\n       * Generates a html row that contains the days of the week.\r\n       * @private\r\n       */\r\n      _daysOfTheWeek() {\r\n          const innerDate = this.optionsStore.viewDate.clone\r\n              .startOf('weekDay', this.optionsStore.options.localization.startOfTheWeek)\r\n              .startOf(Unit.date);\r\n          const row = [];\r\n          document.createElement('div');\r\n          if (this.optionsStore.options.display.calendarWeeks) {\r\n              const htmlDivElement = document.createElement('div');\r\n              htmlDivElement.classList.add(Namespace.css.calendarWeeks, Namespace.css.noHighlight);\r\n              htmlDivElement.innerText = '#';\r\n              row.push(htmlDivElement);\r\n          }\r\n          for (let i = 0; i < 7; i++) {\r\n              const htmlDivElement = document.createElement('div');\r\n              htmlDivElement.classList.add(Namespace.css.dayOfTheWeek, Namespace.css.noHighlight);\r\n              htmlDivElement.innerText = innerDate.format({ weekday: 'short' });\r\n              innerDate.manipulate(1, Unit.date);\r\n              row.push(htmlDivElement);\r\n          }\r\n          return row;\r\n      }\r\n      _handleCalendarWeeks(container, innerDate) {\r\n          [...container.querySelectorAll(`.${Namespace.css.calendarWeeks}`)]\r\n              .filter((e) => e.innerText !== '#')\r\n              .forEach((element) => {\r\n              element.innerText = `${innerDate.week}`;\r\n              innerDate.manipulate(7, Unit.date);\r\n          });\r\n      }\r\n  }\n\n  /**\r\n   * Creates and updates the grid for `month`\r\n   */\r\n  class MonthDisplay {\r\n      constructor() {\r\n          this.optionsStore = serviceLocator.locate(OptionsStore);\r\n          this.dates = serviceLocator.locate(Dates);\r\n          this.validation = serviceLocator.locate(Validation);\r\n      }\r\n      /**\r\n       * Build the container html for the display\r\n       * @private\r\n       */\r\n      getPicker() {\r\n          const container = document.createElement('div');\r\n          container.classList.add(Namespace.css.monthsContainer);\r\n          for (let i = 0; i < 12; i++) {\r\n              const div = document.createElement('div');\r\n              div.setAttribute('data-action', ActionTypes$1.selectMonth);\r\n              container.appendChild(div);\r\n          }\r\n          return container;\r\n      }\r\n      /**\r\n       * Populates the grid and updates enabled states\r\n       * @private\r\n       */\r\n      _update(widget, paint) {\r\n          const container = widget.getElementsByClassName(Namespace.css.monthsContainer)[0];\r\n          if (this.optionsStore.currentView === 'months') {\r\n              const [previous, switcher, next] = container.parentElement\r\n                  .getElementsByClassName(Namespace.css.calendarHeader)[0]\r\n                  .getElementsByTagName('div');\r\n              switcher.setAttribute(Namespace.css.monthsContainer, this.optionsStore.viewDate.format({ year: 'numeric' }));\r\n              this.optionsStore.options.display.components.year\r\n                  ? switcher.classList.remove(Namespace.css.disabled)\r\n                  : switcher.classList.add(Namespace.css.disabled);\r\n              this.validation.isValid(this.optionsStore.viewDate.clone.manipulate(-1, Unit.year), Unit.year)\r\n                  ? previous.classList.remove(Namespace.css.disabled)\r\n                  : previous.classList.add(Namespace.css.disabled);\r\n              this.validation.isValid(this.optionsStore.viewDate.clone.manipulate(1, Unit.year), Unit.year)\r\n                  ? next.classList.remove(Namespace.css.disabled)\r\n                  : next.classList.add(Namespace.css.disabled);\r\n          }\r\n          const innerDate = this.optionsStore.viewDate.clone.startOf(Unit.year);\r\n          container\r\n              .querySelectorAll(`[data-action=\"${ActionTypes$1.selectMonth}\"]`)\r\n              .forEach((containerClone, index) => {\r\n              const classes = [];\r\n              classes.push(Namespace.css.month);\r\n              if (!this.optionsStore.unset &&\r\n                  this.dates.isPicked(innerDate, Unit.month)) {\r\n                  classes.push(Namespace.css.active);\r\n              }\r\n              if (!this.validation.isValid(innerDate, Unit.month)) {\r\n                  classes.push(Namespace.css.disabled);\r\n              }\r\n              paint(Unit.month, innerDate, classes, containerClone);\r\n              containerClone.classList.remove(...containerClone.classList);\r\n              containerClone.classList.add(...classes);\r\n              containerClone.setAttribute('data-value', `${index}`);\r\n              containerClone.innerText = `${innerDate.format({ month: 'short' })}`;\r\n              innerDate.manipulate(1, Unit.month);\r\n          });\r\n      }\r\n  }\n\n  /**\r\n   * Creates and updates the grid for `year`\r\n   */\r\n  class YearDisplay {\r\n      constructor() {\r\n          this.optionsStore = serviceLocator.locate(OptionsStore);\r\n          this.dates = serviceLocator.locate(Dates);\r\n          this.validation = serviceLocator.locate(Validation);\r\n      }\r\n      /**\r\n       * Build the container html for the display\r\n       * @private\r\n       */\r\n      getPicker() {\r\n          const container = document.createElement('div');\r\n          container.classList.add(Namespace.css.yearsContainer);\r\n          for (let i = 0; i < 12; i++) {\r\n              const div = document.createElement('div');\r\n              div.setAttribute('data-action', ActionTypes$1.selectYear);\r\n              container.appendChild(div);\r\n          }\r\n          return container;\r\n      }\r\n      /**\r\n       * Populates the grid and updates enabled states\r\n       * @private\r\n       */\r\n      _update(widget, paint) {\r\n          this._startYear = this.optionsStore.viewDate.clone.manipulate(-1, Unit.year);\r\n          this._endYear = this.optionsStore.viewDate.clone.manipulate(10, Unit.year);\r\n          const container = widget.getElementsByClassName(Namespace.css.yearsContainer)[0];\r\n          if (this.optionsStore.currentView === 'years') {\r\n              const [previous, switcher, next] = container.parentElement\r\n                  .getElementsByClassName(Namespace.css.calendarHeader)[0]\r\n                  .getElementsByTagName('div');\r\n              switcher.setAttribute(Namespace.css.yearsContainer, `${this._startYear.format({ year: 'numeric' })}-${this._endYear.format({\r\n                year: 'numeric',\r\n            })}`);\r\n              this.optionsStore.options.display.components.decades\r\n                  ? switcher.classList.remove(Namespace.css.disabled)\r\n                  : switcher.classList.add(Namespace.css.disabled);\r\n              this.validation.isValid(this._startYear, Unit.year)\r\n                  ? previous.classList.remove(Namespace.css.disabled)\r\n                  : previous.classList.add(Namespace.css.disabled);\r\n              this.validation.isValid(this._endYear, Unit.year)\r\n                  ? next.classList.remove(Namespace.css.disabled)\r\n                  : next.classList.add(Namespace.css.disabled);\r\n          }\r\n          const innerDate = this.optionsStore.viewDate.clone\r\n              .startOf(Unit.year)\r\n              .manipulate(-1, Unit.year);\r\n          container\r\n              .querySelectorAll(`[data-action=\"${ActionTypes$1.selectYear}\"]`)\r\n              .forEach((containerClone) => {\r\n              const classes = [];\r\n              classes.push(Namespace.css.year);\r\n              if (!this.optionsStore.unset &&\r\n                  this.dates.isPicked(innerDate, Unit.year)) {\r\n                  classes.push(Namespace.css.active);\r\n              }\r\n              if (!this.validation.isValid(innerDate, Unit.year)) {\r\n                  classes.push(Namespace.css.disabled);\r\n              }\r\n              paint(Unit.year, innerDate, classes, containerClone);\r\n              containerClone.classList.remove(...containerClone.classList);\r\n              containerClone.classList.add(...classes);\r\n              containerClone.setAttribute('data-value', `${innerDate.year}`);\r\n              containerClone.innerText = innerDate.format({ year: 'numeric' });\r\n              innerDate.manipulate(1, Unit.year);\r\n          });\r\n      }\r\n  }\n\n  /**\r\n   * Creates and updates the grid for `seconds`\r\n   */\r\n  class DecadeDisplay {\r\n      constructor() {\r\n          this.optionsStore = serviceLocator.locate(OptionsStore);\r\n          this.dates = serviceLocator.locate(Dates);\r\n          this.validation = serviceLocator.locate(Validation);\r\n      }\r\n      /**\r\n       * Build the container html for the display\r\n       * @private\r\n       */\r\n      getPicker() {\r\n          const container = document.createElement('div');\r\n          container.classList.add(Namespace.css.decadesContainer);\r\n          for (let i = 0; i < 12; i++) {\r\n              const div = document.createElement('div');\r\n              div.setAttribute('data-action', ActionTypes$1.selectDecade);\r\n              container.appendChild(div);\r\n          }\r\n          return container;\r\n      }\r\n      /**\r\n       * Populates the grid and updates enabled states\r\n       * @private\r\n       */\r\n      _update(widget, paint) {\r\n          const [start, end] = Dates.getStartEndYear(100, this.optionsStore.viewDate.year);\r\n          this._startDecade = this.optionsStore.viewDate.clone.startOf(Unit.year);\r\n          this._startDecade.year = start;\r\n          this._endDecade = this.optionsStore.viewDate.clone.startOf(Unit.year);\r\n          this._endDecade.year = end;\r\n          const container = widget.getElementsByClassName(Namespace.css.decadesContainer)[0];\r\n          const [previous, switcher, next] = container.parentElement\r\n              .getElementsByClassName(Namespace.css.calendarHeader)[0]\r\n              .getElementsByTagName('div');\r\n          if (this.optionsStore.currentView === 'decades') {\r\n              switcher.setAttribute(Namespace.css.decadesContainer, `${this._startDecade.format({\r\n                year: 'numeric',\r\n            })}-${this._endDecade.format({ year: 'numeric' })}`);\r\n              this.validation.isValid(this._startDecade, Unit.year)\r\n                  ? previous.classList.remove(Namespace.css.disabled)\r\n                  : previous.classList.add(Namespace.css.disabled);\r\n              this.validation.isValid(this._endDecade, Unit.year)\r\n                  ? next.classList.remove(Namespace.css.disabled)\r\n                  : next.classList.add(Namespace.css.disabled);\r\n          }\r\n          const pickedYears = this.dates.picked.map((x) => x.year);\r\n          container\r\n              .querySelectorAll(`[data-action=\"${ActionTypes$1.selectDecade}\"]`)\r\n              .forEach((containerClone, index) => {\r\n              if (index === 0) {\r\n                  containerClone.classList.add(Namespace.css.old);\r\n                  if (this._startDecade.year - 10 < 0) {\r\n                      containerClone.textContent = ' ';\r\n                      previous.classList.add(Namespace.css.disabled);\r\n                      containerClone.classList.add(Namespace.css.disabled);\r\n                      containerClone.setAttribute('data-value', '');\r\n                      return;\r\n                  }\r\n                  else {\r\n                      containerClone.innerText = this._startDecade.clone\r\n                          .manipulate(-10, Unit.year)\r\n                          .format({ year: 'numeric' });\r\n                      containerClone.setAttribute('data-value', `${this._startDecade.year}`);\r\n                      return;\r\n                  }\r\n              }\r\n              const classes = [];\r\n              classes.push(Namespace.css.decade);\r\n              const startDecadeYear = this._startDecade.year;\r\n              const endDecadeYear = this._startDecade.year + 9;\r\n              if (!this.optionsStore.unset &&\r\n                  pickedYears.filter((x) => x >= startDecadeYear && x <= endDecadeYear)\r\n                      .length > 0) {\r\n                  classes.push(Namespace.css.active);\r\n              }\r\n              paint('decade', this._startDecade, classes, containerClone);\r\n              containerClone.classList.remove(...containerClone.classList);\r\n              containerClone.classList.add(...classes);\r\n              containerClone.setAttribute('data-value', `${this._startDecade.year}`);\r\n              containerClone.innerText = `${this._startDecade.format({\r\n                year: 'numeric',\r\n            })}`;\r\n              this._startDecade.manipulate(10, Unit.year);\r\n          });\r\n      }\r\n  }\n\n  /**\r\n   * Creates the clock display\r\n   */\r\n  class TimeDisplay {\r\n      constructor() {\r\n          this._gridColumns = '';\r\n          this.optionsStore = serviceLocator.locate(OptionsStore);\r\n          this.dates = serviceLocator.locate(Dates);\r\n          this.validation = serviceLocator.locate(Validation);\r\n      }\r\n      /**\r\n       * Build the container html for the clock display\r\n       * @private\r\n       */\r\n      getPicker(iconTag) {\r\n          const container = document.createElement('div');\r\n          container.classList.add(Namespace.css.clockContainer);\r\n          container.append(...this._grid(iconTag));\r\n          return container;\r\n      }\r\n      /**\r\n       * Populates the various elements with in the clock display\r\n       * like the current hour and if the manipulation icons are enabled.\r\n       * @private\r\n       */\r\n      _update(widget) {\r\n          const timesDiv = (widget.getElementsByClassName(Namespace.css.clockContainer)[0]);\r\n          let lastPicked = this.dates.lastPicked?.clone;\r\n          if (!lastPicked && this.optionsStore.options.useCurrent)\r\n              lastPicked = this.optionsStore.viewDate.clone;\r\n          timesDiv\r\n              .querySelectorAll('.disabled')\r\n              .forEach((element) => element.classList.remove(Namespace.css.disabled));\r\n          if (this.optionsStore.options.display.components.hours) {\r\n              if (!this.validation.isValid(this.optionsStore.viewDate.clone.manipulate(1, Unit.hours), Unit.hours)) {\r\n                  timesDiv\r\n                      .querySelector(`[data-action=${ActionTypes$1.incrementHours}]`)\r\n                      .classList.add(Namespace.css.disabled);\r\n              }\r\n              if (!this.validation.isValid(this.optionsStore.viewDate.clone.manipulate(-1, Unit.hours), Unit.hours)) {\r\n                  timesDiv\r\n                      .querySelector(`[data-action=${ActionTypes$1.decrementHours}]`)\r\n                      .classList.add(Namespace.css.disabled);\r\n              }\r\n              timesDiv.querySelector(`[data-time-component=${Unit.hours}]`).innerText = lastPicked\r\n                  ? lastPicked.getHoursFormatted(this.optionsStore.options.localization.hourCycle)\r\n                  : '--';\r\n          }\r\n          if (this.optionsStore.options.display.components.minutes) {\r\n              if (!this.validation.isValid(this.optionsStore.viewDate.clone.manipulate(1, Unit.minutes), Unit.minutes)) {\r\n                  timesDiv\r\n                      .querySelector(`[data-action=${ActionTypes$1.incrementMinutes}]`)\r\n                      .classList.add(Namespace.css.disabled);\r\n              }\r\n              if (!this.validation.isValid(this.optionsStore.viewDate.clone.manipulate(-1, Unit.minutes), Unit.minutes)) {\r\n                  timesDiv\r\n                      .querySelector(`[data-action=${ActionTypes$1.decrementMinutes}]`)\r\n                      .classList.add(Namespace.css.disabled);\r\n              }\r\n              timesDiv.querySelector(`[data-time-component=${Unit.minutes}]`).innerText = lastPicked ? lastPicked.minutesFormatted : '--';\r\n          }\r\n          if (this.optionsStore.options.display.components.seconds) {\r\n              if (!this.validation.isValid(this.optionsStore.viewDate.clone.manipulate(1, Unit.seconds), Unit.seconds)) {\r\n                  timesDiv\r\n                      .querySelector(`[data-action=${ActionTypes$1.incrementSeconds}]`)\r\n                      .classList.add(Namespace.css.disabled);\r\n              }\r\n              if (!this.validation.isValid(this.optionsStore.viewDate.clone.manipulate(-1, Unit.seconds), Unit.seconds)) {\r\n                  timesDiv\r\n                      .querySelector(`[data-action=${ActionTypes$1.decrementSeconds}]`)\r\n                      .classList.add(Namespace.css.disabled);\r\n              }\r\n              timesDiv.querySelector(`[data-time-component=${Unit.seconds}]`).innerText = lastPicked ? lastPicked.secondsFormatted : '--';\r\n          }\r\n          if (this.optionsStore.isTwelveHour) {\r\n              const toggle = timesDiv.querySelector(`[data-action=${ActionTypes$1.toggleMeridiem}]`);\r\n              const meridiemDate = (lastPicked || this.optionsStore.viewDate).clone;\r\n              toggle.innerText = meridiemDate.meridiem();\r\n              if (!this.validation.isValid(meridiemDate.manipulate(meridiemDate.hours >= 12 ? -12 : 12, Unit.hours))) {\r\n                  toggle.classList.add(Namespace.css.disabled);\r\n              }\r\n              else {\r\n                  toggle.classList.remove(Namespace.css.disabled);\r\n              }\r\n          }\r\n          timesDiv.style.gridTemplateAreas = `\"${this._gridColumns}\"`;\r\n      }\r\n      /**\r\n       * Creates the table for the clock display depending on what options are selected.\r\n       * @private\r\n       */\r\n      _grid(iconTag) {\r\n          this._gridColumns = '';\r\n          const top = [], middle = [], bottom = [], separator = document.createElement('div'), upIcon = iconTag(this.optionsStore.options.display.icons.up), downIcon = iconTag(this.optionsStore.options.display.icons.down);\r\n          separator.classList.add(Namespace.css.separator, Namespace.css.noHighlight);\r\n          const separatorColon = separator.cloneNode(true);\r\n          separatorColon.innerHTML = ':';\r\n          const getSeparator = (colon = false) => {\r\n              return colon\r\n                  ? separatorColon.cloneNode(true)\r\n                  : separator.cloneNode(true);\r\n          };\r\n          if (this.optionsStore.options.display.components.hours) {\r\n              let divElement = document.createElement('div');\r\n              divElement.setAttribute('title', this.optionsStore.options.localization.incrementHour);\r\n              divElement.setAttribute('data-action', ActionTypes$1.incrementHours);\r\n              divElement.appendChild(upIcon.cloneNode(true));\r\n              top.push(divElement);\r\n              divElement = document.createElement('div');\r\n              divElement.setAttribute('title', this.optionsStore.options.localization.pickHour);\r\n              divElement.setAttribute('data-action', ActionTypes$1.showHours);\r\n              divElement.setAttribute('data-time-component', Unit.hours);\r\n              middle.push(divElement);\r\n              divElement = document.createElement('div');\r\n              divElement.setAttribute('title', this.optionsStore.options.localization.decrementHour);\r\n              divElement.setAttribute('data-action', ActionTypes$1.decrementHours);\r\n              divElement.appendChild(downIcon.cloneNode(true));\r\n              bottom.push(divElement);\r\n              this._gridColumns += 'a';\r\n          }\r\n          if (this.optionsStore.options.display.components.minutes) {\r\n              this._gridColumns += ' a';\r\n              if (this.optionsStore.options.display.components.hours) {\r\n                  top.push(getSeparator());\r\n                  middle.push(getSeparator(true));\r\n                  bottom.push(getSeparator());\r\n                  this._gridColumns += ' a';\r\n              }\r\n              let divElement = document.createElement('div');\r\n              divElement.setAttribute('title', this.optionsStore.options.localization.incrementMinute);\r\n              divElement.setAttribute('data-action', ActionTypes$1.incrementMinutes);\r\n              divElement.appendChild(upIcon.cloneNode(true));\r\n              top.push(divElement);\r\n              divElement = document.createElement('div');\r\n              divElement.setAttribute('title', this.optionsStore.options.localization.pickMinute);\r\n              divElement.setAttribute('data-action', ActionTypes$1.showMinutes);\r\n              divElement.setAttribute('data-time-component', Unit.minutes);\r\n              middle.push(divElement);\r\n              divElement = document.createElement('div');\r\n              divElement.setAttribute('title', this.optionsStore.options.localization.decrementMinute);\r\n              divElement.setAttribute('data-action', ActionTypes$1.decrementMinutes);\r\n              divElement.appendChild(downIcon.cloneNode(true));\r\n              bottom.push(divElement);\r\n          }\r\n          if (this.optionsStore.options.display.components.seconds) {\r\n              this._gridColumns += ' a';\r\n              if (this.optionsStore.options.display.components.minutes) {\r\n                  top.push(getSeparator());\r\n                  middle.push(getSeparator(true));\r\n                  bottom.push(getSeparator());\r\n                  this._gridColumns += ' a';\r\n              }\r\n              let divElement = document.createElement('div');\r\n              divElement.setAttribute('title', this.optionsStore.options.localization.incrementSecond);\r\n              divElement.setAttribute('data-action', ActionTypes$1.incrementSeconds);\r\n              divElement.appendChild(upIcon.cloneNode(true));\r\n              top.push(divElement);\r\n              divElement = document.createElement('div');\r\n              divElement.setAttribute('title', this.optionsStore.options.localization.pickSecond);\r\n              divElement.setAttribute('data-action', ActionTypes$1.showSeconds);\r\n              divElement.setAttribute('data-time-component', Unit.seconds);\r\n              middle.push(divElement);\r\n              divElement = document.createElement('div');\r\n              divElement.setAttribute('title', this.optionsStore.options.localization.decrementSecond);\r\n              divElement.setAttribute('data-action', ActionTypes$1.decrementSeconds);\r\n              divElement.appendChild(downIcon.cloneNode(true));\r\n              bottom.push(divElement);\r\n          }\r\n          if (this.optionsStore.isTwelveHour) {\r\n              this._gridColumns += ' a';\r\n              let divElement = getSeparator();\r\n              top.push(divElement);\r\n              const button = document.createElement('button');\r\n              button.setAttribute('title', this.optionsStore.options.localization.toggleMeridiem);\r\n              button.setAttribute('data-action', ActionTypes$1.toggleMeridiem);\r\n              button.setAttribute('tabindex', '-1');\r\n              if (Namespace.css.toggleMeridiem.includes(',')) {\r\n                  //todo move this to paint function?\r\n                  button.classList.add(...Namespace.css.toggleMeridiem.split(','));\r\n              }\r\n              else\r\n                  button.classList.add(Namespace.css.toggleMeridiem);\r\n              divElement = document.createElement('div');\r\n              divElement.classList.add(Namespace.css.noHighlight);\r\n              divElement.appendChild(button);\r\n              middle.push(divElement);\r\n              divElement = getSeparator();\r\n              bottom.push(divElement);\r\n          }\r\n          this._gridColumns = this._gridColumns.trim();\r\n          return [...top, ...middle, ...bottom];\r\n      }\r\n  }\n\n  /**\r\n   * Creates and updates the grid for `hours`\r\n   */\r\n  class HourDisplay {\r\n      constructor() {\r\n          this.optionsStore = serviceLocator.locate(OptionsStore);\r\n          this.validation = serviceLocator.locate(Validation);\r\n      }\r\n      /**\r\n       * Build the container html for the display\r\n       * @private\r\n       */\r\n      getPicker() {\r\n          const container = document.createElement('div');\r\n          container.classList.add(Namespace.css.hourContainer);\r\n          for (let i = 0; i < (this.optionsStore.isTwelveHour ? 12 : 24); i++) {\r\n              const div = document.createElement('div');\r\n              div.setAttribute('data-action', ActionTypes$1.selectHour);\r\n              container.appendChild(div);\r\n          }\r\n          return container;\r\n      }\r\n      /**\r\n       * Populates the grid and updates enabled states\r\n       * @private\r\n       */\r\n      _update(widget, paint) {\r\n          const container = widget.getElementsByClassName(Namespace.css.hourContainer)[0];\r\n          const innerDate = this.optionsStore.viewDate.clone.startOf(Unit.date);\r\n          container\r\n              .querySelectorAll(`[data-action=\"${ActionTypes$1.selectHour}\"]`)\r\n              .forEach((containerClone) => {\r\n              const classes = [];\r\n              classes.push(Namespace.css.hour);\r\n              if (!this.validation.isValid(innerDate, Unit.hours)) {\r\n                  classes.push(Namespace.css.disabled);\r\n              }\r\n              paint(Unit.hours, innerDate, classes, containerClone);\r\n              containerClone.classList.remove(...containerClone.classList);\r\n              containerClone.classList.add(...classes);\r\n              containerClone.setAttribute('data-value', `${innerDate.hours}`);\r\n              containerClone.innerText = innerDate.getHoursFormatted(this.optionsStore.options.localization.hourCycle);\r\n              innerDate.manipulate(1, Unit.hours);\r\n          });\r\n      }\r\n  }\n\n  /**\r\n   * Creates and updates the grid for `minutes`\r\n   */\r\n  class MinuteDisplay {\r\n      constructor() {\r\n          this.optionsStore = serviceLocator.locate(OptionsStore);\r\n          this.validation = serviceLocator.locate(Validation);\r\n      }\r\n      /**\r\n       * Build the container html for the display\r\n       * @private\r\n       */\r\n      getPicker() {\r\n          const container = document.createElement('div');\r\n          container.classList.add(Namespace.css.minuteContainer);\r\n          const step = this.optionsStore.options.stepping === 1\r\n              ? 5\r\n              : this.optionsStore.options.stepping;\r\n          for (let i = 0; i < 60 / step; i++) {\r\n              const div = document.createElement('div');\r\n              div.setAttribute('data-action', ActionTypes$1.selectMinute);\r\n              container.appendChild(div);\r\n          }\r\n          return container;\r\n      }\r\n      /**\r\n       * Populates the grid and updates enabled states\r\n       * @private\r\n       */\r\n      _update(widget, paint) {\r\n          const container = widget.getElementsByClassName(Namespace.css.minuteContainer)[0];\r\n          const innerDate = this.optionsStore.viewDate.clone.startOf(Unit.hours);\r\n          const step = this.optionsStore.options.stepping === 1\r\n              ? 5\r\n              : this.optionsStore.options.stepping;\r\n          container\r\n              .querySelectorAll(`[data-action=\"${ActionTypes$1.selectMinute}\"]`)\r\n              .forEach((containerClone) => {\r\n              const classes = [];\r\n              classes.push(Namespace.css.minute);\r\n              if (!this.validation.isValid(innerDate, Unit.minutes)) {\r\n                  classes.push(Namespace.css.disabled);\r\n              }\r\n              paint(Unit.minutes, innerDate, classes, containerClone);\r\n              containerClone.classList.remove(...containerClone.classList);\r\n              containerClone.classList.add(...classes);\r\n              containerClone.setAttribute('data-value', `${innerDate.minutes}`);\r\n              containerClone.innerText = innerDate.minutesFormatted;\r\n              innerDate.manipulate(step, Unit.minutes);\r\n          });\r\n      }\r\n  }\n\n  /**\r\n   * Creates and updates the grid for `seconds`\r\n   */\r\n  class secondDisplay {\r\n      constructor() {\r\n          this.optionsStore = serviceLocator.locate(OptionsStore);\r\n          this.validation = serviceLocator.locate(Validation);\r\n      }\r\n      /**\r\n       * Build the container html for the display\r\n       * @private\r\n       */\r\n      getPicker() {\r\n          const container = document.createElement('div');\r\n          container.classList.add(Namespace.css.secondContainer);\r\n          for (let i = 0; i < 12; i++) {\r\n              const div = document.createElement('div');\r\n              div.setAttribute('data-action', ActionTypes$1.selectSecond);\r\n              container.appendChild(div);\r\n          }\r\n          return container;\r\n      }\r\n      /**\r\n       * Populates the grid and updates enabled states\r\n       * @private\r\n       */\r\n      _update(widget, paint) {\r\n          const container = widget.getElementsByClassName(Namespace.css.secondContainer)[0];\r\n          const innerDate = this.optionsStore.viewDate.clone.startOf(Unit.minutes);\r\n          container\r\n              .querySelectorAll(`[data-action=\"${ActionTypes$1.selectSecond}\"]`)\r\n              .forEach((containerClone) => {\r\n              const classes = [];\r\n              classes.push(Namespace.css.second);\r\n              if (!this.validation.isValid(innerDate, Unit.seconds)) {\r\n                  classes.push(Namespace.css.disabled);\r\n              }\r\n              paint(Unit.seconds, innerDate, classes, containerClone);\r\n              containerClone.classList.remove(...containerClone.classList);\r\n              containerClone.classList.add(...classes);\r\n              containerClone.setAttribute('data-value', `${innerDate.seconds}`);\r\n              containerClone.innerText = innerDate.secondsFormatted;\r\n              innerDate.manipulate(5, Unit.seconds);\r\n          });\r\n      }\r\n  }\n\n  /**\r\n   * Provides a collapse functionality to the view changes\r\n   */\r\n  class Collapse {\r\n      /**\r\n       * Flips the show/hide state of `target`\r\n       * @param target html element to affect.\r\n       */\r\n      static toggle(target) {\r\n          if (target.classList.contains(Namespace.css.show)) {\r\n              this.hide(target);\r\n          }\r\n          else {\r\n              this.show(target);\r\n          }\r\n      }\r\n      /**\r\n       * Skips any animation or timeouts and immediately set the element to show.\r\n       * @param target\r\n       */\r\n      static showImmediately(target) {\r\n          target.classList.remove(Namespace.css.collapsing);\r\n          target.classList.add(Namespace.css.collapse, Namespace.css.show);\r\n          target.style.height = '';\r\n      }\r\n      /**\r\n       * If `target` is not already showing, then show after the animation.\r\n       * @param target\r\n       */\r\n      static show(target) {\r\n          if (target.classList.contains(Namespace.css.collapsing) ||\r\n              target.classList.contains(Namespace.css.show))\r\n              return;\r\n          const complete = () => {\r\n              Collapse.showImmediately(target);\r\n          };\r\n          target.style.height = '0';\r\n          target.classList.remove(Namespace.css.collapse);\r\n          target.classList.add(Namespace.css.collapsing);\r\n          //eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n          setTimeout(complete, this.getTransitionDurationFromElement(target));\r\n          target.style.height = `${target.scrollHeight}px`;\r\n      }\r\n      /**\r\n       * Skips any animation or timeouts and immediately set the element to hide.\r\n       * @param target\r\n       */\r\n      static hideImmediately(target) {\r\n          if (!target)\r\n              return;\r\n          target.classList.remove(Namespace.css.collapsing, Namespace.css.show);\r\n          target.classList.add(Namespace.css.collapse);\r\n      }\r\n      /**\r\n       * If `target` is not already hidden, then hide after the animation.\r\n       * @param target HTML Element\r\n       */\r\n      static hide(target) {\r\n          if (target.classList.contains(Namespace.css.collapsing) ||\r\n              !target.classList.contains(Namespace.css.show))\r\n              return;\r\n          const complete = () => {\r\n              Collapse.hideImmediately(target);\r\n          };\r\n          target.style.height = `${target.getBoundingClientRect()['height']}px`;\r\n          const reflow = (element) => element.offsetHeight;\r\n          reflow(target);\r\n          target.classList.remove(Namespace.css.collapse, Namespace.css.show);\r\n          target.classList.add(Namespace.css.collapsing);\r\n          target.style.height = '';\r\n          //eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n          setTimeout(complete, this.getTransitionDurationFromElement(target));\r\n      }\r\n  }\r\n  /**\r\n   * Gets the transition duration from the `element` by getting css properties\r\n   * `transition-duration` and `transition-delay`\r\n   * @param element HTML Element\r\n   */\r\n  Collapse.getTransitionDurationFromElement = (element) => {\r\n      if (!element) {\r\n          return 0;\r\n      }\r\n      // Get transition-duration of the element\r\n      let { transitionDuration, transitionDelay } = window.getComputedStyle(element);\r\n      const floatTransitionDuration = Number.parseFloat(transitionDuration);\r\n      const floatTransitionDelay = Number.parseFloat(transitionDelay);\r\n      // Return 0 if element or transition duration is not found\r\n      if (!floatTransitionDuration && !floatTransitionDelay) {\r\n          return 0;\r\n      }\r\n      // If multiple durations are defined, take the first\r\n      transitionDuration = transitionDuration.split(',')[0];\r\n      transitionDelay = transitionDelay.split(',')[0];\r\n      return ((Number.parseFloat(transitionDuration) +\r\n          Number.parseFloat(transitionDelay)) *\r\n          1000);\r\n  };\n\n  /**\r\n   * Main class for all things display related.\r\n   */\r\n  class Display {\r\n      constructor() {\r\n          this._isVisible = false;\r\n          /**\r\n           * A document click event to hide the widget if click is outside\r\n           * @private\r\n           * @param e MouseEvent\r\n           */\r\n          this._documentClickEvent = (e) => {\r\n              if (this.optionsStore.options.debug || window.debug)\r\n                  return; //eslint-disable-line @typescript-eslint/no-explicit-any\r\n              if (this._isVisible &&\r\n                  !e.composedPath().includes(this.widget) && // click inside the widget\r\n                  !e.composedPath()?.includes(this.optionsStore.element) // click on the element\r\n              ) {\r\n                  this.hide();\r\n              }\r\n          };\r\n          /**\r\n           * Click event for any action like selecting a date\r\n           * @param e MouseEvent\r\n           * @private\r\n           */\r\n          this._actionsClickEvent = (e) => {\r\n              this._eventEmitters.action.emit({ e: e });\r\n          };\r\n          this.optionsStore = serviceLocator.locate(OptionsStore);\r\n          this.validation = serviceLocator.locate(Validation);\r\n          this.dates = serviceLocator.locate(Dates);\r\n          this.dateDisplay = serviceLocator.locate(DateDisplay);\r\n          this.monthDisplay = serviceLocator.locate(MonthDisplay);\r\n          this.yearDisplay = serviceLocator.locate(YearDisplay);\r\n          this.decadeDisplay = serviceLocator.locate(DecadeDisplay);\r\n          this.timeDisplay = serviceLocator.locate(TimeDisplay);\r\n          this.hourDisplay = serviceLocator.locate(HourDisplay);\r\n          this.minuteDisplay = serviceLocator.locate(MinuteDisplay);\r\n          this.secondDisplay = serviceLocator.locate(secondDisplay);\r\n          this._eventEmitters = serviceLocator.locate(EventEmitters);\r\n          this._widget = undefined;\r\n          this._eventEmitters.updateDisplay.subscribe((result) => {\r\n              this._update(result);\r\n          });\r\n      }\r\n      /**\r\n       * Returns the widget body or undefined\r\n       * @private\r\n       */\r\n      get widget() {\r\n          return this._widget;\r\n      }\r\n      get dateContainer() {\r\n          return this.widget?.querySelector(`div.${Namespace.css.dateContainer}`);\r\n      }\r\n      get timeContainer() {\r\n          return this.widget?.querySelector(`div.${Namespace.css.timeContainer}`);\r\n      }\r\n      /**\r\n       * Returns this visible state of the picker (shown)\r\n       */\r\n      get isVisible() {\r\n          return this._isVisible;\r\n      }\r\n      /**\r\n       * Updates the table for a particular unit. Used when an option as changed or\r\n       * whenever the class list might need to be refreshed.\r\n       * @param unit\r\n       * @private\r\n       */\r\n      _update(unit) {\r\n          if (!this.widget)\r\n              return;\r\n          //todo do I want some kind of error catching or other guards here?\r\n          switch (unit) {\r\n              case Unit.seconds:\r\n                  this.secondDisplay._update(this.widget, this.paint);\r\n                  break;\r\n              case Unit.minutes:\r\n                  this.minuteDisplay._update(this.widget, this.paint);\r\n                  break;\r\n              case Unit.hours:\r\n                  this.hourDisplay._update(this.widget, this.paint);\r\n                  break;\r\n              case Unit.date:\r\n                  this.dateDisplay._update(this.widget, this.paint);\r\n                  break;\r\n              case Unit.month:\r\n                  this.monthDisplay._update(this.widget, this.paint);\r\n                  break;\r\n              case Unit.year:\r\n                  this.yearDisplay._update(this.widget, this.paint);\r\n                  break;\r\n              case 'clock':\r\n                  if (!this._hasTime)\r\n                      break;\r\n                  this.timeDisplay._update(this.widget);\r\n                  this._update(Unit.hours);\r\n                  this._update(Unit.minutes);\r\n                  this._update(Unit.seconds);\r\n                  break;\r\n              case 'calendar':\r\n                  this._update(Unit.date);\r\n                  this._update(Unit.year);\r\n                  this._update(Unit.month);\r\n                  this.decadeDisplay._update(this.widget, this.paint);\r\n                  this._updateCalendarHeader();\r\n                  break;\r\n              case 'all':\r\n                  if (this._hasTime) {\r\n                      this._update('clock');\r\n                  }\r\n                  if (this._hasDate) {\r\n                      this._update('calendar');\r\n                  }\r\n          }\r\n      }\r\n      // noinspection JSUnusedLocalSymbols\r\n      /**\r\n       * Allows developers to add/remove classes from an element.\r\n       * @param _unit\r\n       * @param _date\r\n       * @param _classes\r\n       * @param _element\r\n       */\r\n      /* eslint-disable @typescript-eslint/no-unused-vars */\r\n      paint(_unit, _date, _classes, _element) {\r\n          // implemented in plugin\r\n      }\r\n      /**\r\n       * Shows the picker and creates a Popper instance if needed.\r\n       * Add document click event to hide when clicking outside the picker.\r\n       * fires Events#show\r\n       */\r\n      show() {\r\n          if (this.widget == undefined) {\r\n              this._showSetDefaultIfNeeded();\r\n              this._buildWidget();\r\n              this._updateTheme();\r\n              this._showSetupViewMode();\r\n              if (!this.optionsStore.options.display.inline) {\r\n                  // If needed to change the parent container\r\n                  const container = this.optionsStore.options?.container || document.body;\r\n                  const placement = this.optionsStore.options?.display?.placement || 'bottom';\r\n                  container.appendChild(this.widget);\r\n                  this.createPopup(this.optionsStore.element, this.widget, {\r\n                      modifiers: [{ name: 'eventListeners', enabled: true }],\r\n                      //#2400\r\n                      placement: document.documentElement.dir === 'rtl'\r\n                          ? `${placement}-end`\r\n                          : `${placement}-start`,\r\n                  }).then();\r\n              }\r\n              else {\r\n                  this.optionsStore.element.appendChild(this.widget);\r\n              }\r\n              if (this.optionsStore.options.display.viewMode == 'clock') {\r\n                  this._eventEmitters.action.emit({\r\n                      e: null,\r\n                      action: ActionTypes$1.showClock,\r\n                  });\r\n              }\r\n              this.widget\r\n                  .querySelectorAll('[data-action]')\r\n                  .forEach((element) => element.addEventListener('click', this._actionsClickEvent));\r\n              // show the clock when using sideBySide\r\n              if (this._hasTime && this.optionsStore.options.display.sideBySide) {\r\n                  this.timeDisplay._update(this.widget);\r\n                  this.widget.getElementsByClassName(Namespace.css.clockContainer)[0].style.display = 'grid';\r\n              }\r\n          }\r\n          this.widget.classList.add(Namespace.css.show);\r\n          if (!this.optionsStore.options.display.inline) {\r\n              this.updatePopup();\r\n              document.addEventListener('click', this._documentClickEvent);\r\n          }\r\n          this._eventEmitters.triggerEvent.emit({ type: Namespace.events.show });\r\n          this._isVisible = true;\r\n      }\r\n      _showSetupViewMode() {\r\n          // If modeView is only clock\r\n          const onlyClock = this._hasTime && !this._hasDate;\r\n          // reset the view to the clock if there's no date components\r\n          if (onlyClock) {\r\n              this.optionsStore.currentView = 'clock';\r\n              this._eventEmitters.action.emit({\r\n                  e: null,\r\n                  action: ActionTypes$1.showClock,\r\n              });\r\n          }\r\n          // otherwise return to the calendar view\r\n          else if (!this.optionsStore.currentCalendarViewMode) {\r\n              this.optionsStore.currentCalendarViewMode =\r\n                  this.optionsStore.minimumCalendarViewMode;\r\n          }\r\n          if (!onlyClock && this.optionsStore.options.display.viewMode !== 'clock') {\r\n              if (this._hasTime) {\r\n                  if (!this.optionsStore.options.display.sideBySide) {\r\n                      Collapse.hideImmediately(this.timeContainer);\r\n                  }\r\n                  else {\r\n                      Collapse.show(this.timeContainer);\r\n                  }\r\n              }\r\n              Collapse.show(this.dateContainer);\r\n          }\r\n          if (this._hasDate) {\r\n              this._showMode();\r\n          }\r\n      }\r\n      _showSetDefaultIfNeeded() {\r\n          if (this.dates.picked.length != 0)\r\n              return;\r\n          if (this.optionsStore.options.useCurrent &&\r\n              !this.optionsStore.options.defaultDate) {\r\n              const date = new DateTime().setLocalization(this.optionsStore.options.localization);\r\n              if (!this.optionsStore.options.keepInvalid) {\r\n                  let tries = 0;\r\n                  let direction = 1;\r\n                  if (this.optionsStore.options.restrictions.maxDate?.isBefore(date)) {\r\n                      direction = -1;\r\n                  }\r\n                  while (!this.validation.isValid(date) && tries > 31) {\r\n                      date.manipulate(direction, Unit.date);\r\n                      tries++;\r\n                  }\r\n              }\r\n              this.dates.setValue(date);\r\n          }\r\n          if (this.optionsStore.options.defaultDate) {\r\n              this.dates.setValue(this.optionsStore.options.defaultDate);\r\n          }\r\n      }\r\n      async createPopup(element, widget, \r\n      //eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n      options) {\r\n          let createPopperFunction;\r\n          //eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n          if (window?.Popper) {\r\n              //eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n              createPopperFunction = window?.Popper?.createPopper;\r\n          }\r\n          else {\r\n              const { createPopper } = await import('@popperjs/core');\r\n              createPopperFunction = createPopper;\r\n          }\r\n          if (createPopperFunction) {\r\n              this._popperInstance = createPopperFunction(element, widget, options);\r\n          }\r\n      }\r\n      updatePopup() {\r\n          this._popperInstance?.update();\r\n      }\r\n      /**\r\n       * Changes the calendar view mode. E.g. month <-> year\r\n       * @param direction -/+ number to move currentViewMode\r\n       * @private\r\n       */\r\n      _showMode(direction) {\r\n          if (!this.widget) {\r\n              return;\r\n          }\r\n          if (direction) {\r\n              const max = Math.max(this.optionsStore.minimumCalendarViewMode, Math.min(3, this.optionsStore.currentCalendarViewMode + direction));\r\n              if (this.optionsStore.currentCalendarViewMode == max)\r\n                  return;\r\n              this.optionsStore.currentCalendarViewMode = max;\r\n          }\r\n          this.widget\r\n              .querySelectorAll(`.${Namespace.css.dateContainer} > div:not(.${Namespace.css.calendarHeader}), .${Namespace.css.timeContainer} > div:not(.${Namespace.css.clockContainer})`)\r\n              .forEach((e) => (e.style.display = 'none'));\r\n          const datePickerMode = CalendarModes[this.optionsStore.currentCalendarViewMode];\r\n          const picker = this.widget.querySelector(`.${datePickerMode.className}`);\r\n          switch (datePickerMode.className) {\r\n              case Namespace.css.decadesContainer:\r\n                  this.decadeDisplay._update(this.widget, this.paint);\r\n                  break;\r\n              case Namespace.css.yearsContainer:\r\n                  this.yearDisplay._update(this.widget, this.paint);\r\n                  break;\r\n              case Namespace.css.monthsContainer:\r\n                  this.monthDisplay._update(this.widget, this.paint);\r\n                  break;\r\n              case Namespace.css.daysContainer:\r\n                  this.dateDisplay._update(this.widget, this.paint);\r\n                  break;\r\n          }\r\n          picker.style.display = 'grid';\r\n          if (this.optionsStore.options.display.sideBySide)\r\n              (this.widget.querySelectorAll(`.${Namespace.css.clockContainer}`)[0]).style.display = 'grid';\r\n          this._updateCalendarHeader();\r\n          this._eventEmitters.viewUpdate.emit();\r\n      }\r\n      /**\r\n       * Changes the theme. E.g. light, dark or auto\r\n       * @param theme the theme name\r\n       * @private\r\n       */\r\n      _updateTheme(theme) {\r\n          if (!this.widget) {\r\n              return;\r\n          }\r\n          if (theme) {\r\n              if (this.optionsStore.options.display.theme === theme)\r\n                  return;\r\n              this.optionsStore.options.display.theme = theme;\r\n          }\r\n          this.widget.classList.remove('light', 'dark');\r\n          this.widget.classList.add(this._getThemeClass());\r\n          if (this.optionsStore.options.display.theme === 'auto') {\r\n              window\r\n                  .matchMedia(Namespace.css.isDarkPreferredQuery)\r\n                  .addEventListener('change', () => this._updateTheme());\r\n          }\r\n          else {\r\n              window\r\n                  .matchMedia(Namespace.css.isDarkPreferredQuery)\r\n                  .removeEventListener('change', () => this._updateTheme());\r\n          }\r\n      }\r\n      _getThemeClass() {\r\n          const currentTheme = this.optionsStore.options.display.theme || 'auto';\r\n          const isDarkMode = window.matchMedia &&\r\n              window.matchMedia(Namespace.css.isDarkPreferredQuery).matches;\r\n          switch (currentTheme) {\r\n              case 'light':\r\n                  return Namespace.css.lightTheme;\r\n              case 'dark':\r\n                  return Namespace.css.darkTheme;\r\n              case 'auto':\r\n                  return isDarkMode ? Namespace.css.darkTheme : Namespace.css.lightTheme;\r\n          }\r\n      }\r\n      _updateCalendarHeader() {\r\n          if (!this._hasDate)\r\n              return;\r\n          const showing = [\r\n              ...this.widget.querySelector(`.${Namespace.css.dateContainer} div[style*=\"display: grid\"]`).classList,\r\n          ].find((x) => x.startsWith(Namespace.css.dateContainer));\r\n          const [previous, switcher, next] = this.widget\r\n              .getElementsByClassName(Namespace.css.calendarHeader)[0]\r\n              .getElementsByTagName('div');\r\n          switch (showing) {\r\n              case Namespace.css.decadesContainer:\r\n                  previous.setAttribute('title', this.optionsStore.options.localization.previousCentury);\r\n                  switcher.setAttribute('title', '');\r\n                  next.setAttribute('title', this.optionsStore.options.localization.nextCentury);\r\n                  break;\r\n              case Namespace.css.yearsContainer:\r\n                  previous.setAttribute('title', this.optionsStore.options.localization.previousDecade);\r\n                  switcher.setAttribute('title', this.optionsStore.options.localization.selectDecade);\r\n                  next.setAttribute('title', this.optionsStore.options.localization.nextDecade);\r\n                  break;\r\n              case Namespace.css.monthsContainer:\r\n                  previous.setAttribute('title', this.optionsStore.options.localization.previousYear);\r\n                  switcher.setAttribute('title', this.optionsStore.options.localization.selectYear);\r\n                  next.setAttribute('title', this.optionsStore.options.localization.nextYear);\r\n                  break;\r\n              case Namespace.css.daysContainer:\r\n                  previous.setAttribute('title', this.optionsStore.options.localization.previousMonth);\r\n                  switcher.setAttribute('title', this.optionsStore.options.localization.selectMonth);\r\n                  next.setAttribute('title', this.optionsStore.options.localization.nextMonth);\r\n                  switcher.setAttribute(showing, this.optionsStore.viewDate.format(this.optionsStore.options.localization.dayViewHeaderFormat));\r\n                  break;\r\n          }\r\n          switcher.innerText = switcher.getAttribute(showing);\r\n      }\r\n      /**\r\n       * Hides the picker if needed.\r\n       * Remove document click event to hide when clicking outside the picker.\r\n       * fires Events#hide\r\n       */\r\n      hide() {\r\n          if (!this.widget || !this._isVisible)\r\n              return;\r\n          this.widget.classList.remove(Namespace.css.show);\r\n          if (this._isVisible) {\r\n              this._eventEmitters.triggerEvent.emit({\r\n                  type: Namespace.events.hide,\r\n                  date: this.optionsStore.unset ? null : this.dates.lastPicked?.clone,\r\n              });\r\n              this._isVisible = false;\r\n          }\r\n          document.removeEventListener('click', this._documentClickEvent);\r\n      }\r\n      /**\r\n       * Toggles the picker's open state. Fires a show/hide event depending.\r\n       */\r\n      toggle() {\r\n          return this._isVisible ? this.hide() : this.show();\r\n      }\r\n      /**\r\n       * Removes document and data-action click listener and reset the widget\r\n       * @private\r\n       */\r\n      _dispose() {\r\n          document.removeEventListener('click', this._documentClickEvent);\r\n          if (!this.widget)\r\n              return;\r\n          this.widget\r\n              .querySelectorAll('[data-action]')\r\n              .forEach((element) => element.removeEventListener('click', this._actionsClickEvent));\r\n          this.widget.parentNode.removeChild(this.widget);\r\n          this._widget = undefined;\r\n      }\r\n      /**\r\n       * Builds the widgets html template.\r\n       * @private\r\n       */\r\n      _buildWidget() {\r\n          const template = document.createElement('div');\r\n          template.classList.add(Namespace.css.widget);\r\n          const dateView = document.createElement('div');\r\n          dateView.classList.add(Namespace.css.dateContainer);\r\n          dateView.append(this.getHeadTemplate(), this.decadeDisplay.getPicker(), this.yearDisplay.getPicker(), this.monthDisplay.getPicker(), this.dateDisplay.getPicker());\r\n          const timeView = document.createElement('div');\r\n          timeView.classList.add(Namespace.css.timeContainer);\r\n          timeView.appendChild(this.timeDisplay.getPicker(this._iconTag.bind(this)));\r\n          timeView.appendChild(this.hourDisplay.getPicker());\r\n          timeView.appendChild(this.minuteDisplay.getPicker());\r\n          timeView.appendChild(this.secondDisplay.getPicker());\r\n          const toolbar = document.createElement('div');\r\n          toolbar.classList.add(Namespace.css.toolbar);\r\n          toolbar.append(...this.getToolbarElements());\r\n          if (this.optionsStore.options.display.inline) {\r\n              template.classList.add(Namespace.css.inline);\r\n          }\r\n          if (this.optionsStore.options.display.calendarWeeks) {\r\n              template.classList.add('calendarWeeks');\r\n          }\r\n          if (this.optionsStore.options.display.sideBySide && this._hasDateAndTime) {\r\n              this._buildWidgetSideBySide(template, dateView, timeView, toolbar);\r\n              return;\r\n          }\r\n          if (this.optionsStore.options.display.toolbarPlacement === 'top') {\r\n              template.appendChild(toolbar);\r\n          }\r\n          const setupComponentView = (hasFirst, hasSecond, element, shouldShow) => {\r\n              if (!hasFirst)\r\n                  return;\r\n              if (hasSecond) {\r\n                  element.classList.add(Namespace.css.collapse);\r\n                  if (shouldShow)\r\n                      element.classList.add(Namespace.css.show);\r\n              }\r\n              template.appendChild(element);\r\n          };\r\n          setupComponentView(this._hasDate, this._hasTime, dateView, this.optionsStore.options.display.viewMode !== 'clock');\r\n          setupComponentView(this._hasTime, this._hasDate, timeView, this.optionsStore.options.display.viewMode === 'clock');\r\n          if (this.optionsStore.options.display.toolbarPlacement === 'bottom') {\r\n              template.appendChild(toolbar);\r\n          }\r\n          const arrow = document.createElement('div');\r\n          arrow.classList.add('arrow');\r\n          arrow.setAttribute('data-popper-arrow', '');\r\n          template.appendChild(arrow);\r\n          this._widget = template;\r\n      }\r\n      _buildWidgetSideBySide(template, dateView, timeView, toolbar) {\r\n          template.classList.add(Namespace.css.sideBySide);\r\n          if (this.optionsStore.options.display.toolbarPlacement === 'top') {\r\n              template.appendChild(toolbar);\r\n          }\r\n          const row = document.createElement('div');\r\n          row.classList.add('td-row');\r\n          dateView.classList.add('td-half');\r\n          timeView.classList.add('td-half');\r\n          row.appendChild(dateView);\r\n          row.appendChild(timeView);\r\n          template.appendChild(row);\r\n          if (this.optionsStore.options.display.toolbarPlacement === 'bottom') {\r\n              template.appendChild(toolbar);\r\n          }\r\n          this._widget = template;\r\n      }\r\n      /**\r\n       * Returns true if the hours, minutes, or seconds component is turned on\r\n       */\r\n      get _hasTime() {\r\n          return (this.optionsStore.options.display.components.clock &&\r\n              (this.optionsStore.options.display.components.hours ||\r\n                  this.optionsStore.options.display.components.minutes ||\r\n                  this.optionsStore.options.display.components.seconds));\r\n      }\r\n      /**\r\n       * Returns true if the year, month, or date component is turned on\r\n       */\r\n      get _hasDate() {\r\n          return (this.optionsStore.options.display.components.calendar &&\r\n              (this.optionsStore.options.display.components.year ||\r\n                  this.optionsStore.options.display.components.month ||\r\n                  this.optionsStore.options.display.components.date));\r\n      }\r\n      get _hasDateAndTime() {\r\n          return this._hasDate && this._hasTime;\r\n      }\r\n      /**\r\n       * Get the toolbar html based on options like buttons => today\r\n       * @private\r\n       */\r\n      getToolbarElements() {\r\n          const toolbar = [];\r\n          if (this.optionsStore.options.display.buttons.today) {\r\n              const div = document.createElement('div');\r\n              div.setAttribute('data-action', ActionTypes$1.today);\r\n              div.setAttribute('title', this.optionsStore.options.localization.today);\r\n              div.appendChild(this._iconTag(this.optionsStore.options.display.icons.today));\r\n              toolbar.push(div);\r\n          }\r\n          if (!this.optionsStore.options.display.sideBySide &&\r\n              this._hasDate &&\r\n              this._hasTime) {\r\n              let title, icon;\r\n              if (this.optionsStore.options.display.viewMode === 'clock') {\r\n                  title = this.optionsStore.options.localization.selectDate;\r\n                  icon = this.optionsStore.options.display.icons.date;\r\n              }\r\n              else {\r\n                  title = this.optionsStore.options.localization.selectTime;\r\n                  icon = this.optionsStore.options.display.icons.time;\r\n              }\r\n              const div = document.createElement('div');\r\n              div.setAttribute('data-action', ActionTypes$1.togglePicker);\r\n              div.setAttribute('title', title);\r\n              div.appendChild(this._iconTag(icon));\r\n              toolbar.push(div);\r\n          }\r\n          if (this.optionsStore.options.display.buttons.clear) {\r\n              const div = document.createElement('div');\r\n              div.setAttribute('data-action', ActionTypes$1.clear);\r\n              div.setAttribute('title', this.optionsStore.options.localization.clear);\r\n              div.appendChild(this._iconTag(this.optionsStore.options.display.icons.clear));\r\n              toolbar.push(div);\r\n          }\r\n          if (this.optionsStore.options.display.buttons.close) {\r\n              const div = document.createElement('div');\r\n              div.setAttribute('data-action', ActionTypes$1.close);\r\n              div.setAttribute('title', this.optionsStore.options.localization.close);\r\n              div.appendChild(this._iconTag(this.optionsStore.options.display.icons.close));\r\n              toolbar.push(div);\r\n          }\r\n          return toolbar;\r\n      }\r\n      /***\r\n       * Builds the base header template with next and previous icons\r\n       * @private\r\n       */\r\n      getHeadTemplate() {\r\n          const calendarHeader = document.createElement('div');\r\n          calendarHeader.classList.add(Namespace.css.calendarHeader);\r\n          const previous = document.createElement('div');\r\n          previous.classList.add(Namespace.css.previous);\r\n          previous.setAttribute('data-action', ActionTypes$1.previous);\r\n          previous.appendChild(this._iconTag(this.optionsStore.options.display.icons[document.documentElement.dir === 'rtl' ? 'next' : 'previous']) //***\r\n          );\r\n          const switcher = document.createElement('div');\r\n          switcher.classList.add(Namespace.css.switch);\r\n          switcher.setAttribute('data-action', ActionTypes$1.changeCalendarView);\r\n          const next = document.createElement('div');\r\n          next.classList.add(Namespace.css.next);\r\n          next.setAttribute('data-action', ActionTypes$1.next);\r\n          next.appendChild(this._iconTag(this.optionsStore.options.display.icons[document.documentElement.dir === 'rtl' ? 'previous' : 'next']) //***\r\n          );\r\n          calendarHeader.append(previous, switcher, next);\r\n          return calendarHeader;\r\n      }\r\n      /**\r\n       * Builds an icon tag as either an `<i>`\r\n       * or with icons => type is `sprites` then a svg tag instead\r\n       * @param iconClass\r\n       * @private\r\n       */\r\n      _iconTag(iconClass) {\r\n          if (this.optionsStore.options.display.icons.type === 'sprites') {\r\n              const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\r\n              const icon = document.createElementNS('http://www.w3.org/2000/svg', 'use');\r\n              icon.setAttribute('xlink:href', iconClass); // Deprecated. Included for backward compatibility\r\n              icon.setAttribute('href', iconClass);\r\n              svg.appendChild(icon);\r\n              return svg;\r\n          }\r\n          const icon = document.createElement('i');\r\n          icon.classList.add(...iconClass.split(' '));\r\n          return icon;\r\n      }\r\n      /**\r\n       * Causes the widget to get rebuilt on next show. If the picker is already open\r\n       * then hide and reshow it.\r\n       * @private\r\n       */\r\n      _rebuild() {\r\n          const wasVisible = this._isVisible;\r\n          this._dispose();\r\n          if (wasVisible)\r\n              this.show();\r\n      }\r\n  }\n\n  /**\r\n   * Logic for various click actions\r\n   */\r\n  class Actions {\r\n      constructor() {\r\n          this.optionsStore = serviceLocator.locate(OptionsStore);\r\n          this.dates = serviceLocator.locate(Dates);\r\n          this.validation = serviceLocator.locate(Validation);\r\n          this.display = serviceLocator.locate(Display);\r\n          this._eventEmitters = serviceLocator.locate(EventEmitters);\r\n          this._eventEmitters.action.subscribe((result) => {\r\n              this.do(result.e, result.action);\r\n          });\r\n      }\r\n      /**\r\n       * Performs the selected `action`. See ActionTypes\r\n       * @param e This is normally a click event\r\n       * @param action If not provided, then look for a [data-action]\r\n       */\r\n      //eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n      do(e, action) {\r\n          const currentTarget = e?.currentTarget;\r\n          if (currentTarget?.classList?.contains(Namespace.css.disabled))\r\n              return;\r\n          action = action || currentTarget?.dataset?.action;\r\n          const lastPicked = (this.dates.lastPicked || this.optionsStore.viewDate)\r\n              .clone;\r\n          switch (action) {\r\n              case ActionTypes$1.next:\r\n              case ActionTypes$1.previous:\r\n                  this.handleNextPrevious(action);\r\n                  break;\r\n              case ActionTypes$1.changeCalendarView:\r\n                  this.display._showMode(1);\r\n                  this.display._updateCalendarHeader();\r\n                  break;\r\n              case ActionTypes$1.selectMonth:\r\n              case ActionTypes$1.selectYear:\r\n              case ActionTypes$1.selectDecade:\r\n                  this.handleSelectCalendarMode(action, currentTarget);\r\n                  break;\r\n              case ActionTypes$1.selectDay:\r\n                  this.handleSelectDay(currentTarget);\r\n                  break;\r\n              case ActionTypes$1.selectHour: {\r\n                  let hour = +currentTarget.dataset.value;\r\n                  if (lastPicked.hours >= 12 && this.optionsStore.isTwelveHour)\r\n                      hour += 12;\r\n                  lastPicked.hours = hour;\r\n                  this.dates.setValue(lastPicked, this.dates.lastPickedIndex);\r\n                  this.hideOrClock(e);\r\n                  break;\r\n              }\r\n              case ActionTypes$1.selectMinute: {\r\n                  lastPicked.minutes = +currentTarget.dataset.value;\r\n                  this.dates.setValue(lastPicked, this.dates.lastPickedIndex);\r\n                  this.hideOrClock(e);\r\n                  break;\r\n              }\r\n              case ActionTypes$1.selectSecond: {\r\n                  lastPicked.seconds = +currentTarget.dataset.value;\r\n                  this.dates.setValue(lastPicked, this.dates.lastPickedIndex);\r\n                  this.hideOrClock(e);\r\n                  break;\r\n              }\r\n              case ActionTypes$1.incrementHours:\r\n                  this.manipulateAndSet(lastPicked, Unit.hours);\r\n                  break;\r\n              case ActionTypes$1.incrementMinutes:\r\n                  this.manipulateAndSet(lastPicked, Unit.minutes, this.optionsStore.options.stepping);\r\n                  break;\r\n              case ActionTypes$1.incrementSeconds:\r\n                  this.manipulateAndSet(lastPicked, Unit.seconds);\r\n                  break;\r\n              case ActionTypes$1.decrementHours:\r\n                  this.manipulateAndSet(lastPicked, Unit.hours, -1);\r\n                  break;\r\n              case ActionTypes$1.decrementMinutes:\r\n                  this.manipulateAndSet(lastPicked, Unit.minutes, this.optionsStore.options.stepping * -1);\r\n                  break;\r\n              case ActionTypes$1.decrementSeconds:\r\n                  this.manipulateAndSet(lastPicked, Unit.seconds, -1);\r\n                  break;\r\n              case ActionTypes$1.toggleMeridiem:\r\n                  this.manipulateAndSet(lastPicked, Unit.hours, this.dates.lastPicked.hours >= 12 ? -12 : 12);\r\n                  break;\r\n              case ActionTypes$1.togglePicker:\r\n                  this.handleToggle(currentTarget);\r\n                  break;\r\n              case ActionTypes$1.showClock:\r\n              case ActionTypes$1.showHours:\r\n              case ActionTypes$1.showMinutes:\r\n              case ActionTypes$1.showSeconds:\r\n                  //make sure the clock is actually displaying\r\n                  if (!this.optionsStore.options.display.sideBySide &&\r\n                      this.optionsStore.currentView !== 'clock') {\r\n                      //hide calendar\r\n                      Collapse.hideImmediately(this.display.dateContainer);\r\n                      //show clock\r\n                      Collapse.showImmediately(this.display.timeContainer);\r\n                  }\r\n                  this.handleShowClockContainers(action);\r\n                  break;\r\n              case ActionTypes$1.clear:\r\n                  this.dates.setValue(null);\r\n                  this.display._updateCalendarHeader();\r\n                  break;\r\n              case ActionTypes$1.close:\r\n                  this.display.hide();\r\n                  break;\r\n              case ActionTypes$1.today: {\r\n                  const today = new DateTime().setLocalization(this.optionsStore.options.localization);\r\n                  this._eventEmitters.updateViewDate.emit(today);\r\n                  //todo this this really a good idea?\r\n                  if (this.validation.isValid(today, Unit.date))\r\n                      this.dates.setValue(today, this.dates.lastPickedIndex);\r\n                  break;\r\n              }\r\n          }\r\n      }\r\n      handleShowClockContainers(action) {\r\n          if (!this.display._hasTime) {\r\n              Namespace.errorMessages.throwError('Cannot show clock containers when time is disabled.');\r\n              /* ignore coverage: should never happen */\r\n              return;\r\n          }\r\n          this.optionsStore.currentView = 'clock';\r\n          this.display.widget\r\n              .querySelectorAll(`.${Namespace.css.timeContainer} > div`)\r\n              .forEach((htmlElement) => (htmlElement.style.display = 'none'));\r\n          let classToUse = '';\r\n          switch (action) {\r\n              case ActionTypes$1.showClock:\r\n                  classToUse = Namespace.css.clockContainer;\r\n                  this.display._update('clock');\r\n                  break;\r\n              case ActionTypes$1.showHours:\r\n                  classToUse = Namespace.css.hourContainer;\r\n                  this.display._update(Unit.hours);\r\n                  break;\r\n              case ActionTypes$1.showMinutes:\r\n                  classToUse = Namespace.css.minuteContainer;\r\n                  this.display._update(Unit.minutes);\r\n                  break;\r\n              case ActionTypes$1.showSeconds:\r\n                  classToUse = Namespace.css.secondContainer;\r\n                  this.display._update(Unit.seconds);\r\n                  break;\r\n          }\r\n          (this.display.widget.getElementsByClassName(classToUse)[0]).style.display = 'grid';\r\n      }\r\n      handleNextPrevious(action) {\r\n          const { unit, step } = CalendarModes[this.optionsStore.currentCalendarViewMode];\r\n          if (action === ActionTypes$1.next)\r\n              this.optionsStore.viewDate.manipulate(step, unit);\r\n          else\r\n              this.optionsStore.viewDate.manipulate(step * -1, unit);\r\n          this._eventEmitters.viewUpdate.emit();\r\n          this.display._showMode();\r\n      }\r\n      /**\r\n       * After setting the value it will either show the clock or hide the widget.\r\n       * @param e\r\n       */\r\n      hideOrClock(e) {\r\n          if (!this.optionsStore.isTwelveHour &&\r\n              !this.optionsStore.options.display.components.minutes &&\r\n              !this.optionsStore.options.display.keepOpen &&\r\n              !this.optionsStore.options.display.inline) {\r\n              this.display.hide();\r\n          }\r\n          else {\r\n              this.do(e, ActionTypes$1.showClock);\r\n          }\r\n      }\r\n      /**\r\n       * Common function to manipulate {@link lastPicked} by `unit`.\r\n       * @param lastPicked\r\n       * @param unit\r\n       * @param value Value to change by\r\n       */\r\n      manipulateAndSet(lastPicked, unit, value = 1) {\r\n          const newDate = lastPicked.manipulate(value, unit);\r\n          if (this.validation.isValid(newDate, unit)) {\r\n              this.dates.setValue(newDate, this.dates.lastPickedIndex);\r\n          }\r\n      }\r\n      handleSelectCalendarMode(action, currentTarget) {\r\n          const value = +currentTarget.dataset.value;\r\n          switch (action) {\r\n              case ActionTypes$1.selectMonth:\r\n                  this.optionsStore.viewDate.month = value;\r\n                  break;\r\n              case ActionTypes$1.selectYear:\r\n              case ActionTypes$1.selectDecade:\r\n                  this.optionsStore.viewDate.year = value;\r\n                  break;\r\n          }\r\n          if (this.optionsStore.currentCalendarViewMode ===\r\n              this.optionsStore.minimumCalendarViewMode) {\r\n              this.dates.setValue(this.optionsStore.viewDate, this.dates.lastPickedIndex);\r\n              if (!this.optionsStore.options.display.inline) {\r\n                  this.display.hide();\r\n              }\r\n          }\r\n          else {\r\n              this.display._showMode(-1);\r\n          }\r\n      }\r\n      handleToggle(currentTarget) {\r\n          if (currentTarget.getAttribute('title') ===\r\n              this.optionsStore.options.localization.selectDate) {\r\n              currentTarget.setAttribute('title', this.optionsStore.options.localization.selectTime);\r\n              currentTarget.innerHTML = this.display._iconTag(this.optionsStore.options.display.icons.time).outerHTML;\r\n              this.display._updateCalendarHeader();\r\n              this.optionsStore.refreshCurrentView();\r\n          }\r\n          else {\r\n              currentTarget.setAttribute('title', this.optionsStore.options.localization.selectDate);\r\n              currentTarget.innerHTML = this.display._iconTag(this.optionsStore.options.display.icons.date).outerHTML;\r\n              if (this.display._hasTime) {\r\n                  this.handleShowClockContainers(ActionTypes$1.showClock);\r\n                  this.display._update('clock');\r\n              }\r\n          }\r\n          this.display.widget\r\n              .querySelectorAll(`.${Namespace.css.dateContainer}, .${Namespace.css.timeContainer}`)\r\n              .forEach((htmlElement) => Collapse.toggle(htmlElement));\r\n          this._eventEmitters.viewUpdate.emit();\r\n      }\r\n      handleSelectDay(currentTarget) {\r\n          const day = this.optionsStore.viewDate.clone;\r\n          if (currentTarget.classList.contains(Namespace.css.old)) {\r\n              day.manipulate(-1, Unit.month);\r\n          }\r\n          if (currentTarget.classList.contains(Namespace.css.new)) {\r\n              day.manipulate(1, Unit.month);\r\n          }\r\n          day.date = +currentTarget.dataset.day;\r\n          if (this.optionsStore.options.dateRange)\r\n              this.handleDateRange(day);\r\n          else if (this.optionsStore.options.multipleDates) {\r\n              this.handleMultiDate(day);\r\n          }\r\n          else {\r\n              this.dates.setValue(day, this.dates.lastPickedIndex);\r\n          }\r\n          if (!this.display._hasTime &&\r\n              !this.optionsStore.options.display.keepOpen &&\r\n              !this.optionsStore.options.display.inline &&\r\n              !this.optionsStore.options.multipleDates &&\r\n              !this.optionsStore.options.dateRange) {\r\n              this.display.hide();\r\n          }\r\n      }\r\n      handleMultiDate(day) {\r\n          let index = this.dates.pickedIndex(day, Unit.date);\r\n          if (index !== -1) {\r\n              this.dates.setValue(null, index); //deselect multi-date\r\n          }\r\n          else {\r\n              index = this.dates.lastPickedIndex + 1;\r\n              if (this.dates.picked.length === 0)\r\n                  index = 0;\r\n              this.dates.setValue(day, index);\r\n          }\r\n      }\r\n      handleDateRange(day) {\r\n          switch (this.dates.picked.length) {\r\n              case 2: {\r\n                  this.dates.clear();\r\n                  break;\r\n              }\r\n              case 1: {\r\n                  const other = this.dates.picked[0];\r\n                  if (day.getTime() === other.getTime()) {\r\n                      this.dates.clear();\r\n                      break;\r\n                  }\r\n                  if (day.isBefore(other)) {\r\n                      this.dates.setValue(day, 0);\r\n                      this.dates.setValue(other, 1);\r\n                      return;\r\n                  }\r\n                  else {\r\n                      this.dates.setValue(day, 1);\r\n                      return;\r\n                  }\r\n              }\r\n          }\r\n          this.dates.setValue(day, 0);\r\n      }\r\n  }\n\n  /**\r\n   * A robust and powerful date/time picker component.\r\n   */\r\n  class TempusDominus {\r\n      constructor(element, options = {}) {\r\n          //eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n          this._subscribers = {};\r\n          this._isDisabled = false;\r\n          /**\r\n           * Event for when the input field changes. This is a class level method so there's\r\n           * something for the remove listener function.\r\n           * @private\r\n           */\r\n          //eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n          this._inputChangeEvent = (event) => {\r\n              const internallyTriggered = event?.detail;\r\n              if (internallyTriggered)\r\n                  return;\r\n              const setViewDate = () => {\r\n                  if (this.dates.lastPicked)\r\n                      this.optionsStore.viewDate = this.dates.lastPicked.clone;\r\n              };\r\n              const value = this.optionsStore.input.value;\r\n              if (this.optionsStore.options.multipleDates) {\r\n                  try {\r\n                      const valueSplit = value.split(this.optionsStore.options.multipleDatesSeparator);\r\n                      for (let i = 0; i < valueSplit.length; i++) {\r\n                          this.dates.setFromInput(valueSplit[i], i);\r\n                      }\r\n                      setViewDate();\r\n                  }\r\n                  catch {\r\n                      console.warn('TD: Something went wrong trying to set the multipleDates values from the input field.');\r\n                  }\r\n              }\r\n              else {\r\n                  this.dates.setFromInput(value, 0);\r\n                  setViewDate();\r\n              }\r\n          };\r\n          /**\r\n           * Event for when the toggle is clicked. This is a class level method so there's\r\n           * something for the remove listener function.\r\n           * @private\r\n           */\r\n          this._toggleClickEvent = () => {\r\n              if (this.optionsStore.element?.disabled ||\r\n                  this.optionsStore.input?.disabled)\r\n                  return;\r\n              this.toggle();\r\n          };\r\n          setupServiceLocator();\r\n          this._eventEmitters = serviceLocator.locate(EventEmitters);\r\n          this.optionsStore = serviceLocator.locate(OptionsStore);\r\n          this.display = serviceLocator.locate(Display);\r\n          this.dates = serviceLocator.locate(Dates);\r\n          this.actions = serviceLocator.locate(Actions);\r\n          if (!element) {\r\n              Namespace.errorMessages.mustProvideElement();\r\n          }\r\n          this.optionsStore.element = element;\r\n          this._initializeOptions(options, DefaultOptions, true);\r\n          this.optionsStore.viewDate.setLocalization(this.optionsStore.options.localization);\r\n          this.optionsStore.unset = true;\r\n          this._initializeInput();\r\n          this._initializeToggle();\r\n          if (this.optionsStore.options.display.inline)\r\n              this.display.show();\r\n          this._eventEmitters.triggerEvent.subscribe((e) => {\r\n              this._triggerEvent(e);\r\n          });\r\n          this._eventEmitters.viewUpdate.subscribe(() => {\r\n              this._viewUpdate();\r\n          });\r\n          this._eventEmitters.updateViewDate.subscribe((dateTime) => {\r\n              this.viewDate = dateTime;\r\n          });\r\n      }\r\n      get viewDate() {\r\n          return this.optionsStore.viewDate;\r\n      }\r\n      set viewDate(value) {\r\n          this.optionsStore.viewDate = value;\r\n          this.optionsStore.viewDate.setLocalization(this.optionsStore.options.localization);\r\n          this.display._update(this.optionsStore.currentView === 'clock' ? 'clock' : 'calendar');\r\n      }\r\n      // noinspection JSUnusedGlobalSymbols\r\n      /**\r\n       * Update the picker options. If `reset` is provide `options` will be merged with DefaultOptions instead.\r\n       * @param options\r\n       * @param reset\r\n       * @public\r\n       */\r\n      updateOptions(options, reset = false) {\r\n          if (reset)\r\n              this._initializeOptions(options, DefaultOptions);\r\n          else\r\n              this._initializeOptions(options, this.optionsStore.options);\r\n          this.optionsStore.viewDate.setLocalization(this.optionsStore.options.localization);\r\n          this.display._rebuild();\r\n      }\r\n      // noinspection JSUnusedGlobalSymbols\r\n      /**\r\n       * Toggles the picker open or closed. If the picker is disabled, nothing will happen.\r\n       * @public\r\n       */\r\n      toggle() {\r\n          if (this._isDisabled)\r\n              return;\r\n          this.display.toggle();\r\n      }\r\n      // noinspection JSUnusedGlobalSymbols\r\n      /**\r\n       * Shows the picker unless the picker is disabled.\r\n       * @public\r\n       */\r\n      show() {\r\n          if (this._isDisabled)\r\n              return;\r\n          this.display.show();\r\n      }\r\n      // noinspection JSUnusedGlobalSymbols\r\n      /**\r\n       * Hides the picker unless the picker is disabled.\r\n       * @public\r\n       */\r\n      hide() {\r\n          this.display.hide();\r\n      }\r\n      // noinspection JSUnusedGlobalSymbols\r\n      /**\r\n       * Disables the picker and the target input field.\r\n       * @public\r\n       */\r\n      disable() {\r\n          this._isDisabled = true;\r\n          // todo this might be undesired. If a dev disables the input field to\r\n          // only allow using the picker, this will break that.\r\n          this.optionsStore.input?.setAttribute('disabled', 'disabled');\r\n          this.display.hide();\r\n      }\r\n      // noinspection JSUnusedGlobalSymbols\r\n      /**\r\n       * Enables the picker and the target input field.\r\n       * @public\r\n       */\r\n      enable() {\r\n          this._isDisabled = false;\r\n          this.optionsStore.input?.removeAttribute('disabled');\r\n      }\r\n      // noinspection JSUnusedGlobalSymbols\r\n      /**\r\n       * Clears all the selected dates\r\n       * @public\r\n       */\r\n      clear() {\r\n          this.optionsStore.input.value = '';\r\n          this.dates.clear();\r\n      }\r\n      // noinspection JSUnusedGlobalSymbols\r\n      /**\r\n       * Allows for a direct subscription to picker events, without having to use addEventListener on the element.\r\n       * @param eventTypes See Namespace.Events\r\n       * @param callbacks Function to call when event is triggered\r\n       * @public\r\n       */\r\n      subscribe(eventTypes, callbacks //eslint-disable-line @typescript-eslint/no-explicit-any\r\n      ) {\r\n          if (typeof eventTypes === 'string') {\r\n              eventTypes = [eventTypes];\r\n          }\r\n          let callBackArray; //eslint-disable-line @typescript-eslint/no-explicit-any\r\n          if (!Array.isArray(callbacks)) {\r\n              callBackArray = [callbacks];\r\n          }\r\n          else {\r\n              callBackArray = callbacks;\r\n          }\r\n          if (eventTypes.length !== callBackArray.length) {\r\n              Namespace.errorMessages.subscribeMismatch();\r\n          }\r\n          const returnArray = [];\r\n          for (let i = 0; i < eventTypes.length; i++) {\r\n              const eventType = eventTypes[i];\r\n              if (!Array.isArray(this._subscribers[eventType])) {\r\n                  this._subscribers[eventType] = [];\r\n              }\r\n              this._subscribers[eventType].push(callBackArray[i]);\r\n              returnArray.push({\r\n                  unsubscribe: this._unsubscribe.bind(this, eventType, this._subscribers[eventType].length - 1),\r\n              });\r\n              if (eventTypes.length === 1) {\r\n                  return returnArray[0];\r\n              }\r\n          }\r\n          return returnArray;\r\n      }\r\n      // noinspection JSUnusedGlobalSymbols\r\n      /**\r\n       * Hides the picker and removes event listeners\r\n       */\r\n      dispose() {\r\n          this.display.hide();\r\n          // this will clear the document click event listener\r\n          this.display._dispose();\r\n          this._eventEmitters.destroy();\r\n          this.optionsStore.input?.removeEventListener('change', this._inputChangeEvent);\r\n          if (this.optionsStore.options.allowInputToggle) {\r\n              this.optionsStore.input?.removeEventListener('click', this._toggleClickEvent);\r\n          }\r\n          this._toggle?.removeEventListener('click', this._toggleClickEvent);\r\n          this._subscribers = {};\r\n      }\r\n      /**\r\n       * Updates the options to use the provided language.\r\n       * THe language file must be loaded first.\r\n       * @param language\r\n       */\r\n      locale(language) {\r\n          const asked = loadedLocales[language];\r\n          if (!asked)\r\n              return;\r\n          this.updateOptions({\r\n              localization: asked,\r\n          });\r\n      }\r\n      /**\r\n       * Triggers an event like ChangeEvent when the picker has updated the value\r\n       * of a selected date.\r\n       * @param event Accepts a BaseEvent object.\r\n       * @private\r\n       */\r\n      _triggerEvent(event) {\r\n          event.viewMode = this.optionsStore.currentView;\r\n          const isChangeEvent = event.type === Namespace.events.change;\r\n          if (isChangeEvent) {\r\n              const { date, oldDate, isClear } = event;\r\n              if ((date && oldDate && date.isSame(oldDate)) ||\r\n                  (!isClear && !date && !oldDate)) {\r\n                  return;\r\n              }\r\n              this._handleAfterChangeEvent(event);\r\n              this.optionsStore.input?.dispatchEvent(\r\n              //eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n              new CustomEvent('change', { detail: event }));\r\n          }\r\n          this.optionsStore.element.dispatchEvent(\r\n          //eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n          new CustomEvent(event.type, { detail: event }));\r\n          //eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n          if (window.jQuery) {\r\n              //eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n              const $ = window.jQuery;\r\n              if (isChangeEvent && this.optionsStore.input) {\r\n                  $(this.optionsStore.input).trigger(event);\r\n              }\r\n              else {\r\n                  $(this.optionsStore.element).trigger(event);\r\n              }\r\n          }\r\n          this._publish(event);\r\n      }\r\n      _publish(event) {\r\n          // return if event is not subscribed\r\n          if (!Array.isArray(this._subscribers[event.type])) {\r\n              return;\r\n          }\r\n          // Trigger callback for each subscriber\r\n          this._subscribers[event.type].forEach((callback) => {\r\n              callback(event);\r\n          });\r\n      }\r\n      /**\r\n       * Fires a ViewUpdate event when, for example, the month view is changed.\r\n       * @private\r\n       */\r\n      _viewUpdate() {\r\n          this._triggerEvent({\r\n              type: Namespace.events.update,\r\n              viewDate: this.optionsStore.viewDate.clone,\r\n          });\r\n      }\r\n      _unsubscribe(eventName, index) {\r\n          this._subscribers[eventName].splice(index, 1);\r\n      }\r\n      /**\r\n       * Merges two Option objects together and validates options type\r\n       * @param config new Options\r\n       * @param mergeTo Options to merge into\r\n       * @param includeDataset When true, the elements data-td attributes will be included in the\r\n       * @private\r\n       */\r\n      _initializeOptions(config, mergeTo, includeDataset = false) {\r\n          let newConfig = OptionConverter.deepCopy(config);\r\n          newConfig = OptionConverter._mergeOptions(newConfig, mergeTo);\r\n          if (includeDataset)\r\n              newConfig = OptionConverter._dataToOptions(this.optionsStore.element, newConfig);\r\n          OptionConverter._validateConflicts(newConfig);\r\n          newConfig.viewDate = newConfig.viewDate.setLocalization(newConfig.localization);\r\n          if (!this.optionsStore.viewDate.isSame(newConfig.viewDate)) {\r\n              this.optionsStore.viewDate = newConfig.viewDate;\r\n          }\r\n          /**\r\n           * Sets the minimum view allowed by the picker. For example the case of only\r\n           * allowing year and month to be selected but not date.\r\n           */\r\n          if (newConfig.display.components.year) {\r\n              this.optionsStore.minimumCalendarViewMode = 2;\r\n          }\r\n          if (newConfig.display.components.month) {\r\n              this.optionsStore.minimumCalendarViewMode = 1;\r\n          }\r\n          if (newConfig.display.components.date) {\r\n              this.optionsStore.minimumCalendarViewMode = 0;\r\n          }\r\n          this.optionsStore.currentCalendarViewMode = Math.max(this.optionsStore.minimumCalendarViewMode, this.optionsStore.currentCalendarViewMode);\r\n          // Update view mode if needed\r\n          if (CalendarModes[this.optionsStore.currentCalendarViewMode].name !==\r\n              newConfig.display.viewMode) {\r\n              this.optionsStore.currentCalendarViewMode = Math.max(CalendarModes.findIndex((x) => x.name === newConfig.display.viewMode), this.optionsStore.minimumCalendarViewMode);\r\n          }\r\n          if (this.display?.isVisible) {\r\n              this.display._update('all');\r\n          }\r\n          if (newConfig.display.components.useTwentyfourHour &&\r\n              newConfig.localization.hourCycle === undefined)\r\n              newConfig.localization.hourCycle = 'h24';\r\n          else if (newConfig.localization.hourCycle === undefined) {\r\n              newConfig.localization.hourCycle = guessHourCycle(newConfig.localization.locale);\r\n          }\r\n          this.optionsStore.options = newConfig;\r\n      }\r\n      /**\r\n       * Checks if an input field is being used, attempts to locate one and sets an\r\n       * event listener if found.\r\n       * @private\r\n       */\r\n      _initializeInput() {\r\n          if (this.optionsStore.element.tagName == 'INPUT') {\r\n              this.optionsStore.input = this.optionsStore.element;\r\n          }\r\n          else {\r\n              const query = this.optionsStore.element.dataset.tdTargetInput;\r\n              if (query == undefined || query == 'nearest') {\r\n                  this.optionsStore.input =\r\n                      this.optionsStore.element.querySelector('input');\r\n              }\r\n              else {\r\n                  this.optionsStore.input =\r\n                      this.optionsStore.element.querySelector(query);\r\n              }\r\n          }\r\n          if (!this.optionsStore.input)\r\n              return;\r\n          if (!this.optionsStore.input.value && this.optionsStore.options.defaultDate)\r\n              this.optionsStore.input.value = this.dates.formatInput(this.optionsStore.options.defaultDate);\r\n          this.optionsStore.input.addEventListener('change', this._inputChangeEvent);\r\n          if (this.optionsStore.options.allowInputToggle) {\r\n              this.optionsStore.input.addEventListener('click', this._toggleClickEvent);\r\n          }\r\n          if (this.optionsStore.input.value) {\r\n              this._inputChangeEvent();\r\n          }\r\n      }\r\n      /**\r\n       * Attempts to locate a toggle for the picker and sets an event listener\r\n       * @private\r\n       */\r\n      _initializeToggle() {\r\n          if (this.optionsStore.options.display.inline)\r\n              return;\r\n          let query = this.optionsStore.element.dataset.tdTargetToggle;\r\n          if (query == 'nearest') {\r\n              query = '[data-td-toggle=\"datetimepicker\"]';\r\n          }\r\n          this._toggle =\r\n              query == undefined\r\n                  ? this.optionsStore.element\r\n                  : this.optionsStore.element.querySelector(query);\r\n          this._toggle.addEventListener('click', this._toggleClickEvent);\r\n      }\r\n      /**\r\n       * If the option is enabled this will render the clock view after a date pick.\r\n       * @param e change event\r\n       * @private\r\n       */\r\n      _handleAfterChangeEvent(e) {\r\n          if (\r\n          // options is disabled\r\n          !this.optionsStore.options.promptTimeOnDateChange ||\r\n              this.optionsStore.options.multipleDates ||\r\n              this.optionsStore.options.display.inline ||\r\n              this.optionsStore.options.display.sideBySide ||\r\n              // time is disabled\r\n              !this.display._hasTime ||\r\n              // clock component is already showing\r\n              this.display.widget\r\n                  ?.getElementsByClassName(Namespace.css.show)[0]\r\n                  .classList.contains(Namespace.css.timeContainer))\r\n              return;\r\n          // First time ever. If useCurrent option is set to true (default), do nothing\r\n          // because the first date is selected automatically.\r\n          // or date didn't change (time did) or date changed because time did.\r\n          if ((!e.oldDate && this.optionsStore.options.useCurrent) ||\r\n              (e.oldDate && e.date?.isSame(e.oldDate))) {\r\n              return;\r\n          }\r\n          clearTimeout(this._currentPromptTimeTimeout);\r\n          this._currentPromptTimeTimeout = setTimeout(() => {\r\n              if (this.display.widget) {\r\n                  this._eventEmitters.action.emit({\r\n                      e: {\r\n                          currentTarget: this.display.widget.querySelector(`.${Namespace.css.switch}`),\r\n                      },\r\n                      action: ActionTypes$1.togglePicker,\r\n                  });\r\n              }\r\n          }, this.optionsStore.options.promptTimeOnDateChangeTransitionDelay);\r\n      }\r\n  }\r\n  /**\r\n   * Whenever a locale is loaded via a plugin then store it here based on the\r\n   * locale name. E.g. loadedLocales['ru']\r\n   */\r\n  const loadedLocales = {};\r\n  // noinspection JSUnusedGlobalSymbols\r\n  /**\r\n   * Called from a locale plugin.\r\n   * @param l locale object for localization options\r\n   */\r\n  const loadLocale = (l) => {\r\n      if (loadedLocales[l.name])\r\n          return;\r\n      loadedLocales[l.name] = l.localization;\r\n  };\r\n  /**\r\n   * A sets the global localization options to the provided locale name.\r\n   * `loadLocale` MUST be called first.\r\n   * @param l\r\n   */\r\n  const locale = (l) => {\r\n      const asked = loadedLocales[l];\r\n      if (!asked)\r\n          return;\r\n      DefaultOptions.localization = asked;\r\n  };\r\n  // noinspection JSUnusedGlobalSymbols\r\n  /**\r\n   * Called from a plugin to extend or override picker defaults.\r\n   * @param plugin\r\n   * @param option\r\n   */\r\n  const extend = function (plugin, option = undefined) {\r\n      if (!plugin)\r\n          return tempusDominus$1;\r\n      if (!plugin.installed) {\r\n          // install plugin only once\r\n          plugin(option, { TempusDominus, Dates, Display, DateTime, Namespace }, tempusDominus$1);\r\n          plugin.installed = true;\r\n      }\r\n      return tempusDominus$1;\r\n  };\r\n  const version = '6.7.7';\r\n  const tempusDominus$1 = {\r\n      TempusDominus,\r\n      extend,\r\n      loadLocale,\r\n      locale,\r\n      Namespace,\r\n      DefaultOptions,\r\n      DateTime,\r\n      Unit,\r\n      version,\r\n      DefaultEnLocalization,\r\n  };\n\n  var _tempusDominus = {\n    __proto__: null,\n    TempusDominus: TempusDominus,\n    extend: extend,\n    loadLocale: loadLocale,\n    locale: locale,\n    Namespace: Namespace,\n    DefaultOptions: DefaultOptions,\n    DateTime: DateTime,\n    get Unit () { return Unit; },\n    version: version,\n    DefaultEnLocalization: DefaultEnLocalization\n  };\n\n  var luxon_parse = (_, tdClasses, tdFactory) => {\r\n      tdClasses.Dates.prototype.setFromInput = function (value, index) {\r\n          let locale = this.optionsStore.options.localization.locale, format = this.optionsStore.options.localization.format;\r\n          if (format) {\r\n              let opts = {\r\n                  locale\r\n              };\r\n              let parsedDate = new tdFactory.DateTime(luxon__namespace.DateTime.fromFormat(value, format, opts).toJSDate());\r\n              // Check if the date is valid (An invalid date object returns NaN for getTime() and NaN is the only object not strictly equal to itself.)\r\n              if (parsedDate && parsedDate.getTime() === parsedDate.getTime()) {\r\n                  let date = tdFactory.DateTime.convert(parsedDate, locale);\r\n                  this.setValue(date, index);\r\n              }\r\n              else {\r\n                  console.error('Luxon failed to parse the input date.');\r\n              }\r\n          }\r\n          else {\r\n              console.error('Missing format.');\r\n          }\r\n      };\r\n      tdClasses.Dates.prototype.formatInput = function (date) {\r\n          let locale = this.optionsStore.options.localization.locale, format = this.optionsStore.options.localization.format;\r\n          if (format) {\r\n              let opts = {\r\n                  locale,\r\n                  outputCalendar: \"gregory\" // Make sure the date is converted back to \"gregory\" format\r\n              };\r\n              return date ? luxon__namespace.DateTime.fromJSDate(date, opts).toFormat(format) : \"\";\r\n          }\r\n          else {\r\n              console.error('Missing format.');\r\n          }\r\n      };\r\n  };\n\n  ///<reference src=\"js/tempus-dominus\"/>\n\n  const tempusDominus = _tempusDominus;\n\n  tempusDominus.extend(luxon_parse); //***\n  // tempusDominus.extend(fa_five); //*** for v2022 only\n\n  /*!\n   * Tempus Dominus v6.7.7 (https://getdatepicker.com/)\n    * Copyright 2013-2021 Jonathan Peterson\n    * Licensed under MIT (https://github.com/Eonasdan/tempus-dominus/blob/master/LICENSE)\n    */\n  tempusDominus.jQueryInterface = function (option, argument) {\n    if (this.length === 1) {\n      return tempusDominus.jQueryHandleThis(this, option, argument);\n    }\n    // \"this\" is jquery here\n    return this.each(function () {\n      tempusDominus.jQueryHandleThis(this, option, argument);\n    });\n  };\n\n  tempusDominus.jQueryHandleThis = function (me, option, argument) {\n    let data = $__default[\"default\"](me).data(tempusDominus.Namespace.dataKey);\n    if (typeof option === 'object') {\n          option = $__default[\"default\"].extend({}, tempusDominus.DefaultOptions, option);\n    }\n\n    if (!data) {\n      data = new tempusDominus.TempusDominus($__default[\"default\"](me)[0], option);\n      $__default[\"default\"](me).data(tempusDominus.Namespace.dataKey, data);\n    }\n\n    if (typeof option === 'string') {\n      if (data[option] === undefined) {\n        throw new Error(`No method named \"${option}\"`);\n      }\n      if (argument === undefined) {\n        return data[option]();\n      } else {\n        if (option === 'date') {\n          data.isDateUpdateThroughDateOptionFromClientCode = true;\n        }\n        const ret = data[option](argument);\n        data.isDateUpdateThroughDateOptionFromClientCode = false;\n        return ret;\n      }\n    }\n  };\n\n  /**\n   * ------------------------------------------------------------------------\n   * jQuery\n   * ------------------------------------------------------------------------\n   */\n  //*** $(document)\n  //   .on(\n  //     `click${tempusDominus.Namespace.events.key}.data-api`,\n  //     `[data-toggle=\"${tempusDominus.Namespace.dataKey}\"]`,\n  //     function () {\n  //       const $originalTarget = $(this),\n  //         $target = tempusDominus.getSelectorFromElement($originalTarget),\n  //         config = $target.data(tempusDominus.Namespace.dataKey);\n  //       if ($target.length === 0) {\n  //         return;\n  //       }\n  //       if (\n  //         config._options.allowInputToggle &&\n  //         $originalTarget.is('input[data-toggle=\"datetimepicker\"]')\n  //       ) {\n  //         return;\n  //       }\n  //       tempusDominus.jQueryInterface.call($target, 'toggle');\n  //     }\n  //   )\n  //   .on(\n  //     tempusDominus.Namespace.events.change,\n  //     `.${tempusDominus.Namespace.NAME}-input`,\n  //     function (event) {\n  //       const $target = tempusDominus.getSelectorFromElement($(this));\n  //       if ($target.length === 0 || event.isInit) {\n  //         return;\n  //       }\n  //       tempusDominus.jQueryInterface.call($target, '_change', event);\n  //     }\n  //   )\n  //   .on(\n  //     tempusDominus.Namespace.events.blur,\n  //     `.${tempusDominus.Namespace.NAME}-input`,\n  //     function (event) {\n  //       const $target = tempusDominus.getSelectorFromElement($(this)),\n  //         config = $target.data(tempusDominus.Namespace.dataKey);\n  //       if ($target.length === 0) {\n  //         return;\n  //       }\n  //       if (config._options.debug || window.debug) {\n  //         return;\n  //       }\n  //       tempusDominus.jQueryInterface.call($target, 'hide', event);\n  //     }\n  //   )\n  //   /*.on(tempusDominus.Namespace.Events.keydown, `.${tempusDominus.Namespace.NAME}-input`, function (event) {\n  //     const $target = tempusDominus.getSelectorFromElement($(this));\n  //     if ($target.length === 0) {\n  //       return;\n  //     }\n  //     tempusDominus.jQueryInterface.call($target, '_keydown', event);\n  //   })\n  //   .on(tempusDominus.Namespace.Events.keyup, `.${tempusDominus.Namespace.NAME}-input`, function (event) {\n  //     const $target = tempusDominus.getSelectorFromElement($(this));\n  //     if ($target.length === 0) {\n  //       return;\n  //     }\n  //     tempusDominus.jQueryInterface.call($target, '_keyup', event);\n  //   })*/\n  //   .on(\n  //     tempusDominus.Namespace.events.focus,\n  //     `.${tempusDominus.Namespace.NAME}-input`,\n  //     function (event) {\n  //       const $target = tempusDominus.getSelectorFromElement($(this)),\n  //         config = $target.data(tempusDominus.Namespace.dataKey);\n  //       if ($target.length === 0) {\n  //         return;\n  //       }\n  //       if (!config._options.allowInputToggle) {\n  //         return;\n  //       }\n  //       tempusDominus.jQueryInterface.call($target, 'show', event);\n  //     }\n  //   );\n  const name = 'tempusDominus';\n  const JQUERY_NO_CONFLICT = $__default[\"default\"].fn[name];\n  $__default[\"default\"].fn[name] = tempusDominus.jQueryInterface;\n  $__default[\"default\"].fn[name].Constructor = tempusDominus.TempusDominus;\n  $__default[\"default\"].fn[name].noConflict = function () {\n    $__default[\"default\"].fn[name] = JQUERY_NO_CONFLICT;\n    return tempusDominus.jQueryInterface;\n  };\n\n  return tempusDominus;\n\n})(jQuery, luxon);\n"],"mappings":";;;;;AAKA,IAAIA,cAAgB,SAAWC,EAAGC,GAChC,aAEA,SAASC,EAAuBC,GAAK,OAAOA,GAAkB,iBAANA,GAAkB,YAAaA,EAAIA,EAAI,CAAEC,QAAWD,EAAK,CAEjH,SAASE,EAAkBF,GACzB,GAAIA,GAAKA,EAAEG,WAAY,OAAOH,EAC9B,IAAII,EAAIC,OAAOC,OAAO,MAatB,OAZIN,GACFK,OAAOE,KAAKP,GAAGQ,SAAQ,SAAUC,GAC/B,GAAU,YAANA,EAAiB,CACnB,IAAIC,EAAIL,OAAOM,yBAAyBX,EAAGS,GAC3CJ,OAAOO,eAAeR,EAAGK,EAAGC,EAAEG,IAAMH,EAAI,CACtCI,YAAY,EACZD,IAAK,WAAc,OAAOb,EAAES,EAAI,GAEpC,CACF,IAEFL,EAAW,QAAIJ,EACRI,CACT,CAEA,IAAIW,EAA0BhB,EAAsBF,GAChDmB,EAAgCd,EAAkBJ,GAEtD,MAAMmB,gBAAgBC,OA8ItB,MAAMC,EAAO,iBAkOb,MAAMC,WAENA,UAAUD,KAAOA,EAEjBC,UAAUC,QAtO+B,KAuOzCD,UAAUE,OAAS,IAnOnB,MAAMC,OACFC,cACIC,KAAKC,IAAM,MAKXD,KAAKE,OAAS,SAASF,KAAKC,MAK5BD,KAAKG,OAAS,SAASH,KAAKC,MAK5BD,KAAKI,MAAQ,QAAQJ,KAAKC,MAK1BD,KAAKK,KAAO,OAAOL,KAAKC,MAKxBD,KAAKM,KAAO,OAAON,KAAKC,MAGxBD,KAAKO,KAAO,OAAOP,KAAKC,MACxBD,KAAKQ,MAAQ,QAAQR,KAAKC,MAC1BD,KAAKS,MAAQ,QAAQT,KAAKC,MAC1BD,KAAKU,QAAU,UAAUV,KAAKC,KAClC,GAkMJN,UAAUgB,IAAM,IAhMhB,MAAMC,IACFb,cAIIC,KAAKa,OAAS,GAAGnB,WAIjBM,KAAKc,eAAiB,kBAItBd,KAAKe,OAAS,gBAIdf,KAAKgB,QAAU,UAIfhB,KAAKiB,YAAc,eAInBjB,KAAKkB,WAAa,iBAIlBlB,KAAKmB,SAAW,WAIhBnB,KAAKoB,KAAO,OAKZpB,KAAKqB,SAAW,WAKhBrB,KAAKsB,IAAM,MAKXtB,KAAKuB,IAAM,MAIXvB,KAAKwB,OAAS,SAKdxB,KAAKyB,cAAgB,iBAIrBzB,KAAK0B,iBAAmB,GAAG1B,KAAKyB,wBAIhCzB,KAAK2B,OAAS,SAId3B,KAAK4B,eAAiB,GAAG5B,KAAKyB,sBAI9BzB,KAAK6B,KAAO,OAIZ7B,KAAK8B,gBAAkB,GAAG9B,KAAKyB,uBAI/BzB,KAAK+B,MAAQ,QAIb/B,KAAKgC,cAAgB,GAAGhC,KAAKyB,qBAI7BzB,KAAKiC,IAAM,MAKXjC,KAAKkC,cAAgB,KAIrBlC,KAAKmC,aAAe,MAIpBnC,KAAKoC,MAAQ,QAIbpC,KAAKqC,QAAU,UACfrC,KAAKsC,QAAU,WACftC,KAAKuC,WAAa,cAClBvC,KAAKwC,SAAW,YAMhBxC,KAAKyC,cAAgB,iBAIrBzC,KAAK0C,UAAY,YAIjB1C,KAAK2C,eAAiB,GAAG3C,KAAKyC,sBAI9BzC,KAAK4C,cAAgB,GAAG5C,KAAKyC,qBAI7BzC,KAAK6C,gBAAkB,GAAG7C,KAAKyC,uBAI/BzC,KAAK8C,gBAAkB,GAAG9C,KAAKyC,uBAI/BzC,KAAK+C,KAAO,OAIZ/C,KAAKgD,OAAS,SAIdhD,KAAKiD,OAAS,SAIdjD,KAAKkD,eAAiB,iBAMtBlD,KAAKK,KAAO,OAKZL,KAAKmD,WAAa,gBAIlBnD,KAAKoD,SAAW,cAKhBpD,KAAKqD,OAAS,SAIdrD,KAAKsD,WAAa,QAIlBtD,KAAKuD,UAAY,OAIjBvD,KAAKwD,qBAAuB,8BAChC,GASJ7D,UAAU8D,cAAgB,IArX1B,MAAMC,cACF3D,cACIC,KAAK2D,KAAO,MAOZ3D,KAAK4D,uBAAyB,6BAK9B5D,KAAK6D,mBAAqB,0BAE9B,CAMAC,iBAAiBC,GACb,MAAM3D,EAAQ,IAAIZ,QAAQ,GAAGQ,KAAK2D,2BAA2BI,oCAE7D,MADA3D,EAAM4D,KAAO,EACP5D,CACV,CAKA6D,kBAAkBF,GACd,MAAM3D,EAAQ,IAAIZ,QAAQ,GAAGQ,KAAK2D,SAASI,EAAWG,KAAK,SAE3D,MADA9D,EAAM4D,KAAO,EACP5D,CACV,CASA+D,sBAAsBJ,EAAYK,EAAUC,GACxC,MAAMjE,EAAQ,IAAIZ,QAAQ,GAAGQ,KAAK2D,iCAAiCI,iCAA0CK,yBAAgCC,EAAaH,KAAK,SAE/J,MADA9D,EAAM4D,KAAO,EACP5D,CACV,CASAkE,aAAaP,EAAYQ,EAASC,GAC9B,MAAMpE,EAAQ,IAAIZ,QAAQ,GAAGQ,KAAK2D,wBAAwBI,mBAA4BQ,6BAAmCC,KAEzH,MADApE,EAAM4D,KAAO,EACP5D,CACV,CAQAqE,kBAAkBV,EAAYW,EAAOC,GACjC,MAAMvE,EAAQ,IAAIZ,QAAQ,GAAGQ,KAAK2D,QAAQI,yCAAkDW,SAAaC,MAEzG,MADAvE,EAAM4D,KAAO,EACP5D,CACV,CASAwE,kBAAkBb,EAAYc,EAAMC,GAAO,GACvC,MAAM1E,EAAQ,IAAIZ,QAAQ,GAAGQ,KAAK2D,mCAAmCkB,oBAAuBd,MAE5F,GADA3D,EAAM4D,KAAO,GACRc,EACD,MAAM1E,EACV2E,QAAQC,KAAK5E,EACjB,CAIA6E,qBACI,MAAM7E,EAAQ,IAAIZ,QAAQ,GAAGQ,KAAK2D,iCAElC,MADAvD,EAAM4D,KAAO,EACP5D,CACV,CAKA8E,oBACI,MAAM9E,EAAQ,IAAIZ,QAAQ,GAAGQ,KAAK2D,qEAElC,MADAvD,EAAM4D,KAAO,EACP5D,CACV,CAIA+E,yBAAyBC,GACrB,MAAMhF,EAAQ,IAAIZ,QAAQ,GAAGQ,KAAK2D,2DAA2DyB,KAE7F,MADAhF,EAAM4D,KAAO,EACP5D,CACV,CAIAiF,sBAAsBD,GAClB,MAAMhF,EAAQ,IAAIZ,QAAQ,GAAGQ,KAAK2D,4BAA4ByB,KAE9D,MADAhF,EAAM4D,KAAO,EACP5D,CACV,CAKAkF,aACIP,QAAQC,KAAK,GAAGhF,KAAK2D,+HACzB,CACA4B,kBAAkBH,EAASI,GACvBT,QAAQC,KAAK,GAAGhF,KAAK2D,gBAAgByB,4DAAkEI,IAC3G,CACAC,WAAWL,GACP,MAAMhF,EAAQ,IAAIZ,QAAQ,GAAGQ,KAAK2D,QAAQyB,KAE1C,MADAhF,EAAM4D,KAAO,EACP5D,CACV,GAiQJ,IAEIsF,EAFAC,EAA8B,IAlBA,CAC9BC,OAAQ,UACRC,eAAWC,EACXC,YAAa,CACTC,IAAK,YACLC,GAAI,SACJC,EAAG,aACHC,GAAI,eACJC,IAAK,sBACLC,KAAM,6BAEVC,QAAU3H,IACN,MAAM4H,EAAI,CAAC,KAAM,KAAM,KAAM,MACvBC,EAAI7H,EAAI,IACd,MAAO,IAAIA,IAAI4H,GAAGC,EAAI,IAAM,KAAOD,EAAEC,IAAMD,EAAE,KAAK,EAEtDE,OAAQ,UAKZ,SAAWf,GACPA,EAAc,QAAI,UAClBA,EAAc,QAAI,UAClBA,EAAY,MAAI,QAChBA,EAAW,KAAI,OACfA,EAAY,MAAI,QAChBA,EAAW,KAAI,MAClB,CAPD,CAOGA,IAASA,EAAO,CAAC,IACpB,MAAMgB,EAAmB,CACrB3E,MAAO,UACPE,IAAK,UACLJ,KAAM,UACNkB,KAAM,UACNC,OAAQ,UACRC,OAAQ,WAMN0D,EAAmBC,IACrB,OAAQA,GACJ,IAAK,OACD,MAAO,CAAEC,UAAW,SACxB,IAAK,QACD,MAAO,CACH9E,MAAO,UACPF,KAAM,WAEd,IAAK,OACD,MAAO,CAAEA,KAAM,WACvB,EAMEiF,EAAkBlB,IACpB,IAAKA,EACD,MAAO,MAEX,MAAMmB,EAAW,CACbhE,KAAM,UACNC,OAAQ,UACRgE,gBAAiB,QAEfC,GAAK,IAAIC,UAAWC,gBAAgB,CAAEvB,WAC5CqB,EAAGG,MAAQ,EACX,MAAMC,EAAQJ,EAAGK,WAAMxB,EAAWiB,GAAUhE,KAE5C,GAAc,OAAVsE,EACA,MAAO,MAEX,GAAc,OAAVA,EACA,MAAO,MACXJ,EAAGG,MAAQ,GACX,MAAMG,EAAMN,EAAGK,WAAMxB,EAAWiB,GAAUhE,KAE1C,MAAc,OAAVsE,GAA0B,OAARE,EACX,MACG,OAAVF,GAA0B,OAARE,EACX,WACXxC,QAAQC,KAAK,qCAAqCY,aAAkByB,WAAeE,IACnE,EAMpB,MAAML,iBAAiBM,KACnBzH,cACI0H,SAASC,WACT1H,KAAK2H,aAAehC,EACpB3F,KAAK4H,cAAgB,CACjB,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAEtD5H,KAAK6H,WAAa,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAErE7H,KAAK8H,cAEL,0EACA9H,KAAK+H,iBAAmB,8EACxB/H,KAAKgI,OAAS,OACdhI,KAAKiI,OAAS,QACdjI,KAAKkI,OAAS,QACdlI,KAAKmI,UAAY,QACjBnI,KAAKoI,YAAc,WACnBpI,KAAKqI,YAAc,sBACnBrI,KAAKsI,UAAY,mBACjBtI,KAAKuI,gBAAkB,CACnBvI,KAAKqI,YACL,CAACG,EAAKC,KACFD,EAAIE,OAAS1I,KAAK2I,iBAAiBF,EAAM,GAGjDzI,KAAK4I,YAAc,CACfC,EAAG,CACC7I,KAAKsI,UACL,CAACQ,EAAKL,KACFK,EAAIC,UAAY/I,KAAKgJ,cAAcP,EAAM,GAGjDQ,EAAG,CACCjJ,KAAKsI,UACL,CAACQ,EAAKL,KACFK,EAAIC,UAAY/I,KAAKgJ,cAAcP,EAAM,GAGjDS,IAAK,CACDlJ,KAAKiI,OACL,CAACa,EAAKL,KACFK,EAAIK,cAAgBV,CAAK,GAGjClC,EAAG,CAACvG,KAAKmI,UAAWnI,KAAKoJ,SAAS,YAClCC,GAAI,CAACrJ,KAAKmI,UAAWnI,KAAKoJ,SAAS,YACnCE,EAAG,CAACtJ,KAAKmI,UAAWnI,KAAKoJ,SAAS,YAClCG,GAAI,CAACvJ,KAAKmI,UAAWnI,KAAKoJ,SAAS,YACnCI,EAAG,CAACxJ,KAAKmI,UAAWnI,KAAKoJ,SAAS,UAClCK,EAAG,CAACzJ,KAAKmI,UAAWnI,KAAKoJ,SAAS,UAClCM,GAAI,CAAC1J,KAAKmI,UAAWnI,KAAKoJ,SAAS,UACnCO,GAAI,CAAC3J,KAAKmI,UAAWnI,KAAKoJ,SAAS,UACnCnK,EAAG,CAACe,KAAKmI,UAAWnI,KAAKoJ,SAAS,QAClCQ,GAAI,CAAC5J,KAAKgI,OAAQhI,KAAKoJ,SAAS,QAChCS,GAAI,CACA7J,KAAKsI,UACL,CAACQ,EAAKL,KAEF,IADCK,EAAI7G,KAAOwG,EAAMqB,MAAM,OACnB9J,KAAK2H,aAAarB,QAEvB,IAAK,IAAIyD,EAAI,EAAGA,GAAK,GAAIA,GAAK,EACtB/J,KAAK2H,aAAarB,QAAQyD,GAAGC,QAAQ,SAAU,MAAQvB,IACvDK,EAAI7G,IAAM8H,EAElB,GAGRE,EAAG,CAACjK,KAAKmI,UAAWnI,KAAKoJ,SAAS,UAClCc,GAAI,CAAClK,KAAKgI,OAAQhI,KAAKoJ,SAAS,UAChCe,IAAK,CACDnK,KAAKsI,UACL,CAACE,EAAKC,KACF,MAAM2B,EAASpK,KAAKqK,eAEdC,GADctK,KAAKqK,aAAa,UACHD,EAAOG,KAAKC,GAAMA,EAAEC,MAAM,EAAG,MAAKC,QAAQjC,GAAS,EACtF,GAAI6B,EAAa,EACb,MAAM,IAAI7K,MAEd+I,EAAIzG,MAAQuI,EAAa,IAAMA,CAAU,GAGjDK,KAAM,CACF3K,KAAKsI,UACL,CAACE,EAAKC,KACF,MACM6B,EADStK,KAAKqK,eACMK,QAAQjC,GAAS,EAC3C,GAAI6B,EAAa,EACb,MAAM,IAAI7K,MAEd+I,EAAIzG,MAAQuI,EAAa,IAAMA,CAAU,GAGjDM,EAAG,CAAC5K,KAAKoI,YAAapI,KAAKoJ,SAAS,SACpCyB,GAAI,CACA7K,KAAKgI,OACL,CAACQ,EAAKC,KACFD,EAAI3G,KAAO7B,KAAK8K,kBAAkBrC,EAAM,GAGhDsC,KAAM,CAAC/K,KAAKkI,OAAQlI,KAAKoJ,SAAS,SAM1C,CAMA4B,UAAUC,GAKN,OAJKjL,KAAK2H,eACN3H,KAAK2H,aAAehC,EACpB3F,KAAK2H,aAAa/B,OAASqF,GAExBjL,IACX,CAKAmH,gBAAgB8D,GAEZ,OADAjL,KAAK2H,aAAesD,EACbjL,IACX,CAQAkL,eAAerG,EAAMe,EAAS,UAAWuF,OAAqBrF,GAC1D,IAAKjB,EACD,MAAM,IAAIpF,MAAM,sBAKpB,OAJK0L,KACDA,EAAqBxF,GACFC,OAASA,GAEzB,IAAIsB,SAASrC,EAAKuG,cAAevG,EAAKwG,WAAYxG,EAAKyG,UAAWzG,EAAK0G,WAAY1G,EAAK2G,aAAc3G,EAAK4G,aAAc5G,EAAK6G,mBAAmBvE,gBAAgBgE,EAC5K,CAIIQ,YACA,OAAO,IAAIzE,SAASlH,KAAK6B,KAAM7B,KAAK+B,MAAO/B,KAAK6E,KAAM7E,KAAKoH,MAAOpH,KAAK4L,QAAS5L,KAAK6L,QAAS7L,KAAK0L,mBAAmBvE,gBAAgBnH,KAAK2H,aAC/I,CACAuD,eAAejM,GACX,YAAU6G,IAAN7G,GAAyC,SAAtB6M,KAAKC,UAAU9M,IAElCA,EAAEc,YAAYiM,OAAS9E,SAAS8E,IAGxC,CAQAC,QAAQrF,EAAMsF,EAAiB,GAC3B,QAAmBpG,IAAf9F,KAAK4G,GACL,MAAM,IAAInH,MAAM,SAASmH,mBAC7B,OAAQA,GACJ,IAAK,UACD5G,KAAKmM,gBAAgB,GACrB,MACJ,IAAK,UACDnM,KAAKoM,WAAW,EAAG,GACnB,MACJ,IAAK,QACDpM,KAAKqM,WAAW,EAAG,EAAG,GACtB,MACJ,IAAK,OACDrM,KAAKsM,SAAS,EAAG,EAAG,EAAG,GACvB,MACJ,IAAK,UAAW,CAEZ,GADAtM,KAAKiM,QAAQvG,EAAKb,MACd7E,KAAKuM,UAAYL,EACjB,MACJ,IAAIM,EAASxM,KAAKuM,QACK,IAAnBL,GAAyC,IAAjBlM,KAAKuM,UAC7BC,EAAS,EAAIN,GACjBlM,KAAKyM,WAAWP,EAAiBM,EAAQ9G,EAAKb,MAC9C,KACJ,CACA,IAAK,QACD7E,KAAKiM,QAAQvG,EAAKb,MAClB7E,KAAK0M,QAAQ,GACb,MACJ,IAAK,OACD1M,KAAKiM,QAAQvG,EAAKb,MAClB7E,KAAK2M,SAAS,EAAG,GAGzB,OAAO3M,IACX,CAQA4M,MAAMhG,EAAMsF,EAAiB,GACzB,QAAmBpG,IAAf9F,KAAK4G,GACL,MAAM,IAAInH,MAAM,SAASmH,mBAC7B,OAAQA,GACJ,IAAK,UACD5G,KAAKmM,gBAAgB,KACrB,MACJ,IAAK,UACDnM,KAAKoM,WAAW,GAAI,KACpB,MACJ,IAAK,QACDpM,KAAKqM,WAAW,GAAI,GAAI,KACxB,MACJ,IAAK,OACDrM,KAAKsM,SAAS,GAAI,GAAI,GAAI,KAC1B,MACJ,IAAK,UAAW,CACZtM,KAAK4M,MAAMlH,EAAKb,MAChB,MAAMgI,EAAY,EAAIX,EACtB,GAAIlM,KAAKuM,UAAYM,EACjB,MACJ7M,KAAKyM,WAAWI,EAAY7M,KAAKuM,QAAS7G,EAAKb,MAC/C,KACJ,CACA,IAAK,QACD7E,KAAK4M,MAAMlH,EAAKb,MAChB7E,KAAKyM,WAAW,EAAG/G,EAAK3D,OACxB/B,KAAK0M,QAAQ,GACb,MACJ,IAAK,OACD1M,KAAK4M,MAAMlH,EAAKb,MAChB7E,KAAK2M,SAAS,GAAI,IAG1B,OAAO3M,IACX,CAQAyM,WAAWxB,EAAOrE,GACd,QAAmBd,IAAf9F,KAAK4G,GACL,MAAM,IAAInH,MAAM,SAASmH,mBAE7B,OADA5G,KAAK4G,IAASqE,EACPjL,IACX,CAOA8M,SAASC,EAASnG,GAEd,IAAKM,SAAS8F,QAAQD,GAClB,OAAO,EACX,IAAKnG,EACD,OAAO5G,KAAKiN,UAAYF,EAAQE,UACpC,QAAmBnH,IAAf9F,KAAK4G,GACL,MAAM,IAAInH,MAAM,SAASmH,mBAC7B,OAAQ5G,KAAK2L,MAAMM,QAAQrF,GAAMqG,UAAYF,EAAQpB,MAAMM,QAAQrF,GAAMqG,SAC7E,CAOAC,QAAQH,EAASnG,GAEb,IAAKM,SAAS8F,QAAQD,GAClB,OAAO,EACX,IAAKnG,EACD,OAAO5G,KAAKiN,UAAYF,EAAQE,UACpC,QAAmBnH,IAAf9F,KAAK4G,GACL,MAAM,IAAInH,MAAM,SAASmH,mBAC7B,OAAQ5G,KAAK2L,MAAMM,QAAQrF,GAAMqG,UAAYF,EAAQpB,MAAMM,QAAQrF,GAAMqG,SAC7E,CAOAE,OAAOJ,EAASnG,GAEZ,IAAKM,SAAS8F,QAAQD,GAClB,OAAO,EACX,IAAKnG,EACD,OAAO5G,KAAKiN,YAAcF,EAAQE,UACtC,QAAmBnH,IAAf9F,KAAK4G,GACL,MAAM,IAAInH,MAAM,SAASmH,mBAE7B,OADAmG,EAAU7F,SAASkG,QAAQL,GACnB/M,KAAK2L,MAAMM,QAAQrF,GAAMqG,YAAcF,EAAQd,QAAQrF,GAAMqG,SACzE,CASAI,UAAUC,EAAMC,EAAO3G,EAAM4G,EAAc,MAEvC,IAAKtG,SAAS8F,QAAQM,KAAUpG,SAAS8F,QAAQO,GAC7C,OAAO,EAEX,GAAI3G,QAAuBd,IAAf9F,KAAK4G,GACb,MAAM,IAAInH,MAAM,SAASmH,mBAE7B,MAAM6G,EAAqC,MAAnBD,EAAY,GAC9BE,EAAsC,MAAnBF,EAAY,GAC/BG,EAAgBF,EAChBzN,KAAKkN,QAAQI,EAAM1G,IAClB5G,KAAK8M,SAASQ,EAAM1G,GACrBgH,EAAiBF,EACjB1N,KAAK8M,SAASS,EAAO3G,IACpB5G,KAAKkN,QAAQK,EAAO3G,GAC3B,OAAO+G,GAAiBC,CAC5B,CAMAtG,MAAM1B,EAAS5F,KAAK2H,aAAa/B,OAAQmB,EAAW,CAAEF,UAAW,OAAQgH,UAAW,SAChF,MAAMvG,EAAQ,CAAC,EAKf,OAJA,IAAIwG,KAAKC,eAAenI,EAAQmB,GAC3BiH,cAAchO,MACdiO,QAAQC,GAAiB,YAAXA,EAAEC,OAChBpP,SAASmP,GAAO5G,EAAM4G,EAAEC,MAAQD,EAAEjD,QAChC3D,CACX,CAIIuE,cACA,OAAO7L,KAAKyL,YAChB,CAIII,YAAQZ,GACRjL,KAAKoM,WAAWnB,EACpB,CAIImD,uBACA,OAAOpO,KAAKsH,WAAMxB,EAAWY,GAAkBzD,MACnD,CAII2I,cACA,OAAO5L,KAAKwL,YAChB,CAIII,YAAQX,GACRjL,KAAKqM,WAAWpB,EACpB,CAIIoD,uBACA,OAAOrO,KAAKsH,WAAMxB,EAAWY,GAAkB1D,MACnD,CAIIoE,YACA,OAAOpH,KAAKuL,UAChB,CAIInE,UAAM6D,GACNjL,KAAKsM,SAASrB,EAClB,CAKAqD,kBAAkBzI,EAAY,OAC1B,OAAO7F,KAAKsH,WAAMxB,EAAW,IAAKY,EAAkBb,UAAWA,IAC1D9C,IACT,CAOAwL,SAAS3I,EAAS5F,KAAK2H,aAAa/B,QAChC,OAAO,IAAIkI,KAAKC,eAAenI,EAAQ,CACnC7C,KAAM,UACNyL,QAAQ,IAEPR,cAAchO,MACdyO,MAAMC,GAAiB,cAAXA,EAAEP,QAAuBlD,KAC9C,CAIIpG,WACA,OAAO7E,KAAKsL,SAChB,CAIIzG,SAAKoG,GACLjL,KAAK0M,QAAQzB,EACjB,CAII0D,oBACA,OAAO3O,KAAKsH,WAAMxB,EAAWY,GAAkBzE,GACnD,CAIIsK,cACA,OAAOvM,KAAK4O,QAChB,CAII7M,YACA,OAAO/B,KAAKqL,UAChB,CAIItJ,UAAMkJ,GACN,MAAM4D,EAAc,IAAIrH,KAAKxH,KAAK6B,KAAMoJ,EAAQ,GAChD4D,EAAYnC,QAAQ,GACpB,MAAMoC,EAAaD,EAAYvD,UAC3BtL,KAAK6E,KAAOiK,IACZ9O,KAAK6E,KAAOiK,GAEhB9O,KAAK2M,SAAS1B,EAClB,CAII8D,qBACA,OAAO/O,KAAKsH,WAAMxB,EAAWY,GAAkB3E,KACnD,CAIIF,WACA,OAAO7B,KAAKoL,aAChB,CAIIvJ,SAAKoJ,GACLjL,KAAKgP,YAAY/D,EACrB,CAKIgE,WACA,MAAM3I,EAAUtG,KAAKkP,iBAAkBC,EAAUnP,KAAKoP,YACtD,IAAIC,EAAaC,KAAKC,OAAOjJ,EAAU6I,EAAU,IAAM,GAOvD,OANIE,EAAa,EACbA,EAAarP,KAAKwP,kBAEbH,EAAarP,KAAKwP,oBACvBH,EAAa,GAEVA,CACX,CAIAG,kBACI,MAAMC,GAAMzP,KAAK6B,KACbyN,KAAKC,MAAMvP,KAAK6B,KAAO,GACvByN,KAAKC,MAAMvP,KAAK6B,KAAO,KACvByN,KAAKC,MAAMvP,KAAK6B,KAAO,MACvB,EAAG6N,EAAO1P,KAAK6B,KAAO,EAAG8N,GAAMD,EAC/BJ,KAAKC,MAAMG,EAAO,GAClBJ,KAAKC,MAAMG,EAAO,KAClBJ,KAAKC,MAAMG,EAAO,MAClB,EACJ,OAAc,IAAPD,GAAmB,IAAPE,EAAW,GAAK,EACvC,CAIIC,iBACA,OAAQ5P,KAAK6B,KAAO,GAAM,IAAM7B,KAAK6B,KAAO,KAAQ,GAAK7B,KAAK6B,KAAO,KAAQ,EACjF,CACAqN,iBACI,OAAQlP,KAAK6E,MACR7E,KAAK4P,WAAa5P,KAAK6H,WAAa7H,KAAK4H,eAAe5H,KAAK+B,MACtE,CAIAsI,aAAa5D,EAAS,QAClB,MAAMoJ,EAAc,IAAI/B,KAAKC,eAAe/N,KAAK2H,aAAa/B,OAAQ,CAClE7D,MAAO0E,IACRA,OACH,MAAO,IAAIqJ,MAAM,IAAIhR,QAAQyL,KAAKjB,GAAMuG,EAAY,IAAIrI,KAAK,KAAM8B,KACvE,CAIAyG,cAAcC,EAAWC,GAMrB,OAAOD,EAAUhG,QAAQ,sCAAsC,CAACQ,EAAG0F,EAAGC,KAClE,MAAMC,EAAID,GAAKA,EAAEE,cACjB,OAAOH,GAAKD,EAAQG,IAAMzK,EAA4BI,YAAYqK,EAAE,GAE5E,CACAtF,kBAAkBrC,GAEd,OADAA,GAASA,IACOA,EAAQ,GAAK,KAAO,IACxC,CACAE,iBAAiB2H,GACb,IAAKA,EACD,OAAO,EACX,GAAe,MAAXA,EACA,OAAO,EACX,MAAOC,EAAOtN,EAAQuN,GAASF,EAAOxG,MAAM,gBACtC8B,EAAqB,GAAT3I,IAAiBuN,GAAS,GAE5C,OAAmB,IAAZ5E,EAAgB,EADE,MAAV2E,GAAiB3E,EAAUA,CAE9C,CAOA6E,gBAAgB5L,EAAM6L,GAClB,IAAI1E,EAAOnH,EACNyC,MAAMtH,KAAK2H,aAAa/B,OAAQ,CAAE+K,aAAc,eAChDA,aAAa3G,QAAQ,MAAO,IAC5BA,QAAQ,IAAK,IAClB,MAAM4G,EAAW5E,EAAK6E,SAAS,KAM/B,OALA7E,EAAOA,EAAKhC,QAAQ,IAAK,IACX,MAAV0G,EACA1E,EAAOA,EAAK8E,UAAU,EAAG,GACV,OAAVJ,IACL1E,EAAOA,EAAK8E,UAAU,EAAG,IACtB,GAAGF,EAAW,IAAM,KAAK5E,GACpC,CACA5C,SAAS2H,GACL,MAAO,CAACC,EAAMvI,KACVuI,EAAKD,IAAatI,CAAK,CAE/B,CACAO,cAAcP,GACV,MAAM8F,EAAW,IAAIT,KAAKC,eAAe/N,KAAK2H,aAAa/B,OAAQ,CAC/D7C,KAAM,UACNyL,QAAQ,IAEPR,cAAc,IAAIxG,KAAK,KAAM,EAAG,EAAG,KACnCiH,MAAMC,GAAiB,cAAXA,EAAEP,QAAuBlD,MAC1C,OAAOxC,EAAMwI,gBAAkB1C,EAAS0C,aAC5C,CACAC,aAAaF,GACT,MAAMjI,UAAEA,GAAciI,EACtB,QAAkBlL,IAAdiD,EAAyB,CACzB,MAAM3B,MAAEA,GAAU4J,EACdjI,EACI3B,EAAQ,KACR4J,EAAK5J,OAAS,IAGH,KAAVA,IACL4J,EAAK5J,MAAQ,UAEV4J,EAAKjI,SAChB,CACJ,CACAoI,WAAW1K,GAEP,MAAM2K,GADN3K,EAASzG,KAAK+P,cAActJ,EAAQzG,KAAK2H,aAAa5B,cACjC+D,MAAM9J,KAAK+H,mBAC1BsJ,OAAEA,GAAWD,EACnB,IAAK,IAAIrH,EAAI,EAAGA,EAAIsH,EAAQtH,GAAK,EAAG,CAChC,MAAMuH,EAAQF,EAAMrH,GACdwH,EAAUvR,KAAK4I,YAAY0I,GAC3BE,EAAQD,GAAWA,EAAQ,GAC3BE,EAASF,GAAWA,EAAQ,GAE9BH,EAAMrH,GADN0H,EACW,CAAED,QAAOC,UAGTH,EAAMtH,QAAQ,gBAAiB,GAElD,CACA,OAAQvB,IACJ,MAAMuI,EAAO,CACT5J,MAAO,EACPwE,QAAS,EACTC,QAAS,EACT1C,aAAc,GAElB,IAAK,IAAIY,EAAI,EAAG1C,EAAQ,EAAG0C,EAAIsH,EAAQtH,GAAK,EAAG,CAC3C,MAAMuH,EAAQF,EAAMrH,GACpB,GAAqB,iBAAVuH,EACPjK,GAASiK,EAAMD,WAEd,CACD,MAAMG,MAAEA,EAAKC,OAAEA,GAAWH,EACpBI,EAAOjJ,EAAMgC,MAAMpD,GAEnB4D,EADQuG,EAAMG,KAAKD,GACL,GACpBD,EAAOG,KAAK5R,KAAMgR,EAAM/F,GACxBxC,EAAQA,EAAMuB,QAAQiB,EAAO,GACjC,CACJ,CAEA,OADAjL,KAAKkR,aAAaF,GACXA,CAAI,CAEnB,CAOA9F,kBAAkBzC,EAAOd,GAChBA,GAAclB,QACf9G,UAAU8D,cAAc4B,sBAAsB,0BAElD,IACI,MAAM4B,EAAK,IAAIC,SAEf,GADAD,EAAGE,gBAAgBQ,GACf,CAAC,IAAK,KAAK+C,QAAQ/C,EAAalB,SAAW,EAC3C,OAAO,IAAIS,UAAkC,MAAxBS,EAAalB,OAAiB,IAAO,IAAMgC,GACpE,MAAMgJ,EAASxK,EAAGkK,WAAWxJ,EAAalB,SACpC5E,KAAEA,EAAIE,MAAEA,EAAKE,IAAEA,EAAGmF,MAAEA,EAAKwE,QAAEA,EAAOC,QAAEA,EAAO1C,aAAEA,EAAY0I,KAAEA,GAASJ,EAAOhJ,GAC3ExJ,EAAIgD,IAASJ,GAASE,EAAuB,EAAfkF,EAAGqE,WACjCV,EAAI/I,GAAQoF,EAAGmE,cACrB,IAAInB,EAAI,EAIR,OAHMpI,IAASE,IACXkI,EAAIlI,EAAQ,EAAIA,EAAQ,EAAIkF,EAAGoE,YAE/BwG,EACO,IAAI3K,SAASM,KAAKsK,IAAIlH,EAAGX,EAAGhL,EAAGmI,EAAOwE,EAASC,EAAS1C,EAA6B,GAAd0I,EAAKnJ,OAAc,MAE9F,IAAIxB,SAAS0D,EAAGX,EAAGhL,EAAGmI,EAAOwE,EAASC,EAAS1C,EAC1D,CACA,MAAO5K,GACHoB,UAAU8D,cAAc4B,sBAAsB,mCAAmCoD,cAAkBd,EAAalB,SACpH,CACJ,CAQAA,OAAOM,EAAUnB,EAAS5F,KAAK2H,aAAa/B,QACxC,GAAImB,GAAgC,iBAAbA,EACnB,OAAO,IAAI+G,KAAKC,eAAenI,EAAQmB,GAAUN,OAAOzG,MAC5D,MAAM+R,EAAe/R,KAAK+P,cAE1BhJ,GAEI/G,KAAK2H,aAAalB,QAElB,GAAGd,EAA4BI,YAAYG,MAAMP,EAA4BI,YAAYE,KAAMjG,KAAK2H,aAAa5B,aAC/GiM,EAAajL,GAAa,IAAI+G,KAAKC,eAAe/N,KAAK2H,aAAa/B,OAAQmB,GAAUN,OAAOzG,MAC9FA,KAAK2H,aAAa9B,YACnB7F,KAAK2H,aAAa9B,UAAYiB,EAAe9G,KAAK2H,aAAa/B,SAEnE,MAAMqM,EAAUjS,KAAK2H,aAAa9B,UAAUqM,WAAW,MACjD,MACAlS,KAAK2H,aAAa9B,UAClBsM,EAAUnS,KAAK2H,aAAa9B,UAAUqM,WAAW,MACjD,MACAlS,KAAK2H,aAAa9B,UAClBuM,EAAU,CACZvH,GAAImH,EAAU,CAAEnQ,KAAM,YACtBkJ,KAAM/K,KAAK6B,KACXoI,EAAG+H,EAAU,CAAEjQ,MAAO,YACtBmI,GAAIlK,KAAK+O,eACT5E,IAAKnK,KAAKqK,aAAa,SAASrK,KAAKqL,YACrCV,KAAM3K,KAAKqK,eAAerK,KAAKqL,YAC/BpM,EAAGe,KAAK6E,KACR+E,GAAI5J,KAAK2O,cACT0D,IAAKL,EAAU,CAAE7C,QAAS,UAC1BmD,KAAMN,EAAU,CAAE7C,QAAS,SAC3B3F,EAAGxJ,KAAKuL,WACR7B,GAAI1J,KAAKsO,kBAAkB2D,GAC3BxI,EAAGzJ,KAAKoH,MAAQ,GAAKpH,KAAKoH,MAAQ,GAAKpH,KAAKoH,MAC5CuC,GAAI3J,KAAKsO,kBAAkB6D,GAC3BtJ,EAAG7I,KAAKuO,WACRtF,EAAGjJ,KAAKuO,WAAW8B,cACnB/G,EAAGtJ,KAAK4L,QACRrC,GAAIvJ,KAAKqO,iBACT9H,EAAGvG,KAAK6L,QACRxC,GAAIrJ,KAAKoO,iBACTlF,IAAKlJ,KAAK0L,mBAKd,OAAOqG,EACF/H,QAAQhK,KAAK8H,eAAe,CAACgC,EAAOyI,IAC9BA,GAAMH,EAAQtI,KAEpBE,QAAQ,MAAO,IACfA,QAAQ,KAAM,GACvB,EAGJ,MAAMwI,eACFzS,cACIC,KAAKyS,MAAQ,IAAIC,GACrB,CACAC,OAAOC,GACH,MAAMC,EAAU7S,KAAKyS,MAAMrT,IAAIwT,GAC/B,GAAIC,EACA,OAAOA,EACX,MAAM5H,EAAQ,IAAI2H,EAElB,OADA5S,KAAKyS,MAAMK,IAAIF,EAAY3H,GACpBA,CACX,EAKJ,IAAI8H,EAEJ,MAAMC,EAAgB,CAClB,CACIhH,KAAM,WACNiH,UAAWtT,UAAUgB,IAAIqB,cACzB4E,KAAMlB,EAAK3D,MACXmR,KAAM,GAEV,CACIlH,KAAM,SACNiH,UAAWtT,UAAUgB,IAAImB,gBACzB8E,KAAMlB,EAAK7D,KACXqR,KAAM,GAEV,CACIlH,KAAM,QACNiH,UAAWtT,UAAUgB,IAAIiB,eACzBgF,KAAMlB,EAAK7D,KACXqR,KAAM,IAEV,CACIlH,KAAM,UACNiH,UAAWtT,UAAUgB,IAAIe,iBACzBkF,KAAMlB,EAAK7D,KACXqR,KAAM,MAId,MAAMC,aACFpT,cACIC,KAAKoT,yBAA2B,EAChCpT,KAAKqT,UAAY,IAAInM,SACrBlH,KAAKsT,wBAA0B,EAC/BtT,KAAKuT,YAAc,UACvB,CACIC,8BACA,OAAOxT,KAAKoT,wBAChB,CACII,4BAAwBvI,GACxBjL,KAAKoT,yBAA2BnI,EAChCjL,KAAKuT,YAAcP,EAAc/H,GAAOe,IAC5C,CACIyH,eACA,OAAOzT,KAAKqT,SAChB,CACII,aAASjN,GACTxG,KAAKqT,UAAY7M,EACbxG,KAAK0T,UACL1T,KAAK0T,QAAQD,SAAWjN,EAChC,CAKAmN,qBACI3T,KAAKuT,YAAcP,EAAchT,KAAKwT,yBAAyBxH,IACnE,CACI4H,mBACA,MAAO,CAAC,MAAO,OAAO/C,SAAS7Q,KAAK0T,QAAQ/L,aAAa9B,UAC7D,EAMJ,MAAMgO,WACF9T,cACIC,KAAK8T,aAAef,EAAeJ,OAAOQ,aAC9C,CAOAnG,QAAQ+G,EAAYC,GAChB,IAAKhU,KAAKiU,6BAA6BD,EAAaD,GAChD,OAAO,EACX,GAAIC,IAAgBtO,EAAK3D,OACrBiS,IAAgBtO,EAAK7D,MACrB7B,KAAK8T,aAAaJ,QAAQQ,aAAaC,oBAAoB9C,OAAS,IACuB,IAA3FrR,KAAK8T,aAAaJ,QAAQQ,aAAaC,mBAAmBzJ,QAAQqJ,EAAWxH,SAC7E,OAAO,EACX,IAAKvM,KAAKoU,eAAeJ,EAAaD,GAClC,OAAO,EACX,GAAIC,IAAgBtO,EAAK0B,OACrB4M,IAAgBtO,EAAKkG,SACrBoI,IAAgBtO,EAAKmG,QAAS,CAC9B,IAAK7L,KAAKqU,6BAA6BN,GACnC,OAAO,EACX,GAAoJ,IAAhJ/T,KAAK8T,aAAaJ,QAAQQ,aAAaI,uBAAuBrG,QAAQsG,GAAaR,EAAW1G,UAAUkH,EAASC,KAAMD,EAASE,MAAKpD,OACrI,OAAO,CACf,CACA,OAAO,CACX,CACA4C,6BAA6BD,EAAaD,GACtC,OAAIC,IAAgBtO,EAAKb,QAErB7E,KAAK8T,aAAaJ,QAAQQ,aAAaQ,cAAcrD,OAAS,GAC9DrR,KAAK2U,mBAAmBZ,OAIxB/T,KAAK8T,aAAaJ,QAAQQ,aAAaU,aAAavD,OAAS,IAC5DrR,KAAK6U,kBAAkBd,GAIhC,CAOAY,mBAAmBG,GACf,SAAK9U,KAAK8T,aAAaJ,QAAQQ,aAAaQ,eACwB,IAAhE1U,KAAK8T,aAAaJ,QAAQQ,aAAaQ,cAAcrD,WAEhDrR,KAAK8T,aAAaJ,QAAQQ,aAAaQ,cAAcjG,MAAMP,GAAMA,EAAEf,OAAO2H,EAAUpP,EAAKb,OACtG,CAOAgQ,kBAAkBC,GACd,OAAK9U,KAAK8T,aAAaJ,QAAQQ,aAAaU,cACuB,IAA/D5U,KAAK8T,aAAaJ,QAAQQ,aAAaU,aAAavD,UAE/CrR,KAAK8T,aAAaJ,QAAQQ,aAAaU,aAAanG,MAAMP,GAAMA,EAAEf,OAAO2H,EAAUpP,EAAKb,OACrG,CACAuP,eAAeJ,EAAaD,GACxB,QAAI/T,KAAK8T,aAAaJ,QAAQQ,aAAaa,UACvChB,EAAWjH,SAAS9M,KAAK8T,aAAaJ,QAAQQ,aAAaa,QAASf,OAIpEhU,KAAK8T,aAAaJ,QAAQQ,aAAac,UACvCjB,EAAW7G,QAAQlN,KAAK8T,aAAaJ,QAAQQ,aAAac,QAAShB,GAI3E,CACAK,6BAA6BN,GACzB,QAAI/T,KAAK8T,aAAaJ,QAAQQ,aAAae,cAAc5D,OAAS,GAC9DrR,KAAKkV,mBAAmBnB,OAIxB/T,KAAK8T,aAAaJ,QAAQQ,aAAaiB,aAAa9D,OAAS,IAC5DrR,KAAKoV,kBAAkBrB,GAIhC,CAOAmB,mBAAmBJ,GACf,IAAK9U,KAAK8T,aAAaJ,QAAQQ,aAAae,eACwB,IAAhEjV,KAAK8T,aAAaJ,QAAQQ,aAAae,cAAc5D,OACrD,OAAO,EACX,MAAMgE,EAAgBP,EAAS1N,MAC/B,OAAOpH,KAAK8T,aAAaJ,QAAQQ,aAAae,cAAcpE,SAASwE,EACzE,CAOAD,kBAAkBN,GACd,IAAK9U,KAAK8T,aAAaJ,QAAQQ,aAAaiB,cACuB,IAA/DnV,KAAK8T,aAAaJ,QAAQQ,aAAaiB,aAAa9D,OACpD,OAAO,EACX,MAAMgE,EAAgBP,EAAS1N,MAC/B,OAAOpH,KAAK8T,aAAaJ,QAAQQ,aAAaiB,aAAatE,SAASwE,EACxE,CACAC,iBAAiBC,EAAOC,EAAOC,GAE3B,IAAKzV,KAAK8T,aAAaJ,QAAQgC,UAC3B,OAAO,EAIX,GAAqB,IAAjBH,EAAMlE,QAA0B,IAAVmE,EACtB,OAAO,EAEX,MAAMnO,EAAQkO,EAAM,GAAG5J,MAEvB,GAAItE,EAAM8F,OAAOsI,EAAQ/P,EAAKb,MAC1B,OAAO,EAIX,IAFAwC,EAAMoF,WAAW,EAAG/G,EAAKb,OAEjBwC,EAAM8F,OAAOsI,EAAQ/P,EAAKb,OAAO,CAErC,IADc7E,KAAKgN,QAAQ3F,EAAO3B,EAAKb,MAEnC,OAAO,EACXwC,EAAMoF,WAAW,EAAG/G,EAAKb,KAC7B,CACA,OAAO,CACX,EAGJ,MAAM8Q,aACF5V,cACIC,KAAK4V,YAAc,EACvB,CACAC,UAAUC,GAEN,OADA9V,KAAK4V,YAAYG,KAAKD,GACf9V,KAAKgW,YAAYC,KAAKjW,KAAMA,KAAK4V,YAAYvE,OAAS,EACjE,CACA2E,YAAYR,GACRxV,KAAK4V,YAAYM,OAAOV,EAAO,EACnC,CACAW,KAAKlL,GACDjL,KAAK4V,YAAY7W,SAAS+W,IACtBA,EAAS7K,EAAM,GAEvB,CACAmL,UACIpW,KAAK4V,YAAc,KACnB5V,KAAK4V,YAAc,EACvB,EAEJ,MAAMS,cACFtW,cACIC,KAAKsW,aAAe,IAAIX,aACxB3V,KAAKuW,WAAa,IAAIZ,aACtB3V,KAAKwW,cAAgB,IAAIb,aACzB3V,KAAKyW,OAAS,IAAId,aAClB3V,KAAK0W,eAAiB,IAAIf,YAC9B,CACAS,UACIpW,KAAKsW,aAAaF,UAClBpW,KAAKuW,WAAWH,UAChBpW,KAAKwW,cAAcJ,UACnBpW,KAAKyW,OAAOL,UACZpW,KAAK0W,eAAeN,SACxB,EAGJ,MAAMO,EAAwB,CAC1BC,MAAO,kBACPC,MAAO,mBACP9Q,YAAaJ,EAA4BI,YACzC+Q,oBAAqB,CAAE/U,MAAO,OAAQF,KAAM,WAC5CkV,cAAe,iBACfC,gBAAiB,mBACjBC,gBAAiB,mBACjBxQ,OAAQd,EAA4Bc,OACpCZ,UAAWF,EAA4BE,UACvCqR,cAAe,iBACfC,gBAAiB,mBACjBC,gBAAiB,mBACjBxR,OAAQD,EAA4BC,OACpCyR,YAAa,eACbC,WAAY,cACZC,UAAW,aACXC,SAAU,YACVlR,QAASX,EAA4BW,QACrCmR,SAAU,YACVC,WAAY,cACZC,WAAY,cACZC,gBAAiB,mBACjBC,eAAgB,kBAChBC,cAAe,iBACfC,aAAc,gBACdC,WAAY,cACZC,aAAc,gBACdC,YAAa,eACbC,WAAY,cACZC,WAAY,cACZlM,eAAgB,EAChB9J,MAAO,cACPc,eAAgB,mBAEdmV,EAAiB,CACnBC,kBAAkB,EAClBC,eAAWzS,EACX4P,WAAW,EACX8C,OAAO,EACPC,iBAAa3S,EACb4S,QAAS,CACLC,MAAO,CACHxK,KAAM,QACN6C,KAAM,oBACNnM,KAAM,uBACN+T,GAAI,uBACJC,KAAM,yBACN1X,SAAU,2BACVC,KAAM,4BACNgB,MAAO,6BACPwU,MAAO,oBACPC,MAAO,qBAEX3V,YAAY,EACZgB,eAAe,EACf4W,SAAU,WACVC,iBAAkB,SAClBC,UAAU,EACVC,QAAS,CACL7W,OAAO,EACPwU,OAAO,EACPC,OAAO,GAEXqC,WAAY,CACRC,UAAU,EACVtU,MAAM,EACN9C,OAAO,EACPF,MAAM,EACNuX,SAAS,EACTC,OAAO,EACPjS,OAAO,EACPwE,SAAS,EACTC,SAAS,EACTyN,uBAAmBxT,GAEvBzC,QAAQ,EACRkW,MAAO,OACPC,UAAW,UAEfC,aAAa,EACb9R,aAAcgP,EACd+C,KAAM,CAAC,EACPC,eAAe,EACfC,uBAAwB,KACxBC,wBAAwB,EACxBC,sCAAuC,IACvC5F,aAAc,CACVa,aAASjP,EACTkP,aAASlP,EACT4O,cAAe,GACfE,aAAc,GACdT,mBAAoB,GACpBG,sBAAuB,GACvBW,cAAe,GACfE,aAAc,IAElB4E,SAAU,EACVC,YAAY,EACZvG,SAAU,IAAIvM,UAEZ+S,EAAwB,IAAKtD,GAQnC,SAASuD,EAAqBjb,EAAG0I,GAC7B,IAAK1I,EACD,OAAO,KACX,GAAIA,EAAEc,YAAYiM,OAAS9E,SAAS8E,KAChC,OAAO/M,EACX,GAAIA,EAAEc,YAAYiM,OAASxE,KAAKwE,KAC5B,OAAO9E,SAASkG,QAAQnO,GAE5B,GAAiB,iBAANA,EAAiB,CACxB,MAAMkb,EAAWjT,SAASkT,WAAWnb,EAAG0I,GACxC,MAAiC,SAA7BmE,KAAKC,UAAUoO,GACR,KAEJA,CACX,CACA,OAAO,IACX,CAOA,SAASE,EAAkBpb,EAAG8E,EAAY4D,GACrB,iBAAN1I,GAAkC,UAAf8E,GAC1BpE,UAAU8D,cAAc6B,aAE5B,MAAMgV,EAAYJ,EAAqBjb,EAAG0I,GAI1C,OAHK2S,GACD3a,UAAU8D,cAAcmB,kBAAkBb,EAAY9E,EAAkB,UAAf8E,GAEtDuW,CACX,CAQA,SAASC,EAAmBxW,EAAYkH,EACxCuP,EAAc7S,GACLmI,MAAM2K,QAAQxP,IACftL,UAAU8D,cAAca,aAAaP,EAAYyW,EAAc,6BAEnE,IAAK,IAAIzQ,EAAI,EAAGA,EAAIkB,EAAMoG,OAAQtH,IAAK,CACnC,MAAM9K,EAAIgM,EAAMlB,GACVoQ,EAAWE,EAAkBpb,EAAG8E,EAAY4D,GAC7CwS,GACDxa,UAAU8D,cAAca,aAAaP,SAAmB9E,EAAG,oBAE/Dkb,EAAShT,gBAAgBQ,GAAgBhC,GACzCsF,EAAMlB,GAAKoQ,CACf,CACJ,CAOA,SAASO,EAAqB3W,EAAYkH,EAC1CuP,GACS1K,MAAM2K,QAAQxP,KAAUA,EAAM0P,MAAMzM,GAAmB,iBAANA,KAClDvO,UAAU8D,cAAca,aAAaP,EAAYyW,EAAc,mBAEvE,CAEA,SAASI,EAAc3a,GACnB,MAAO,EAAGgL,QAAOuP,eAAc7S,mBAC3B,MAAMwS,EAAWE,EAAkBpP,EAAOhL,EAAK0H,GAC/C,QAAiB7B,IAAbqU,EAEA,OADAA,EAAShT,gBAAgBQ,GAClBwS,EAEXxa,UAAU8D,cAAca,aAAarE,EAAKua,EAAc,mBAAmB,CAEnF,CACA,SAASK,EAAa5a,GAClB,MAAM6a,EAAYF,EAAc3a,GAChC,OAAQ8a,QACejV,IAAfiV,EAAK9P,MACE8P,EAAK9P,MAET6P,EAAUC,EAEzB,CACA,SAASC,EAAe/a,EAAKyE,EAAOC,GAChC,MAAO,EAAGsG,QAAOuP,uBACC1U,IAAVmF,EACO,IAEXyP,EAAqBza,EAAKgL,EAAOuP,GAC7BvP,EAAM0P,MAAMzM,GAAMA,EAAIxJ,GAASwJ,EAAIvJ,KACnChF,UAAU8D,cAAcgB,kBAAkBxE,EAAKyE,EAAOC,GACnDsG,EAEf,CACA,SAASgQ,EAAehb,GACpB,OAAO+a,EAAe/a,EAAK,EAAG,GAClC,CACA,SAASib,EAAejb,GACpB,MAAO,EAAGgL,QAAOuP,eAAc7S,uBACb7B,IAAVmF,EACO,IAEXsP,EAAmBta,EAAKgL,EAAOuP,EAAc7S,GACtCsD,EAEf,CACA,SAASkQ,EAAeC,GACpB,MAAO,EAAGnQ,QAAOoQ,WACRD,EAAWvK,SAAS5F,IACrBtL,UAAU8D,cAAcU,sBAAsBkX,EAAKvK,UAAU,GAAI7F,EAAOmQ,GACrEnQ,EAEf,CACA,MAAMqQ,EAAmB1c,OAAO2c,OAAO,CACnC9C,YAAamC,EAAc,eAC3BnH,SAAUmH,EAAc,YACxB7F,QAAS8F,EAAa,wBACtB7F,QAAS6F,EAAa,wBACtB5F,cAAegG,EAAe,8BAC9B9F,aAAc8F,EAAe,6BAC7BvG,cAAewG,EAAe,8BAC9BtG,aAAcsG,EAAe,6BAC7B/G,mBAAoB6G,EAAe,kCAAmC,EAAG,GACzE1G,sBAAuB,EAAGrU,MAAKgL,QAAOuP,eAAc7S,mBAChD,QAAc7B,IAAVmF,EACA,MAAO,GAEN6E,MAAM2K,QAAQxP,IACftL,UAAU8D,cAAca,aAAarE,EAAKua,EAAc,uDAE5D,MAAMgB,EAAcvQ,EACpB,IAAK,IAAIlB,EAAI,EAAGA,EAAIyR,EAAYnK,OAAQtH,IACpCnL,OAAOE,KAAK0c,EAAYzR,IAAIhL,SAAS0c,IACjC,MAAMC,EAAgB,GAAGzb,KAAO8J,MAAM0R,IAChCxc,EAAIuc,EAAYzR,GAAG0R,GACnBtB,EAAWE,EAAkBpb,EAAGyc,EAAe/T,GAChDwS,GACDxa,UAAU8D,cAAca,aAAaoX,SAAsBzc,EAAG,oBAElEkb,EAAShT,gBAAgBQ,GACzB6T,EAAYzR,GAAG0R,GAAMtB,CAAQ,IAGrC,OAAOqB,CAAW,EAEtBzC,iBAAkBoC,EAAe,CAAC,MAAO,SAAU,YACnDhN,KAAMgN,EAAe,CAAC,QAAS,YAC/BrC,SAAUqC,EAAe,CACrB,QACA,WACA,SACA,QACA,YAEJ5B,MAAO4B,EAAe,CAAC,QAAS,OAAQ,SACxC3B,UAAW2B,EAAe,CAAC,MAAO,WAClCzB,KAAM,EAAGzO,WAAYA,EACrB6L,oBAAqB,EAAG7L,WAAYA,EACpCsN,UAAW,EAAGtN,QAAOoQ,WACbpQ,KACEA,aAAiB0Q,aACf1Q,aAAiB2Q,SACjB3Q,GAAO4Q,cACXlc,UAAU8D,cAAca,aAAa+W,EAAKvK,UAAU,UAAW7F,EAAO,eAEnEA,GAEXqO,kBAAmB,EAAGrO,QAAOoQ,OAAMb,eAAcsB,kBAE7C,GADAnc,UAAU8D,cAAc8B,kBAAkB,oBAAqB,4DACjDO,IAAVmF,GAAwC,YAAjBuP,EACvB,OAAOvP,EACXtL,UAAU8D,cAAca,aAAa+W,EAAMb,EAAcsB,EAAY,EAEzEjW,UAAWsV,EAAe,CAAC,MAAO,MAAO,MAAO,UAE9CY,EAAmB,EAAG9Q,QAAO6Q,cAAatB,eAAca,WAC1D,OAAQS,GACJ,IAAK,UACD,MAAiB,SAAV7Q,IAA8B,IAAVA,EAC/B,IAAK,SACD,OAAQA,EACZ,IAAK,SACD,OAAOA,EAAM+Q,WACjB,IAAK,SACD,MAAO,CAAC,EACZ,IAAK,WACD,OAAO/Q,EACX,QACItL,UAAU8D,cAAca,aAAa+W,EAAMb,EAAcsB,GACjE,EAEJ,SAASG,EAAWlB,GAChB,OAAQO,EAAiBP,EAAK9a,MAAQ8b,GAAkBhB,EAC5D,CAEA,MAAMmB,gBACFhR,gBAAgBzC,GACZ,MAAM0T,EAAI,CAAC,EAoBX,OAnBAvd,OAAOE,KAAK2J,GAAO1J,SAASkB,IACxB,MAAMmc,EAAe3T,EAAMxI,GACvBmc,aAAwBlV,SACxBiV,EAAElc,GAAOmc,EAAazQ,MAGjByQ,aAAwB5U,KAC7B2U,EAAElc,GAAO,IAAIuH,KAAK4U,EAAanP,YAGnCkP,EAAElc,GAAOmc,EACmB,iBAAjBA,GACPA,aAAwBT,aACxBS,aAAwBR,SAEvB9L,MAAM2K,QAAQ2B,KACfD,EAAElc,GAAOic,gBAAgBG,SAASD,IACtC,IAEGD,CACX,CAMAjR,kBAAkBoR,EAAO9T,GAGrB,MAFwB,MAApB8T,EAAMC,OAAO,KACbD,EAAQA,EAAM7R,MAAM,IACnB6R,EAEEA,EACFE,MAAM,KACNC,QAAO,CAACxR,EAAOhL,IAAQic,gBAAgBQ,QAAQzR,IAAUiR,gBAAgBQ,QAAQzR,EAAMhL,IACtFgL,EAAMhL,QACN6F,GAAW0C,GALNA,CAMf,CAUA0C,cAAcyR,EAAUC,EAAQjV,EAAc0T,EAAO,IACjD,MAAMwB,EAAiBX,gBAAgBY,WAAWzB,EAAMhD,GAClD0E,EAAqBne,OAAOE,KAAK6d,GAAU1O,QAAQC,IAAOtP,OAAOE,KAAK+d,GAAgBhM,SAAS3C,KACrG,GAAI6O,EAAmB1L,OAAS,EAAG,CAC/B,MAAM2L,EAAmBd,gBAAgBe,2BACnCC,EAASH,EAAmBxS,KAAK2D,IACnC,IAAI9N,EAAQ,IAAIib,KAAQnN,4BACxB,MAAMiP,EAAaH,EAAiBvO,MAAM7D,GAAMA,EAAEiG,SAAS3C,KAG3D,OAFIiP,IACA/c,GAAS,kBAAkB+c,OACxB/c,CAAK,IAEhBT,UAAU8D,cAAcQ,kBAAkBiZ,EAC9C,CACAte,OAAOE,KAAK6d,GACP1O,QAAQhO,GAAgB,cAARA,GAA+B,gBAARA,IACvClB,SAASkB,IAEa,OADvBob,GAAQ,IAAIpb,KACHsc,OAAO,KACZlB,EAAOA,EAAK5Q,MAAM,IACtB,MAAM2S,EAAqBP,EAAe5c,GACpCua,SAAsBmC,EAAS1c,GAC/B6b,SAAqBsB,EACrBnS,EAAQ0R,EAAS1c,GACvB,GAAIgL,QAGA,OAFA2R,EAAO3c,GAAOgL,OACdoQ,EAAOA,EAAKvK,UAAU,EAAGuK,EAAKgC,YAAY,IAAIpd,OAGhB,iBAAvBmd,GACNtN,MAAM2K,QAAQkC,EAAS1c,KACtBmd,aAA8B5V,MAC5B0U,gBAAgBoB,iBAAiBzM,SAAS5Q,GAI9C2c,EAAO3c,GAAOic,gBAAgBD,WAAWhc,EAAKgL,EAAOuP,EAAcsB,EAAaT,EAAM1T,GAHtFuU,gBAAgBqB,OAAOZ,EAAS1c,GAAM2c,EAAO3c,GAAM0H,EAAc0T,GAKrEA,EAAOA,EAAKvK,UAAU,EAAGuK,EAAKgC,YAAY,IAAIpd,KAAO,GAE7D,CACAiL,kBAAkBjL,EAAKgL,EACvBuP,EAAcsB,EAAaT,EAAM1T,GAC7B,OAAOsU,EAAW,CACdhc,MACAgL,QACAuP,eACAsB,cACAT,OACA1T,gBAER,CACAuD,qBAAqBsS,EAAiBC,GAClC,MAAMC,EAAYxB,gBAAgBG,SAASoB,GAErC9V,EAAgD,YAAjC8V,EAAQ9V,cAAc/B,OACrC6X,EAAQ9V,aACR6V,GAAiB7V,cAAgB0Q,EAAe1Q,aAEtD,OADAuU,gBAAgBqB,OAAOC,EAAiBE,EAAW/V,EAAc,IAC1D+V,CACX,CACAxS,sBAAsByS,EAASjK,GAC3B,MAAMkK,EAAQ9R,KAAK+R,MAAM/R,KAAKC,UAAU4R,EAAQG,UAKhD,GAJIF,GAAOG,sBACAH,EAAMG,cACbH,GAAOI,uBACAJ,EAAMI,gBACZJ,GAC6B,IAA9Bhf,OAAOE,KAAK8e,GAAOvM,QACnBuM,EAAM7d,cAAgBke,aACtB,OAAOvK,EACX,MAAMwK,EAAc,CAAC,EAGfC,EAAsBC,IACxB,MAAMC,EAAU,CAAC,EAIjB,OAHAzf,OAAOE,KAAKsf,GAAQrf,SAASmP,IACzBmQ,EAAQnQ,EAAE+C,eAAiB/C,CAAC,IAEzBmQ,CAAO,EAEZC,EAAkBte,KAAKse,gBAAgBH,GACvCI,EAAeJ,EAAmBzK,GAuBxC,OAtBA9U,OAAOE,KAAK8e,GACP3P,QAAQC,GAAMA,EAAEgE,WAAWvS,UAAUC,WACrC2K,KAAK2D,GAAMA,EAAE4C,UAAU,KACvB/R,SAASkB,IACV,IAAIue,EAAYD,EAAate,EAAIgR,eAGjC,GAAIhR,EAAI4Q,SAAS,KAAM,CAEnB,MAAM2L,EAAQvc,EAAIuc,MAAM,KAExBgC,EAAYD,EAAa/B,EAAM,GAAGvL,oBAChBnL,IAAd0Y,GACA9K,EAAQ8K,GAAWze,cAAgBnB,SACnCsf,EAAYM,GAAaF,EAAgB9B,EAAO,EAAG9I,EAAQ8K,GAAYZ,EAAM,KAAK3d,MAE1F,WAEuB6F,IAAd0Y,IACLN,EAAYM,GAAaZ,EAAM,KAAK3d,KACxC,IAEGD,KAAKye,cAAcP,EAAaxK,EAC3C,CAEAxI,uBAAuBiT,GACnB,MAAMG,EAAkB,CAAC9B,EAAOhH,EAAOkJ,EAAgBzT,KAEnD,MACMuT,EADoBL,EAAmBO,GACTlC,EAAMhH,GAAOvE,eAC3C0N,EAAiB,CAAC,EACxB,YAAkB7Y,IAAd0Y,IAGAE,EAAeF,GAAWze,cAAgBnB,QAC1C4W,IACAmJ,EAAeH,GAAaF,EAAgB9B,EAAOhH,EAAOkJ,EAAeF,GAAYvT,IAGrF0T,EAAeH,GAAavT,GAPrB0T,CASU,EAEzB,OAAOL,CACX,CAOApT,sBAAsBjM,EACtB0I,GACI,OAAOuS,EAAqBjb,EAAG0I,EACnC,CAQAuD,2BAA2BnH,EAAYkH,EAAOuP,EAAc7S,GACxD,OAAO4S,EAAmBxW,EAAYkH,EAAOuP,EAAc7S,EAC/D,CAOAuD,6BAA6BnH,EAAYkH,EAAOuP,GAC5C,OAAOE,EAAqB3W,EAAYkH,EAAOuP,EACnD,CAOAtP,sBAAsBjM,EACtB8E,EAAY4D,GACR,OAAO0S,EAAkBpb,EAAG8E,EAAY4D,EAC5C,CACAuD,kCACI,GAAIlL,KAAK4e,iBACL,OAAO5e,KAAK4e,iBAChB,MAAMC,EAAW,CAAChW,EAAGiW,EAAM,KACnBhP,MAAM2K,QAAQ5R,GACP,GACPjK,OAAOiK,KAAOA,EACPjK,OAAOmgB,QAAQlW,GAAGmW,SAAQ,EAAEhgB,EAAGwH,KAAOqY,EAASrY,EAAG,IAAIsY,EAAK9f,MAG3D8f,EAAI5a,KAAK,KAIxB,OADAlE,KAAK4e,iBAAmBC,EAASxG,GAC1BrY,KAAK4e,gBAChB,CAMA1T,0BAA0B+T,IAClBA,EAAOvG,QAAQxX,YACb+d,EAAOvG,QAAQQ,WAAWG,QACtB4F,EAAOvG,QAAQQ,WAAW9R,OACxB6X,EAAOvG,QAAQQ,WAAWtN,SAC1BqT,EAAOvG,QAAQQ,WAAWrN,UAClClM,UAAU8D,cAAc0B,yBAAyB,6DAEjD8Z,EAAO/K,aAAaa,SAAWkK,EAAO/K,aAAac,UAC/CiK,EAAO/K,aAAaa,QAAQ7H,QAAQ+R,EAAO/K,aAAac,UACxDrV,UAAU8D,cAAc0B,yBAAyB,4BAEjD8Z,EAAO/K,aAAac,QAAQlI,SAASmS,EAAO/K,aAAaa,UACzDpV,UAAU8D,cAAc0B,yBAAyB,8BAGrD8Z,EAAOtF,eAAiBsF,EAAOvJ,WAC/B/V,UAAU8D,cAAc0B,yBAAyB,qDAEzD,EAEJ+W,gBAAgBoB,iBAAmB,CAC/B,OACA,sBACA,YACA,YACA,WAEJpB,gBAAgBQ,QAAWxM,GAAW,MAALA,EAEjC,MAAMgP,MACFnf,cACIC,KAAKmf,OAAS,GACdnf,KAAK8T,aAAef,EAAeJ,OAAOQ,cAC1CnT,KAAKof,WAAarM,EAAeJ,OAAOkB,YACxC7T,KAAKqf,eAAiBtM,EAAeJ,OAAO0D,cAChD,CAIIiJ,aACA,MAAO,IAAItf,KAAKmf,OACpB,CAIII,iBACA,OAAOvf,KAAKmf,OAAOnf,KAAKwf,kBAAkB7T,KAC9C,CAII6T,sBACA,OAA2B,IAAvBxf,KAAKmf,OAAO9N,OACL,EACJrR,KAAKmf,OAAO9N,OAAS,CAChC,CAKAoO,YAAY5a,GACR,OAAKA,GAELA,EAAK8C,aAAe3H,KAAK8T,aAAaJ,QAAQ/L,aACvC9C,EAAK4B,UAFD,EAGf,CAMAiZ,WAAWzU,GACP,OAAOiR,gBAAgByD,eAAe1U,EAAO,QAASjL,KAAK8T,aAAaJ,QAAQ/L,aACpF,CAQAiY,aAAa3U,EAAOuK,GAChB,IAAKvK,EAED,YADAjL,KAAK6f,cAAS/Z,EAAW0P,GAG7B,MAAM8E,EAAYta,KAAK0f,WAAWzU,GAC9BqP,IACAA,EAAUnT,gBAAgBnH,KAAK8T,aAAaJ,QAAQ/L,cACpD3H,KAAK6f,SAASvF,EAAW9E,GAEjC,CAKAsK,IAAIjb,GACA7E,KAAKmf,OAAOpJ,KAAKlR,EACrB,CAOAkb,SAAShM,EAAYnN,GACjB,IAAKM,SAAS8F,QAAQ+G,GAClB,OAAO,EACX,IAAKnN,EACD,YAAyDd,IAAlD9F,KAAKmf,OAAO1Q,MAAMP,GAAMA,EAAEf,OAAO4G,KAC5C,MAAMtN,EAASE,EAAgBC,GACzBoZ,EAAqBjM,EAAWtN,OAAOA,GAC7C,YAE+CX,IAFvC9F,KAAKmf,OACR5U,KAAK2D,GAAMA,EAAEzH,OAAOA,KACpBgI,MAAMP,GAAMA,IAAM8R,GAC3B,CAQAC,YAAYlM,EAAYnN,GACpB,IAAKM,SAAS8F,QAAQ+G,GAClB,OAAQ,EACZ,IAAKnN,EACD,OAAO5G,KAAKmf,OAAO5U,KAAK2D,GAAMA,EAAEjB,YAAWvC,QAAQqJ,EAAW9G,WAClE,MAAMxG,EAASE,EAAgBC,GACzBoZ,EAAqBjM,EAAWtN,OAAOA,GAC7C,OAAOzG,KAAKmf,OAAO5U,KAAK2D,GAAMA,EAAEzH,OAAOA,KAASiE,QAAQsV,EAC5D,CAIApJ,QACI5W,KAAK8T,aAAaoM,OAAQ,EAC1BlgB,KAAKqf,eAAe/I,aAAaH,KAAK,CAClChI,KAAMxO,UAAUE,OAAOK,OACvB2E,UAAMiB,EACNqa,QAASngB,KAAKuf,WACda,SAAS,EACTpT,SAAS,IAEbhN,KAAKmf,OAAS,GACVnf,KAAK8T,aAAarL,QAClBzI,KAAK8T,aAAarL,MAAMwC,MAAQ,IACpCjL,KAAKqf,eAAe7I,cAAcL,KAAK,MAC3C,CAMAjL,uBAAuBmV,EAAQxe,GAC3B,MAAMqR,EAAOmN,EAAS,GAAIC,EAAYhR,KAAKC,MAAM1N,EAAOwe,GAAUA,EAClE,MAAO,CAACC,EAD4EA,EAAmB,EAAPpN,EAAuB5D,KAAKC,MAAM1N,EAAOqR,GAAQA,EAErJ,CACAqN,YAAY9K,GACR,IAAKzV,KAAK8T,aAAarL,MACnB,OACJ,IAAI+X,EAAWxgB,KAAKyf,YAAYhK,IAC5BzV,KAAK8T,aAAaJ,QAAQiG,eAC1B3Z,KAAK8T,aAAaJ,QAAQgC,aAC1B8K,EAAWxgB,KAAKmf,OACX5U,KAAKtL,GAAMe,KAAKyf,YAAYxgB,KAC5BiF,KAAKlE,KAAK8T,aAAaJ,QAAQkG,yBAEpC5Z,KAAK8T,aAAarL,MAAMwC,OAASuV,IACjCxgB,KAAK8T,aAAarL,MAAMwC,MAAQuV,EACxC,CAUAX,SAASpK,EAAQD,GACb,MAAMiL,OAA2B,IAAVjL,EAAuB4K,GAAW3K,GAAUgL,EACnE,IAAIN,EAAUngB,KAAK8T,aAAaoM,MAAQ,KAAOlgB,KAAKmf,OAAO3J,IAAQ7J,MAInE,IAHKwU,IAAYngB,KAAK8T,aAAaoM,OAASO,GAAWL,IACnDD,EAAUngB,KAAKuf,YAEf9J,GAAU0K,GAAShT,OAAOsI,GAE1B,YADAzV,KAAKugB,YAAY9K,GAIrB,IAAKA,EAED,YADAzV,KAAK0gB,cAAcN,EAAS5K,EAAO2K,GAGvC3K,EAAQA,GAAS,EACjBC,EAASA,EAAO9J,MAE2B,IAAvC3L,KAAK8T,aAAaJ,QAAQqG,WAC1BtE,EAAO7J,QACH0D,KAAKqR,MAAMlL,EAAO7J,QAAU5L,KAAK8T,aAAaJ,QAAQqG,UAClD/Z,KAAK8T,aAAaJ,QAAQqG,SAClCtE,EAAOxJ,QAAQvG,EAAKkG,UAExB,MAAMgV,EAAY5T,IACdhN,KAAKmf,OAAO3J,GAASC,EACrBzV,KAAKqf,eAAe3I,eAAeP,KAAKV,EAAO9J,OAC/C3L,KAAKugB,YAAY9K,GACjBzV,KAAK8T,aAAaoM,OAAQ,EAC1BlgB,KAAKqf,eAAe7I,cAAcL,KAAK,OACvCnW,KAAKqf,eAAe/I,aAAaH,KAAK,CAClChI,KAAMxO,UAAUE,OAAOK,OACvB2E,KAAM4Q,EACN0K,UACAC,UACApT,QAASA,GACX,EAEFhN,KAAKof,WAAWpS,QAAQyI,IACxBzV,KAAKof,WAAW9J,iBAAiBtV,KAAKsf,OAAQ9J,EAAOC,GACrDmL,GAAS,IAGT5gB,KAAK8T,aAAaJ,QAAQ+F,aAC1BmH,GAAS,GAEb5gB,KAAKqf,eAAe/I,aAAaH,KAAK,CAClChI,KAAMxO,UAAUE,OAAOO,MACvBygB,OAAQlhB,UAAU8D,cAAcG,uBAChCiB,KAAM4Q,EACN0K,YAER,CACAO,cAAcN,EAAS5K,EAAO2K,IACrBngB,KAAK8T,aAAaJ,QAAQiG,eACJ,IAAvB3Z,KAAKmf,OAAO9N,QACZ+O,GACApgB,KAAK8T,aAAaoM,OAAQ,EAC1BlgB,KAAKmf,OAAS,IAGdnf,KAAKmf,OAAOjJ,OAAOV,EAAO,GAE9BxV,KAAKugB,cACLvgB,KAAKqf,eAAe/I,aAAaH,KAAK,CAClChI,KAAMxO,UAAUE,OAAOK,OACvB2E,UAAMiB,EACNqa,UACAC,UACApT,SAAS,IAEbhN,KAAKqf,eAAe7I,cAAcL,KAAK,MAC3C,EAGJ,IAAI2K,GACJ,SAAWA,GACPA,EAAkB,KAAI,OACtBA,EAAsB,SAAI,WAC1BA,EAAgC,mBAAI,qBACpCA,EAAyB,YAAI,cAC7BA,EAAwB,WAAI,aAC5BA,EAA0B,aAAI,eAC9BA,EAAuB,UAAI,YAC3BA,EAAwB,WAAI,aAC5BA,EAA0B,aAAI,eAC9BA,EAA0B,aAAI,eAC9BA,EAA4B,eAAI,iBAChCA,EAA8B,iBAAI,mBAClCA,EAA8B,iBAAI,mBAClCA,EAA4B,eAAI,iBAChCA,EAA8B,iBAAI,mBAClCA,EAA8B,iBAAI,mBAClCA,EAA4B,eAAI,iBAChCA,EAA0B,aAAI,eAC9BA,EAAuB,UAAI,YAC3BA,EAAuB,UAAI,YAC3BA,EAAyB,YAAI,cAC7BA,EAAyB,YAAI,cAC7BA,EAAmB,MAAI,QACvBA,EAAmB,MAAI,QACvBA,EAAmB,MAAI,OAC1B,CA1BD,CA0BGA,IAAgBA,EAAc,CAAC,IAClC,IAAIC,EAAgBD,EAKpB,MAAME,YACFjhB,cACIC,KAAK8T,aAAef,EAAeJ,OAAOQ,cAC1CnT,KAAKuV,MAAQxC,EAAeJ,OAAOuM,OACnClf,KAAKof,WAAarM,EAAeJ,OAAOkB,WAC5C,CAKAoN,YACI,MAAM1I,EAAY2I,SAASC,cAAc,OAGzC,GAFA5I,EAAU6I,UAAUtB,IAAIngB,UAAUgB,IAAIqB,eACtCuW,EAAU8I,UAAUrhB,KAAKshB,kBACrBthB,KAAK8T,aAAaJ,QAAQgF,QAAQxW,cAAe,CACjD,MAAMqf,EAAML,SAASC,cAAc,OACnCI,EAAIH,UAAUtB,IAAIngB,UAAUgB,IAAIuB,cAAevC,UAAUgB,IAAIM,aAC7DsX,EAAUsD,YAAY0F,EAC1B,CACA,MAAMC,gBAAEA,EAAeC,mBAAEA,GAAuBzhB,KAAK0hB,kBAAkBnJ,GACvE,IAAK,IAAIxO,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,GAAU,IAANA,GAAWA,EAAI,GAAM,GACjB/J,KAAK8T,aAAaJ,QAAQgF,QAAQxW,cAAe,CACjD,MAAMqf,EAAML,SAASC,cAAc,OACnCI,EAAIH,UAAUtB,IAAIngB,UAAUgB,IAAIuB,cAAevC,UAAUgB,IAAIM,aAC7DsX,EAAUsD,YAAY0F,EAC1B,CAEJ,MAAMA,EAAML,SAASC,cAAc,OACnCI,EAAII,aAAa,cAAeZ,EAAca,WAC9CrJ,EAAUsD,YAAY0F,GAElBM,WAAW,kBAAkBzP,SAC7BpS,KAAK8T,aAAaJ,QAAQgC,YAC1B6L,EAAIO,iBAAiB,YAAaN,GAClCD,EAAIO,iBAAiB,WAAYL,GAEzC,CACA,OAAOlJ,CACX,CAKAwJ,QAAQlhB,EAAQmhB,GACZ,MAAMzJ,EAAY1X,EAAOohB,uBAAuBtiB,UAAUgB,IAAIqB,eAAe,GAC7EhC,KAAKkiB,oBAAoB3J,GACzB,MAAM4J,EAAYniB,KAAK8T,aAAaL,SAAS9H,MACxCM,QAAQvG,EAAK3D,OACbkK,QAAQ,UAAWjM,KAAK8T,aAAaJ,QAAQ/L,aAAauE,gBAC1DO,WAAW,GAAI/G,EAAK0B,OACzBpH,KAAKoiB,qBAAqB7J,EAAW4J,EAAUxW,OAC/C4M,EACK8J,iBAAiB,iBAAiBtB,EAAca,eAChD7iB,SAAS4e,IACV,MAAM2E,EAAU,GAChBA,EAAQvM,KAAKpW,UAAUgB,IAAIsB,KACvBkgB,EAAUrV,SAAS9M,KAAK8T,aAAaL,SAAU/N,EAAK3D,QACpDugB,EAAQvM,KAAKpW,UAAUgB,IAAIW,KAE3B6gB,EAAUjV,QAAQlN,KAAK8T,aAAaL,SAAU/N,EAAK3D,QACnDugB,EAAQvM,KAAKpW,UAAUgB,IAAIY,KAE1BvB,KAAK8T,aAAaoM,OAClBlgB,KAAK8T,aAAaJ,QAAQgC,YAC3B1V,KAAKuV,MAAMwK,SAASoC,EAAWzc,EAAKb,OACpCyd,EAAQvM,KAAKpW,UAAUgB,IAAIa,QAE1BxB,KAAKof,WAAWpS,QAAQmV,EAAWzc,EAAKb,OACzCyd,EAAQvM,KAAKpW,UAAUgB,IAAIU,UAE3B8gB,EAAUhV,OAAO,IAAIjG,SAAYxB,EAAKb,OACtCyd,EAAQvM,KAAKpW,UAAUgB,IAAIyB,OAEL,IAAtB+f,EAAU5V,SAAuC,IAAtB4V,EAAU5V,SACrC+V,EAAQvM,KAAKpW,UAAUgB,IAAI0B,SAE/BrC,KAAKuiB,iBAAiBJ,EAAWG,GACjCN,EAAMtc,EAAKb,KAAMsd,EAAWG,EAAS3E,GACrCA,EAAQyD,UAAUoB,UAAU7E,EAAQyD,WACpCzD,EAAQyD,UAAUtB,OAAOwC,GACzB3E,EAAQgE,aAAa,aAAc3hB,KAAKyiB,iBAAiBN,IACzDxE,EAAQgE,aAAa,WAAY,GAAGQ,EAAUtd,QAC9C8Y,EAAQ+E,UAAYP,EAAU7a,WAAMxB,EAAW,CAC3C7D,IAAK,YACNA,IACHkgB,EAAU1V,WAAW,EAAG/G,EAAKb,KAAK,GAE1C,CACA4d,iBAAiB5d,GACb,OAAKqC,SAAS8F,QAAQnI,GAEf,GAAGA,EAAKhD,QAAQgD,EAAKkK,kBAAkBlK,EAAK8J,gBADxC,EAEf,CACA4T,iBAAiBJ,EAAWG,GACxB,MAAM/f,EAAavC,KAAKuV,MAAM+J,OAAO,GAC/B9c,EAAWxC,KAAKuV,MAAM+J,OAAO,GAC/Btf,KAAK8T,aAAaJ,QAAQgC,YACtByM,EAAU9U,UAAU9K,EAAYC,EAAUkD,EAAKb,OAC/Cyd,EAAQvM,KAAKpW,UAAUgB,IAAI2B,SAE3B6f,EAAUhV,OAAO5K,EAAYmD,EAAKb,OAClCyd,EAAQvM,KAAKpW,UAAUgB,IAAI4B,YAE3B4f,EAAUhV,OAAO3K,EAAUkD,EAAKb,OAChCyd,EAAQvM,KAAKpW,UAAUgB,IAAI6B,UAGvC,CACAkf,kBAAkBnJ,GAyEd,MAAO,CAAEiJ,gBAxEgBjjB,IACrB,MAAMokB,EAAgBpkB,GAAGokB,cAEzB,GAAiC,IAA7B3iB,KAAKuV,MAAM+J,OAAOjO,QAClBsR,EAAcvB,UAAUwB,SAASjjB,UAAUgB,IAAIU,UAC/C,OAEJ,MAAMwhB,EAAU,IAAItK,EAAU8J,iBAAiB,SAEzCS,EAAiBH,EAAcI,aAAa,cAE5CZ,EAAYjb,SAASkT,WAAW0I,EAAgB,CAClDrc,OAAQ,eAGNuc,EAAWH,EAAQI,WAAW1kB,GAAMA,EAAEwkB,aAAa,gBAAkBD,IAErEvgB,EAAavC,KAAKuV,MAAM+J,OAAO,GAC/B9c,EAAWxC,KAAKuV,MAAM+J,OAAO,GAE7B4D,EAAsBljB,KAAKyiB,iBAAiBlgB,GAC5C4gB,EAAkBN,EAAQI,WAAW1kB,GAAMA,EAAEwkB,aAAa,gBAAkBG,IAC5EE,EAAoBP,EAAQM,GAYlC,IAAIE,EAVClB,EAAUhV,OAAO5K,EAAYmD,EAAKb,OACnC8d,EAAcvB,UAAUoB,OAAO7iB,UAAUgB,IAAI4B,YAE5C4f,EAAUhV,OAAO3K,EAAUkD,EAAKb,OACjC8d,EAAcvB,UAAUoB,OAAO7iB,UAAUgB,IAAI6B,UAO7C2f,EAAUrV,SAASvK,IACnBogB,EAAcvB,UAAUtB,IAAIngB,UAAUgB,IAAI4B,YAC1C6gB,GAAmBhC,UAAUoB,OAAO7iB,UAAUgB,IAAI4B,YAClD6gB,GAAmBhC,UAAUtB,IAAIngB,UAAUgB,IAAI6B,UAC/C6gB,EAAS,CAAC7Y,EAAGgL,IAAUA,EAAQwN,GAAYxN,EAAQ2N,IAGnDR,EAAcvB,UAAUtB,IAAIngB,UAAUgB,IAAI6B,UAC1C4gB,GAAmBhC,UAAUoB,OAAO7iB,UAAUgB,IAAI6B,UAClD4gB,GAAmBhC,UAAUtB,IAAIngB,UAAUgB,IAAI4B,YAC/C8gB,EAAS,CAAC7Y,EAAGgL,IAAUA,EAAQwN,GAAYxN,EAAQ2N,GAEvDN,EAAQ5U,OAAOoV,GAAQtkB,SAASR,IAC5BA,EAAE6iB,UAAUtB,IAAIngB,UAAUgB,IAAI2B,QAAQ,GACxC,EAuBoBmf,mBArBEljB,IAExB,MAAMskB,EAAU,IAAItK,EAAU8J,iBAAiB,SAM/C,GAHiC,IAA7BriB,KAAKuV,MAAM+J,OAAOjO,QAClBwR,EAAQ9jB,SAASR,GAAMA,EAAE6iB,UAAUoB,OAAO7iB,UAAUgB,IAAI2B,WAE3B,IAA7BtC,KAAKuV,MAAM+J,OAAOjO,OAClB,OACJ,MAAMsR,EAAgBpkB,GAAGokB,cAEnBR,EAAY,IAAIjb,SAASyb,EAAcI,aAAa,eAErDZ,EAAUhV,OAAOnN,KAAKuV,MAAM+J,OAAO,GAAI5Z,EAAKb,OAC7C8d,EAAcvB,UAAUoB,OAAO7iB,UAAUgB,IAAI4B,YAE5C4f,EAAUhV,OAAOnN,KAAKuV,MAAM+J,OAAO,GAAI5Z,EAAKb,OAC7C8d,EAAcvB,UAAUoB,OAAO7iB,UAAUgB,IAAI6B,SACjD,EAGR,CACA0f,oBAAoB3J,GAChB,GAAsC,aAAlCvY,KAAK8T,aAAaP,YAClB,OACJ,MAAOpS,EAAUmiB,EAAUliB,GAAQmX,EAAUgL,cACxCtB,uBAAuBtiB,UAAUgB,IAAIG,gBAAgB,GACrD0iB,qBAAqB,OAC1BF,EAAS3B,aAAahiB,UAAUgB,IAAIqB,cAAehC,KAAK8T,aAAaL,SAAShN,OAAOzG,KAAK8T,aAAaJ,QAAQ/L,aAAamP,sBAC5H9W,KAAK8T,aAAaJ,QAAQgF,QAAQQ,WAAWnX,MACvCuhB,EAASlC,UAAUoB,OAAO7iB,UAAUgB,IAAIU,UACxCiiB,EAASlC,UAAUtB,IAAIngB,UAAUgB,IAAIU,UAC3CrB,KAAKof,WAAWpS,QAAQhN,KAAK8T,aAAaL,SAAS9H,MAAMc,YAAY,EAAG/G,EAAK3D,OAAQ2D,EAAK3D,OACpFZ,EAASigB,UAAUoB,OAAO7iB,UAAUgB,IAAIU,UACxCF,EAASigB,UAAUtB,IAAIngB,UAAUgB,IAAIU,UAC3CrB,KAAKof,WAAWpS,QAAQhN,KAAK8T,aAAaL,SAAS9H,MAAMc,WAAW,EAAG/G,EAAK3D,OAAQ2D,EAAK3D,OACnFX,EAAKggB,UAAUoB,OAAO7iB,UAAUgB,IAAIU,UACpCD,EAAKggB,UAAUtB,IAAIngB,UAAUgB,IAAIU,SAC3C,CAKAigB,iBACI,MAAMa,EAAYniB,KAAK8T,aAAaL,SAAS9H,MACxCM,QAAQ,UAAWjM,KAAK8T,aAAaJ,QAAQ/L,aAAauE,gBAC1DD,QAAQvG,EAAKb,MACZ4e,EAAM,GAEZ,GADAvC,SAASC,cAAc,OACnBnhB,KAAK8T,aAAaJ,QAAQgF,QAAQxW,cAAe,CACjD,MAAMwhB,EAAiBxC,SAASC,cAAc,OAC9CuC,EAAetC,UAAUtB,IAAIngB,UAAUgB,IAAIuB,cAAevC,UAAUgB,IAAIM,aACxEyiB,EAAehB,UAAY,IAC3Be,EAAI1N,KAAK2N,EACb,CACA,IAAK,IAAI3Z,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,MAAM2Z,EAAiBxC,SAASC,cAAc,OAC9CuC,EAAetC,UAAUtB,IAAIngB,UAAUgB,IAAIwB,aAAcxC,UAAUgB,IAAIM,aACvEyiB,EAAehB,UAAYP,EAAU1b,OAAO,CAAE0I,QAAS,UACvDgT,EAAU1V,WAAW,EAAG/G,EAAKb,MAC7B4e,EAAI1N,KAAK2N,EACb,CACA,OAAOD,CACX,CACArB,qBAAqB7J,EAAW4J,GAC5B,IAAI5J,EAAU8J,iBAAiB,IAAI1iB,UAAUgB,IAAIuB,kBAC5C+L,QAAQ1P,GAAsB,MAAhBA,EAAEmkB,YAChB3jB,SAAS4e,IACVA,EAAQ+E,UAAY,GAAGP,EAAUlT,OACjCkT,EAAU1V,WAAW,EAAG/G,EAAKb,KAAK,GAE1C,EAMJ,MAAM8e,aACF5jB,cACIC,KAAK8T,aAAef,EAAeJ,OAAOQ,cAC1CnT,KAAKuV,MAAQxC,EAAeJ,OAAOuM,OACnClf,KAAKof,WAAarM,EAAeJ,OAAOkB,WAC5C,CAKAoN,YACI,MAAM1I,EAAY2I,SAASC,cAAc,OACzC5I,EAAU6I,UAAUtB,IAAIngB,UAAUgB,IAAImB,iBACtC,IAAK,IAAIiI,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,MAAMwX,EAAML,SAASC,cAAc,OACnCI,EAAII,aAAa,cAAeZ,EAAc7I,aAC9CK,EAAUsD,YAAY0F,EAC1B,CACA,OAAOhJ,CACX,CAKAwJ,QAAQlhB,EAAQmhB,GACZ,MAAMzJ,EAAY1X,EAAOohB,uBAAuBtiB,UAAUgB,IAAImB,iBAAiB,GAC/E,GAAsC,WAAlC9B,KAAK8T,aAAaP,YAA0B,CAC5C,MAAOpS,EAAUmiB,EAAUliB,GAAQmX,EAAUgL,cACxCtB,uBAAuBtiB,UAAUgB,IAAIG,gBAAgB,GACrD0iB,qBAAqB,OAC1BF,EAAS3B,aAAahiB,UAAUgB,IAAImB,gBAAiB9B,KAAK8T,aAAaL,SAAShN,OAAO,CAAE5E,KAAM,aAC/F7B,KAAK8T,aAAaJ,QAAQgF,QAAQQ,WAAWrX,KACvCyhB,EAASlC,UAAUoB,OAAO7iB,UAAUgB,IAAIU,UACxCiiB,EAASlC,UAAUtB,IAAIngB,UAAUgB,IAAIU,UAC3CrB,KAAKof,WAAWpS,QAAQhN,KAAK8T,aAAaL,SAAS9H,MAAMc,YAAY,EAAG/G,EAAK7D,MAAO6D,EAAK7D,MACnFV,EAASigB,UAAUoB,OAAO7iB,UAAUgB,IAAIU,UACxCF,EAASigB,UAAUtB,IAAIngB,UAAUgB,IAAIU,UAC3CrB,KAAKof,WAAWpS,QAAQhN,KAAK8T,aAAaL,SAAS9H,MAAMc,WAAW,EAAG/G,EAAK7D,MAAO6D,EAAK7D,MAClFT,EAAKggB,UAAUoB,OAAO7iB,UAAUgB,IAAIU,UACpCD,EAAKggB,UAAUtB,IAAIngB,UAAUgB,IAAIU,SAC3C,CACA,MAAM8gB,EAAYniB,KAAK8T,aAAaL,SAAS9H,MAAMM,QAAQvG,EAAK7D,MAChE0W,EACK8J,iBAAiB,iBAAiBtB,EAAc7I,iBAChDnZ,SAAQ,CAAC6kB,EAAgBpO,KAC1B,MAAM8M,EAAU,GAChBA,EAAQvM,KAAKpW,UAAUgB,IAAIoB,QACtB/B,KAAK8T,aAAaoM,OACnBlgB,KAAKuV,MAAMwK,SAASoC,EAAWzc,EAAK3D,QACpCugB,EAAQvM,KAAKpW,UAAUgB,IAAIa,QAE1BxB,KAAKof,WAAWpS,QAAQmV,EAAWzc,EAAK3D,QACzCugB,EAAQvM,KAAKpW,UAAUgB,IAAIU,UAE/B2gB,EAAMtc,EAAK3D,MAAOogB,EAAWG,EAASsB,GACtCA,EAAexC,UAAUoB,UAAUoB,EAAexC,WAClDwC,EAAexC,UAAUtB,OAAOwC,GAChCsB,EAAejC,aAAa,aAAc,GAAGnM,KAC7CoO,EAAelB,UAAY,GAAGP,EAAU1b,OAAO,CAAE1E,MAAO,YACxDogB,EAAU1V,WAAW,EAAG/G,EAAK3D,MAAM,GAE3C,EAMJ,MAAM8hB,YACF9jB,cACIC,KAAK8T,aAAef,EAAeJ,OAAOQ,cAC1CnT,KAAKuV,MAAQxC,EAAeJ,OAAOuM,OACnClf,KAAKof,WAAarM,EAAeJ,OAAOkB,WAC5C,CAKAoN,YACI,MAAM1I,EAAY2I,SAASC,cAAc,OACzC5I,EAAU6I,UAAUtB,IAAIngB,UAAUgB,IAAIiB,gBACtC,IAAK,IAAImI,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,MAAMwX,EAAML,SAASC,cAAc,OACnCI,EAAII,aAAa,cAAeZ,EAAc3I,YAC9CG,EAAUsD,YAAY0F,EAC1B,CACA,OAAOhJ,CACX,CAKAwJ,QAAQlhB,EAAQmhB,GACZhiB,KAAK8jB,WAAa9jB,KAAK8T,aAAaL,SAAS9H,MAAMc,YAAY,EAAG/G,EAAK7D,MACvE7B,KAAK+jB,SAAW/jB,KAAK8T,aAAaL,SAAS9H,MAAMc,WAAW,GAAI/G,EAAK7D,MACrE,MAAM0W,EAAY1X,EAAOohB,uBAAuBtiB,UAAUgB,IAAIiB,gBAAgB,GAC9E,GAAsC,UAAlC5B,KAAK8T,aAAaP,YAAyB,CAC3C,MAAOpS,EAAUmiB,EAAUliB,GAAQmX,EAAUgL,cACxCtB,uBAAuBtiB,UAAUgB,IAAIG,gBAAgB,GACrD0iB,qBAAqB,OAC1BF,EAAS3B,aAAahiB,UAAUgB,IAAIiB,eAAgB,GAAG5B,KAAK8jB,WAAWrd,OAAO,CAAE5E,KAAM,eAAgB7B,KAAK+jB,SAAStd,OAAO,CACzH5E,KAAM,eAER7B,KAAK8T,aAAaJ,QAAQgF,QAAQQ,WAAWE,QACvCkK,EAASlC,UAAUoB,OAAO7iB,UAAUgB,IAAIU,UACxCiiB,EAASlC,UAAUtB,IAAIngB,UAAUgB,IAAIU,UAC3CrB,KAAKof,WAAWpS,QAAQhN,KAAK8jB,WAAYpe,EAAK7D,MACxCV,EAASigB,UAAUoB,OAAO7iB,UAAUgB,IAAIU,UACxCF,EAASigB,UAAUtB,IAAIngB,UAAUgB,IAAIU,UAC3CrB,KAAKof,WAAWpS,QAAQhN,KAAK+jB,SAAUre,EAAK7D,MACtCT,EAAKggB,UAAUoB,OAAO7iB,UAAUgB,IAAIU,UACpCD,EAAKggB,UAAUtB,IAAIngB,UAAUgB,IAAIU,SAC3C,CACA,MAAM8gB,EAAYniB,KAAK8T,aAAaL,SAAS9H,MACxCM,QAAQvG,EAAK7D,MACb4K,YAAY,EAAG/G,EAAK7D,MACzB0W,EACK8J,iBAAiB,iBAAiBtB,EAAc3I,gBAChDrZ,SAAS6kB,IACV,MAAMtB,EAAU,GAChBA,EAAQvM,KAAKpW,UAAUgB,IAAIkB,OACtB7B,KAAK8T,aAAaoM,OACnBlgB,KAAKuV,MAAMwK,SAASoC,EAAWzc,EAAK7D,OACpCygB,EAAQvM,KAAKpW,UAAUgB,IAAIa,QAE1BxB,KAAKof,WAAWpS,QAAQmV,EAAWzc,EAAK7D,OACzCygB,EAAQvM,KAAKpW,UAAUgB,IAAIU,UAE/B2gB,EAAMtc,EAAK7D,KAAMsgB,EAAWG,EAASsB,GACrCA,EAAexC,UAAUoB,UAAUoB,EAAexC,WAClDwC,EAAexC,UAAUtB,OAAOwC,GAChCsB,EAAejC,aAAa,aAAc,GAAGQ,EAAUtgB,QACvD+hB,EAAelB,UAAYP,EAAU1b,OAAO,CAAE5E,KAAM,YACpDsgB,EAAU1V,WAAW,EAAG/G,EAAK7D,KAAK,GAE1C,EAMJ,MAAMmiB,cACFjkB,cACIC,KAAK8T,aAAef,EAAeJ,OAAOQ,cAC1CnT,KAAKuV,MAAQxC,EAAeJ,OAAOuM,OACnClf,KAAKof,WAAarM,EAAeJ,OAAOkB,WAC5C,CAKAoN,YACI,MAAM1I,EAAY2I,SAASC,cAAc,OACzC5I,EAAU6I,UAAUtB,IAAIngB,UAAUgB,IAAIe,kBACtC,IAAK,IAAIqI,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,MAAMwX,EAAML,SAASC,cAAc,OACnCI,EAAII,aAAa,cAAeZ,EAAc9I,cAC9CM,EAAUsD,YAAY0F,EAC1B,CACA,OAAOhJ,CACX,CAKAwJ,QAAQlhB,EAAQmhB,GACZ,MAAO3a,EAAOE,GAAO2X,MAAM+E,gBAAgB,IAAKjkB,KAAK8T,aAAaL,SAAS5R,MAC3E7B,KAAKkkB,aAAelkB,KAAK8T,aAAaL,SAAS9H,MAAMM,QAAQvG,EAAK7D,MAClE7B,KAAKkkB,aAAariB,KAAOwF,EACzBrH,KAAKmkB,WAAankB,KAAK8T,aAAaL,SAAS9H,MAAMM,QAAQvG,EAAK7D,MAChE7B,KAAKmkB,WAAWtiB,KAAO0F,EACvB,MAAMgR,EAAY1X,EAAOohB,uBAAuBtiB,UAAUgB,IAAIe,kBAAkB,IACzEP,EAAUmiB,EAAUliB,GAAQmX,EAAUgL,cACxCtB,uBAAuBtiB,UAAUgB,IAAIG,gBAAgB,GACrD0iB,qBAAqB,OACY,YAAlCxjB,KAAK8T,aAAaP,cAClB+P,EAAS3B,aAAahiB,UAAUgB,IAAIe,iBAAkB,GAAG1B,KAAKkkB,aAAazd,OAAO,CAChF5E,KAAM,eACJ7B,KAAKmkB,WAAW1d,OAAO,CAAE5E,KAAM,eACnC7B,KAAKof,WAAWpS,QAAQhN,KAAKkkB,aAAcxe,EAAK7D,MAC1CV,EAASigB,UAAUoB,OAAO7iB,UAAUgB,IAAIU,UACxCF,EAASigB,UAAUtB,IAAIngB,UAAUgB,IAAIU,UAC3CrB,KAAKof,WAAWpS,QAAQhN,KAAKmkB,WAAYze,EAAK7D,MACxCT,EAAKggB,UAAUoB,OAAO7iB,UAAUgB,IAAIU,UACpCD,EAAKggB,UAAUtB,IAAIngB,UAAUgB,IAAIU,WAE3C,MAAM+iB,EAAcpkB,KAAKuV,MAAM+J,OAAO/U,KAAK2D,GAAMA,EAAErM,OACnD0W,EACK8J,iBAAiB,iBAAiBtB,EAAc9I,kBAChDlZ,SAAQ,CAAC6kB,EAAgBpO,KAC1B,GAAc,IAAVA,EAEA,OADAoO,EAAexC,UAAUtB,IAAIngB,UAAUgB,IAAIW,KACvCtB,KAAKkkB,aAAariB,KAAO,GAAK,GAC9B+hB,EAAeS,YAAc,IAC7BljB,EAASigB,UAAUtB,IAAIngB,UAAUgB,IAAIU,UACrCuiB,EAAexC,UAAUtB,IAAIngB,UAAUgB,IAAIU,eAC3CuiB,EAAejC,aAAa,aAAc,MAI1CiC,EAAelB,UAAY1iB,KAAKkkB,aAAavY,MACxCc,YAAY,GAAI/G,EAAK7D,MACrB4E,OAAO,CAAE5E,KAAM,iBACpB+hB,EAAejC,aAAa,aAAc,GAAG3hB,KAAKkkB,aAAariB,SAIvE,MAAMygB,EAAU,GAChBA,EAAQvM,KAAKpW,UAAUgB,IAAIgB,QAC3B,MAAM2iB,EAAkBtkB,KAAKkkB,aAAariB,KACpC0iB,EAAgBvkB,KAAKkkB,aAAariB,KAAO,GAC1C7B,KAAK8T,aAAaoM,OACnBkE,EAAYnW,QAAQC,GAAMA,GAAKoW,GAAmBpW,GAAKqW,IAClDlT,OAAS,GACdiR,EAAQvM,KAAKpW,UAAUgB,IAAIa,QAE/BwgB,EAAM,SAAUhiB,KAAKkkB,aAAc5B,EAASsB,GAC5CA,EAAexC,UAAUoB,UAAUoB,EAAexC,WAClDwC,EAAexC,UAAUtB,OAAOwC,GAChCsB,EAAejC,aAAa,aAAc,GAAG3hB,KAAKkkB,aAAariB,QAC/D+hB,EAAelB,UAAY,GAAG1iB,KAAKkkB,aAAazd,OAAO,CACrD5E,KAAM,cAER7B,KAAKkkB,aAAazX,WAAW,GAAI/G,EAAK7D,KAAK,GAEnD,EAMJ,MAAM2iB,YACFzkB,cACIC,KAAKykB,aAAe,GACpBzkB,KAAK8T,aAAef,EAAeJ,OAAOQ,cAC1CnT,KAAKuV,MAAQxC,EAAeJ,OAAOuM,OACnClf,KAAKof,WAAarM,EAAeJ,OAAOkB,WAC5C,CAKAoN,UAAUyD,GACN,MAAMnM,EAAY2I,SAASC,cAAc,OAGzC,OAFA5I,EAAU6I,UAAUtB,IAAIngB,UAAUgB,IAAIgC,gBACtC4V,EAAU8I,UAAUrhB,KAAK2kB,MAAMD,IACxBnM,CACX,CAMAwJ,QAAQlhB,GACJ,MAAM+jB,EAAY/jB,EAAOohB,uBAAuBtiB,UAAUgB,IAAIgC,gBAAgB,GAC9E,IAAI4c,EAAavf,KAAKuV,MAAMgK,YAAY5T,MA+CxC,IA9CK4T,GAAcvf,KAAK8T,aAAaJ,QAAQsG,aACzCuF,EAAavf,KAAK8T,aAAaL,SAAS9H,OAC5CiZ,EACKvC,iBAAiB,aACjBtjB,SAAS4e,GAAYA,EAAQyD,UAAUoB,OAAO7iB,UAAUgB,IAAIU,YAC7DrB,KAAK8T,aAAaJ,QAAQgF,QAAQQ,WAAW9R,QACxCpH,KAAKof,WAAWpS,QAAQhN,KAAK8T,aAAaL,SAAS9H,MAAMc,WAAW,EAAG/G,EAAK0B,OAAQ1B,EAAK0B,QAC1Fwd,EACKC,cAAc,gBAAgB9D,EAAc+D,mBAC5C1D,UAAUtB,IAAIngB,UAAUgB,IAAIU,UAEhCrB,KAAKof,WAAWpS,QAAQhN,KAAK8T,aAAaL,SAAS9H,MAAMc,YAAY,EAAG/G,EAAK0B,OAAQ1B,EAAK0B,QAC3Fwd,EACKC,cAAc,gBAAgB9D,EAAcgE,mBAC5C3D,UAAUtB,IAAIngB,UAAUgB,IAAIU,UAErCujB,EAASC,cAAc,wBAAwBnf,EAAK0B,UAAUsb,UAAYnD,EACpEA,EAAWjR,kBAAkBtO,KAAK8T,aAAaJ,QAAQ/L,aAAa9B,WACpE,MAEN7F,KAAK8T,aAAaJ,QAAQgF,QAAQQ,WAAWtN,UACxC5L,KAAKof,WAAWpS,QAAQhN,KAAK8T,aAAaL,SAAS9H,MAAMc,WAAW,EAAG/G,EAAKkG,SAAUlG,EAAKkG,UAC5FgZ,EACKC,cAAc,gBAAgB9D,EAAciE,qBAC5C5D,UAAUtB,IAAIngB,UAAUgB,IAAIU,UAEhCrB,KAAKof,WAAWpS,QAAQhN,KAAK8T,aAAaL,SAAS9H,MAAMc,YAAY,EAAG/G,EAAKkG,SAAUlG,EAAKkG,UAC7FgZ,EACKC,cAAc,gBAAgB9D,EAAckE,qBAC5C7D,UAAUtB,IAAIngB,UAAUgB,IAAIU,UAErCujB,EAASC,cAAc,wBAAwBnf,EAAKkG,YAAY8W,UAAYnD,EAAaA,EAAWlR,iBAAmB,MAEvHrO,KAAK8T,aAAaJ,QAAQgF,QAAQQ,WAAWrN,UACxC7L,KAAKof,WAAWpS,QAAQhN,KAAK8T,aAAaL,SAAS9H,MAAMc,WAAW,EAAG/G,EAAKmG,SAAUnG,EAAKmG,UAC5F+Y,EACKC,cAAc,gBAAgB9D,EAAcmE,qBAC5C9D,UAAUtB,IAAIngB,UAAUgB,IAAIU,UAEhCrB,KAAKof,WAAWpS,QAAQhN,KAAK8T,aAAaL,SAAS9H,MAAMc,YAAY,EAAG/G,EAAKmG,SAAUnG,EAAKmG,UAC7F+Y,EACKC,cAAc,gBAAgB9D,EAAcoE,qBAC5C/D,UAAUtB,IAAIngB,UAAUgB,IAAIU,UAErCujB,EAASC,cAAc,wBAAwBnf,EAAKmG,YAAY6W,UAAYnD,EAAaA,EAAWnR,iBAAmB,MAEvHpO,KAAK8T,aAAaF,aAAc,CAChC,MAAMwR,EAASR,EAASC,cAAc,gBAAgB9D,EAAc7d,mBAC9DmiB,GAAgB9F,GAAcvf,KAAK8T,aAAaL,UAAU9H,MAChEyZ,EAAO1C,UAAY2C,EAAa9W,WAC3BvO,KAAKof,WAAWpS,QAAQqY,EAAa5Y,WAAW4Y,EAAaje,OAAS,IAAM,GAAK,GAAI1B,EAAK0B,QAI3Fge,EAAOhE,UAAUoB,OAAO7iB,UAAUgB,IAAIU,UAHtC+jB,EAAOhE,UAAUtB,IAAIngB,UAAUgB,IAAIU,SAK3C,CACAujB,EAASlU,MAAM4U,kBAAoB,IAAItlB,KAAKykB,eAChD,CAKAE,MAAMD,GACF1kB,KAAKykB,aAAe,GACpB,MAAMc,EAAM,GAAIC,EAAS,GAAIC,EAAS,GAAI/iB,EAAYwe,SAASC,cAAc,OAAQuE,EAAShB,EAAQ1kB,KAAK8T,aAAaJ,QAAQgF,QAAQC,MAAMC,IAAK+M,EAAWjB,EAAQ1kB,KAAK8T,aAAaJ,QAAQgF,QAAQC,MAAME,MAC9MnW,EAAU0e,UAAUtB,IAAIngB,UAAUgB,IAAI+B,UAAW/C,UAAUgB,IAAIM,aAC/D,MAAM2kB,EAAiBljB,EAAUmjB,WAAU,GAC3CD,EAAeE,UAAY,IAC3B,MAAMC,EAAe,CAACC,GAAQ,IACnBA,EACDJ,EAAeC,WAAU,GACzBnjB,EAAUmjB,WAAU,GAE9B,GAAI7lB,KAAK8T,aAAaJ,QAAQgF,QAAQQ,WAAW9R,MAAO,CACpD,IAAI6e,EAAa/E,SAASC,cAAc,OACxC8E,EAAWtE,aAAa,QAAS3hB,KAAK8T,aAAaJ,QAAQ/L,aAAauP,eACxE+O,EAAWtE,aAAa,cAAeZ,EAAc+D,gBACrDmB,EAAWpK,YAAY6J,EAAOG,WAAU,IACxCN,EAAIxP,KAAKkQ,GACTA,EAAa/E,SAASC,cAAc,OACpC8E,EAAWtE,aAAa,QAAS3hB,KAAK8T,aAAaJ,QAAQ/L,aAAa8P,UACxEwO,EAAWtE,aAAa,cAAeZ,EAAcmF,WACrDD,EAAWtE,aAAa,sBAAuBjc,EAAK0B,OACpDoe,EAAOzP,KAAKkQ,GACZA,EAAa/E,SAASC,cAAc,OACpC8E,EAAWtE,aAAa,QAAS3hB,KAAK8T,aAAaJ,QAAQ/L,aAAaoP,eACxEkP,EAAWtE,aAAa,cAAeZ,EAAcgE,gBACrDkB,EAAWpK,YAAY8J,EAASE,WAAU,IAC1CJ,EAAO1P,KAAKkQ,GACZjmB,KAAKykB,cAAgB,GACzB,CACA,GAAIzkB,KAAK8T,aAAaJ,QAAQgF,QAAQQ,WAAWtN,QAAS,CACtD5L,KAAKykB,cAAgB,KACjBzkB,KAAK8T,aAAaJ,QAAQgF,QAAQQ,WAAW9R,QAC7Cme,EAAIxP,KAAKgQ,KACTP,EAAOzP,KAAKgQ,GAAa,IACzBN,EAAO1P,KAAKgQ,KACZ/lB,KAAKykB,cAAgB,MAEzB,IAAIwB,EAAa/E,SAASC,cAAc,OACxC8E,EAAWtE,aAAa,QAAS3hB,KAAK8T,aAAaJ,QAAQ/L,aAAawP,iBACxE8O,EAAWtE,aAAa,cAAeZ,EAAciE,kBACrDiB,EAAWpK,YAAY6J,EAAOG,WAAU,IACxCN,EAAIxP,KAAKkQ,GACTA,EAAa/E,SAASC,cAAc,OACpC8E,EAAWtE,aAAa,QAAS3hB,KAAK8T,aAAaJ,QAAQ/L,aAAa+P,YACxEuO,EAAWtE,aAAa,cAAeZ,EAAcoF,aACrDF,EAAWtE,aAAa,sBAAuBjc,EAAKkG,SACpD4Z,EAAOzP,KAAKkQ,GACZA,EAAa/E,SAASC,cAAc,OACpC8E,EAAWtE,aAAa,QAAS3hB,KAAK8T,aAAaJ,QAAQ/L,aAAaqP,iBACxEiP,EAAWtE,aAAa,cAAeZ,EAAckE,kBACrDgB,EAAWpK,YAAY8J,EAASE,WAAU,IAC1CJ,EAAO1P,KAAKkQ,EAChB,CACA,GAAIjmB,KAAK8T,aAAaJ,QAAQgF,QAAQQ,WAAWrN,QAAS,CACtD7L,KAAKykB,cAAgB,KACjBzkB,KAAK8T,aAAaJ,QAAQgF,QAAQQ,WAAWtN,UAC7C2Z,EAAIxP,KAAKgQ,KACTP,EAAOzP,KAAKgQ,GAAa,IACzBN,EAAO1P,KAAKgQ,KACZ/lB,KAAKykB,cAAgB,MAEzB,IAAIwB,EAAa/E,SAASC,cAAc,OACxC8E,EAAWtE,aAAa,QAAS3hB,KAAK8T,aAAaJ,QAAQ/L,aAAayP,iBACxE6O,EAAWtE,aAAa,cAAeZ,EAAcmE,kBACrDe,EAAWpK,YAAY6J,EAAOG,WAAU,IACxCN,EAAIxP,KAAKkQ,GACTA,EAAa/E,SAASC,cAAc,OACpC8E,EAAWtE,aAAa,QAAS3hB,KAAK8T,aAAaJ,QAAQ/L,aAAagQ,YACxEsO,EAAWtE,aAAa,cAAeZ,EAAcqF,aACrDH,EAAWtE,aAAa,sBAAuBjc,EAAKmG,SACpD2Z,EAAOzP,KAAKkQ,GACZA,EAAa/E,SAASC,cAAc,OACpC8E,EAAWtE,aAAa,QAAS3hB,KAAK8T,aAAaJ,QAAQ/L,aAAasP,iBACxEgP,EAAWtE,aAAa,cAAeZ,EAAcoE,kBACrDc,EAAWpK,YAAY8J,EAASE,WAAU,IAC1CJ,EAAO1P,KAAKkQ,EAChB,CACA,GAAIjmB,KAAK8T,aAAaF,aAAc,CAChC5T,KAAKykB,cAAgB,KACrB,IAAIwB,EAAaF,IACjBR,EAAIxP,KAAKkQ,GACT,MAAMI,EAASnF,SAASC,cAAc,UACtCkF,EAAO1E,aAAa,QAAS3hB,KAAK8T,aAAaJ,QAAQ/L,aAAazE,gBACpEmjB,EAAO1E,aAAa,cAAeZ,EAAc7d,gBACjDmjB,EAAO1E,aAAa,WAAY,MAC5BhiB,UAAUgB,IAAIuC,eAAe2N,SAAS,KAEtCwV,EAAOjF,UAAUtB,OAAOngB,UAAUgB,IAAIuC,eAAesZ,MAAM,MAG3D6J,EAAOjF,UAAUtB,IAAIngB,UAAUgB,IAAIuC,gBACvC+iB,EAAa/E,SAASC,cAAc,OACpC8E,EAAW7E,UAAUtB,IAAIngB,UAAUgB,IAAIM,aACvCglB,EAAWpK,YAAYwK,GACvBb,EAAOzP,KAAKkQ,GACZA,EAAaF,IACbN,EAAO1P,KAAKkQ,EAChB,CAEA,OADAjmB,KAAKykB,aAAezkB,KAAKykB,aAAa6B,OAC/B,IAAIf,KAAQC,KAAWC,EAClC,EAMJ,MAAMc,YACFxmB,cACIC,KAAK8T,aAAef,EAAeJ,OAAOQ,cAC1CnT,KAAKof,WAAarM,EAAeJ,OAAOkB,WAC5C,CAKAoN,YACI,MAAM1I,EAAY2I,SAASC,cAAc,OACzC5I,EAAU6I,UAAUtB,IAAIngB,UAAUgB,IAAIiC,eACtC,IAAK,IAAImH,EAAI,EAAGA,GAAK/J,KAAK8T,aAAaF,aAAe,GAAK,IAAK7J,IAAK,CACjE,MAAMwX,EAAML,SAASC,cAAc,OACnCI,EAAII,aAAa,cAAeZ,EAAcyF,YAC9CjO,EAAUsD,YAAY0F,EAC1B,CACA,OAAOhJ,CACX,CAKAwJ,QAAQlhB,EAAQmhB,GACZ,MAAMzJ,EAAY1X,EAAOohB,uBAAuBtiB,UAAUgB,IAAIiC,eAAe,GACvEuf,EAAYniB,KAAK8T,aAAaL,SAAS9H,MAAMM,QAAQvG,EAAKb,MAChE0T,EACK8J,iBAAiB,iBAAiBtB,EAAcyF,gBAChDznB,SAAS6kB,IACV,MAAMtB,EAAU,GAChBA,EAAQvM,KAAKpW,UAAUgB,IAAIoC,MACtB/C,KAAKof,WAAWpS,QAAQmV,EAAWzc,EAAK0B,QACzCkb,EAAQvM,KAAKpW,UAAUgB,IAAIU,UAE/B2gB,EAAMtc,EAAK0B,MAAO+a,EAAWG,EAASsB,GACtCA,EAAexC,UAAUoB,UAAUoB,EAAexC,WAClDwC,EAAexC,UAAUtB,OAAOwC,GAChCsB,EAAejC,aAAa,aAAc,GAAGQ,EAAU/a,SACvDwc,EAAelB,UAAYP,EAAU7T,kBAAkBtO,KAAK8T,aAAaJ,QAAQ/L,aAAa9B,WAC9Fsc,EAAU1V,WAAW,EAAG/G,EAAK0B,MAAM,GAE3C,EAMJ,MAAMqf,cACF1mB,cACIC,KAAK8T,aAAef,EAAeJ,OAAOQ,cAC1CnT,KAAKof,WAAarM,EAAeJ,OAAOkB,WAC5C,CAKAoN,YACI,MAAM1I,EAAY2I,SAASC,cAAc,OACzC5I,EAAU6I,UAAUtB,IAAIngB,UAAUgB,IAAIkC,iBACtC,MAAMqQ,EAA8C,IAAvClT,KAAK8T,aAAaJ,QAAQqG,SACjC,EACA/Z,KAAK8T,aAAaJ,QAAQqG,SAChC,IAAK,IAAIhQ,EAAI,EAAGA,EAAI,GAAKmJ,EAAMnJ,IAAK,CAChC,MAAMwX,EAAML,SAASC,cAAc,OACnCI,EAAII,aAAa,cAAeZ,EAAc2F,cAC9CnO,EAAUsD,YAAY0F,EAC1B,CACA,OAAOhJ,CACX,CAKAwJ,QAAQlhB,EAAQmhB,GACZ,MAAMzJ,EAAY1X,EAAOohB,uBAAuBtiB,UAAUgB,IAAIkC,iBAAiB,GACzEsf,EAAYniB,KAAK8T,aAAaL,SAAS9H,MAAMM,QAAQvG,EAAK0B,OAC1D8L,EAA8C,IAAvClT,KAAK8T,aAAaJ,QAAQqG,SACjC,EACA/Z,KAAK8T,aAAaJ,QAAQqG,SAChCxB,EACK8J,iBAAiB,iBAAiBtB,EAAc2F,kBAChD3nB,SAAS6kB,IACV,MAAMtB,EAAU,GAChBA,EAAQvM,KAAKpW,UAAUgB,IAAIqC,QACtBhD,KAAKof,WAAWpS,QAAQmV,EAAWzc,EAAKkG,UACzC0W,EAAQvM,KAAKpW,UAAUgB,IAAIU,UAE/B2gB,EAAMtc,EAAKkG,QAASuW,EAAWG,EAASsB,GACxCA,EAAexC,UAAUoB,UAAUoB,EAAexC,WAClDwC,EAAexC,UAAUtB,OAAOwC,GAChCsB,EAAejC,aAAa,aAAc,GAAGQ,EAAUvW,WACvDgY,EAAelB,UAAYP,EAAU9T,iBACrC8T,EAAU1V,WAAWyG,EAAMxN,EAAKkG,QAAQ,GAEhD,EAMJ,MAAM+a,cACF5mB,cACIC,KAAK8T,aAAef,EAAeJ,OAAOQ,cAC1CnT,KAAKof,WAAarM,EAAeJ,OAAOkB,WAC5C,CAKAoN,YACI,MAAM1I,EAAY2I,SAASC,cAAc,OACzC5I,EAAU6I,UAAUtB,IAAIngB,UAAUgB,IAAImC,iBACtC,IAAK,IAAIiH,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,MAAMwX,EAAML,SAASC,cAAc,OACnCI,EAAII,aAAa,cAAeZ,EAAc6F,cAC9CrO,EAAUsD,YAAY0F,EAC1B,CACA,OAAOhJ,CACX,CAKAwJ,QAAQlhB,EAAQmhB,GACZ,MAAMzJ,EAAY1X,EAAOohB,uBAAuBtiB,UAAUgB,IAAImC,iBAAiB,GACzEqf,EAAYniB,KAAK8T,aAAaL,SAAS9H,MAAMM,QAAQvG,EAAKkG,SAChE2M,EACK8J,iBAAiB,iBAAiBtB,EAAc6F,kBAChD7nB,SAAS6kB,IACV,MAAMtB,EAAU,GAChBA,EAAQvM,KAAKpW,UAAUgB,IAAIsC,QACtBjD,KAAKof,WAAWpS,QAAQmV,EAAWzc,EAAKmG,UACzCyW,EAAQvM,KAAKpW,UAAUgB,IAAIU,UAE/B2gB,EAAMtc,EAAKmG,QAASsW,EAAWG,EAASsB,GACxCA,EAAexC,UAAUoB,UAAUoB,EAAexC,WAClDwC,EAAexC,UAAUtB,OAAOwC,GAChCsB,EAAejC,aAAa,aAAc,GAAGQ,EAAUtW,WACvD+X,EAAelB,UAAYP,EAAU/T,iBACrC+T,EAAU1V,WAAW,EAAG/G,EAAKmG,QAAQ,GAE7C,EAMJ,MAAMgb,SAKF3b,cAAcuK,GACNA,EAAO2L,UAAUwB,SAASjjB,UAAUgB,IAAIN,MACxCL,KAAKM,KAAKmV,GAGVzV,KAAKK,KAAKoV,EAElB,CAKAvK,uBAAuBuK,GACnBA,EAAO2L,UAAUoB,OAAO7iB,UAAUgB,IAAIwC,YACtCsS,EAAO2L,UAAUtB,IAAIngB,UAAUgB,IAAIyC,SAAUzD,UAAUgB,IAAIN,MAC3DoV,EAAO/E,MAAMoW,OAAS,EAC1B,CAKA5b,YAAYuK,GACR,GAAIA,EAAO2L,UAAUwB,SAASjjB,UAAUgB,IAAIwC,aACxCsS,EAAO2L,UAAUwB,SAASjjB,UAAUgB,IAAIN,MACxC,OAIJoV,EAAO/E,MAAMoW,OAAS,IACtBrR,EAAO2L,UAAUoB,OAAO7iB,UAAUgB,IAAIyC,UACtCqS,EAAO2L,UAAUtB,IAAIngB,UAAUgB,IAAIwC,YAEnC4jB,YAPiB,KACbF,SAASG,gBAAgBvR,EAAO,GAMfzV,KAAKinB,iCAAiCxR,IAC3DA,EAAO/E,MAAMoW,OAAS,GAAGrR,EAAOyR,gBACpC,CAKAhc,uBAAuBuK,GACdA,IAELA,EAAO2L,UAAUoB,OAAO7iB,UAAUgB,IAAIwC,WAAYxD,UAAUgB,IAAIN,MAChEoV,EAAO2L,UAAUtB,IAAIngB,UAAUgB,IAAIyC,UACvC,CAKA8H,YAAYuK,GACR,GAAIA,EAAO2L,UAAUwB,SAASjjB,UAAUgB,IAAIwC,cACvCsS,EAAO2L,UAAUwB,SAASjjB,UAAUgB,IAAIN,MACzC,OAIJoV,EAAO/E,MAAMoW,OAAS,GAAGrR,EAAO0R,wBAAgC,WAEzD1R,EAD6B2R,aAEpC3R,EAAO2L,UAAUoB,OAAO7iB,UAAUgB,IAAIyC,SAAUzD,UAAUgB,IAAIN,MAC9DoV,EAAO2L,UAAUtB,IAAIngB,UAAUgB,IAAIwC,YACnCsS,EAAO/E,MAAMoW,OAAS,GAEtBC,YAViB,KACbF,SAASQ,gBAAgB5R,EAAO,GASfzV,KAAKinB,iCAAiCxR,GAC/D,EAOJoR,SAASI,iCAAoCtJ,IACzC,IAAKA,EACD,OAAO,EAGX,IAAI2J,mBAAEA,EAAkBC,gBAAEA,GAAoBC,OAAOC,iBAAiB9J,GACtE,MAAM+J,EAA0BC,OAAOC,WAAWN,GAC5CO,EAAuBF,OAAOC,WAAWL,GAE/C,OAAKG,GAA4BG,GAIjCP,EAAqBA,EAAmB9K,MAAM,KAAK,GACnD+K,EAAkBA,EAAgB/K,MAAM,KAAK,GAGzC,KAFKmL,OAAOC,WAAWN,GACvBK,OAAOC,WAAWL,KANX,CAOF,EAMb,MAAMO,QACF/nB,cACIC,KAAK+nB,YAAa,EAMlB/nB,KAAKgoB,oBAAuBzpB,IACpByB,KAAK8T,aAAaJ,QAAQ8E,OAASgP,OAAOhP,QAE1CxY,KAAK+nB,YACJxpB,EAAE0pB,eAAepX,SAAS7Q,KAAKa,SAC/BtC,EAAE0pB,gBAAgBpX,SAAS7Q,KAAK8T,aAAa6J,UAE9C3d,KAAKM,MACT,EAOJN,KAAKkoB,mBAAsB3pB,IACvByB,KAAKqf,eAAe5I,OAAON,KAAK,CAAE5X,EAAGA,GAAI,EAE7CyB,KAAK8T,aAAef,EAAeJ,OAAOQ,cAC1CnT,KAAKof,WAAarM,EAAeJ,OAAOkB,YACxC7T,KAAKuV,MAAQxC,EAAeJ,OAAOuM,OACnClf,KAAKmoB,YAAcpV,EAAeJ,OAAOqO,aACzChhB,KAAKooB,aAAerV,EAAeJ,OAAOgR,cAC1C3jB,KAAKqoB,YAActV,EAAeJ,OAAOkR,aACzC7jB,KAAKsoB,cAAgBvV,EAAeJ,OAAOqR,eAC3ChkB,KAAKuoB,YAAcxV,EAAeJ,OAAO6R,aACzCxkB,KAAKwoB,YAAczV,EAAeJ,OAAO4T,aACzCvmB,KAAKyoB,cAAgB1V,EAAeJ,OAAO8T,eAC3CzmB,KAAK2mB,cAAgB5T,EAAeJ,OAAOgU,eAC3C3mB,KAAKqf,eAAiBtM,EAAeJ,OAAO0D,eAC5CrW,KAAK0oB,aAAU5iB,EACf9F,KAAKqf,eAAe7I,cAAcX,WAAW8S,IACzC3oB,KAAK+hB,QAAQ4G,EAAO,GAE5B,CAKI9nB,aACA,OAAOb,KAAK0oB,OAChB,CACIjnB,oBACA,OAAOzB,KAAKa,QAAQgkB,cAAc,OAAOllB,UAAUgB,IAAIc,gBAC3D,CACIgB,oBACA,OAAOzC,KAAKa,QAAQgkB,cAAc,OAAOllB,UAAUgB,IAAI8B,gBAC3D,CAIImmB,gBACA,OAAO5oB,KAAK+nB,UAChB,CAOAhG,QAAQnb,GACJ,GAAK5G,KAAKa,OAGV,OAAQ+F,GACJ,KAAKlB,EAAKmG,QACN7L,KAAK2mB,cAAc5E,QAAQ/hB,KAAKa,OAAQb,KAAKgiB,OAC7C,MACJ,KAAKtc,EAAKkG,QACN5L,KAAKyoB,cAAc1G,QAAQ/hB,KAAKa,OAAQb,KAAKgiB,OAC7C,MACJ,KAAKtc,EAAK0B,MACNpH,KAAKwoB,YAAYzG,QAAQ/hB,KAAKa,OAAQb,KAAKgiB,OAC3C,MACJ,KAAKtc,EAAKb,KACN7E,KAAKmoB,YAAYpG,QAAQ/hB,KAAKa,OAAQb,KAAKgiB,OAC3C,MACJ,KAAKtc,EAAK3D,MACN/B,KAAKooB,aAAarG,QAAQ/hB,KAAKa,OAAQb,KAAKgiB,OAC5C,MACJ,KAAKtc,EAAK7D,KACN7B,KAAKqoB,YAAYtG,QAAQ/hB,KAAKa,OAAQb,KAAKgiB,OAC3C,MACJ,IAAK,QACD,IAAKhiB,KAAK6oB,SACN,MACJ7oB,KAAKuoB,YAAYxG,QAAQ/hB,KAAKa,QAC9Bb,KAAK+hB,QAAQrc,EAAK0B,OAClBpH,KAAK+hB,QAAQrc,EAAKkG,SAClB5L,KAAK+hB,QAAQrc,EAAKmG,SAClB,MACJ,IAAK,WACD7L,KAAK+hB,QAAQrc,EAAKb,MAClB7E,KAAK+hB,QAAQrc,EAAK7D,MAClB7B,KAAK+hB,QAAQrc,EAAK3D,OAClB/B,KAAKsoB,cAAcvG,QAAQ/hB,KAAKa,OAAQb,KAAKgiB,OAC7ChiB,KAAK8oB,wBACL,MACJ,IAAK,MACG9oB,KAAK6oB,UACL7oB,KAAK+hB,QAAQ,SAEb/hB,KAAK+oB,UACL/oB,KAAK+hB,QAAQ,YAG7B,CAUAC,MAAMgH,EAAOC,EAAOC,EAAUC,GAE9B,CAMA9oB,OACI,GAAmByF,MAAf9F,KAAKa,OAAqB,CAK1B,GAJAb,KAAKopB,0BACLppB,KAAKqpB,eACLrpB,KAAKspB,eACLtpB,KAAKupB,qBACAvpB,KAAK8T,aAAaJ,QAAQgF,QAAQrV,OAcnCrD,KAAK8T,aAAa6J,QAAQ9B,YAAY7b,KAAKa,YAdA,CAE3C,MAAM0X,EAAYvY,KAAK8T,aAAaJ,SAAS6E,WAAa2I,SAASsI,KAC7DhQ,EAAYxZ,KAAK8T,aAAaJ,SAASgF,SAASc,WAAa,SACnEjB,EAAUsD,YAAY7b,KAAKa,QAC3Bb,KAAKypB,YAAYzpB,KAAK8T,aAAa6J,QAAS3d,KAAKa,OAAQ,CACrD6oB,UAAW,CAAC,CAAE1d,KAAM,iBAAkB2d,SAAS,IAE/CnQ,UAA4C,QAAjC0H,SAAS0I,gBAAgBC,IAC9B,GAAGrQ,QACH,GAAGA,YACVsQ,MACP,CAIkD,SAA9C9pB,KAAK8T,aAAaJ,QAAQgF,QAAQI,UAClC9Y,KAAKqf,eAAe5I,OAAON,KAAK,CAC5B5X,EAAG,KACHkY,OAAQsK,EAAcgJ,YAG9B/pB,KAAKa,OACAwhB,iBAAiB,iBACjBtjB,SAAS4e,GAAYA,EAAQmE,iBAAiB,QAAS9hB,KAAKkoB,sBAE7DloB,KAAK6oB,UAAY7oB,KAAK8T,aAAaJ,QAAQgF,QAAQxX,aACnDlB,KAAKuoB,YAAYxG,QAAQ/hB,KAAKa,QAC9Bb,KAAKa,OAAOohB,uBAAuBtiB,UAAUgB,IAAIgC,gBAAgB,GAAG+N,MAAMgI,QAAU,OAE5F,CACA1Y,KAAKa,OAAOugB,UAAUtB,IAAIngB,UAAUgB,IAAIN,MACnCL,KAAK8T,aAAaJ,QAAQgF,QAAQrV,SACnCrD,KAAKgqB,cACL9I,SAASY,iBAAiB,QAAS9hB,KAAKgoB,sBAE5ChoB,KAAKqf,eAAe/I,aAAaH,KAAK,CAAEhI,KAAMxO,UAAUE,OAAOQ,OAC/DL,KAAK+nB,YAAa,CACtB,CACAwB,qBAEI,MAAMU,EAAYjqB,KAAK6oB,WAAa7oB,KAAK+oB,SAErCkB,GACAjqB,KAAK8T,aAAaP,YAAc,QAChCvT,KAAKqf,eAAe5I,OAAON,KAAK,CAC5B5X,EAAG,KACHkY,OAAQsK,EAAcgJ,aAIpB/pB,KAAK8T,aAAaN,0BACxBxT,KAAK8T,aAAaN,wBACdxT,KAAK8T,aAAaR,yBAErB2W,GAA4D,UAA/CjqB,KAAK8T,aAAaJ,QAAQgF,QAAQI,WAC5C9Y,KAAK6oB,WACA7oB,KAAK8T,aAAaJ,QAAQgF,QAAQxX,WAInC2lB,SAASxmB,KAAKL,KAAKyC,eAHnBokB,SAASQ,gBAAgBrnB,KAAKyC,gBAMtCokB,SAASxmB,KAAKL,KAAKyB,gBAEnBzB,KAAK+oB,UACL/oB,KAAKkqB,WAEb,CACAd,0BACI,GAAgC,GAA5BppB,KAAKuV,MAAM+J,OAAOjO,OAAtB,CAEA,GAAIrR,KAAK8T,aAAaJ,QAAQsG,aACzBha,KAAK8T,aAAaJ,QAAQ+E,YAAa,CACxC,MAAM5T,GAAO,IAAIqC,UAAWC,gBAAgBnH,KAAK8T,aAAaJ,QAAQ/L,cACtE,IAAK3H,KAAK8T,aAAaJ,QAAQ+F,YAAa,CACxC,IAAI0Q,EAAQ,EACRC,EAAY,EAIhB,IAHIpqB,KAAK8T,aAAaJ,QAAQQ,aAAac,SAASlI,SAASjI,KACzDulB,GAAa,IAETpqB,KAAKof,WAAWpS,QAAQnI,IAASslB,EAAQ,IAC7CtlB,EAAK4H,WAAW2d,EAAW1kB,EAAKb,MAChCslB,GAER,CACAnqB,KAAKuV,MAAMsK,SAAShb,EACxB,CACI7E,KAAK8T,aAAaJ,QAAQ+E,aAC1BzY,KAAKuV,MAAMsK,SAAS7f,KAAK8T,aAAaJ,QAAQ+E,YAlBxC,CAoBd,CACA4R,kBAAkB1M,EAAS9c,EAE3B6S,GACI,IAAI4W,EAEJ,GAAI9C,QAAQ+C,OAERD,EAAuB9C,QAAQ+C,QAAQC,iBAEtC,CACD,MAAMA,aAAEA,SAAuBC,OAAO,kBACtCH,EAAuBE,CAC3B,CACIF,IACAtqB,KAAK0qB,gBAAkBJ,EAAqB3M,EAAS9c,EAAQ6S,GAErE,CACAsW,cACIhqB,KAAK0qB,iBAAiBvqB,QAC1B,CAMA+pB,UAAUE,GACN,IAAKpqB,KAAKa,OACN,OAEJ,GAAIupB,EAAW,CACX,MAAMO,EAAMrb,KAAKqb,IAAI3qB,KAAK8T,aAAaR,wBAAyBhE,KAAKsb,IAAI,EAAG5qB,KAAK8T,aAAaN,wBAA0B4W,IACxH,GAAIpqB,KAAK8T,aAAaN,yBAA2BmX,EAC7C,OACJ3qB,KAAK8T,aAAaN,wBAA0BmX,CAChD,CACA3qB,KAAKa,OACAwhB,iBAAiB,IAAI1iB,UAAUgB,IAAIc,4BAA4B9B,UAAUgB,IAAIG,qBAAqBnB,UAAUgB,IAAI8B,4BAA4B9C,UAAUgB,IAAIgC,mBAC1J5D,SAASR,GAAOA,EAAEmS,MAAMgI,QAAU,SACvC,MAAMmS,EAAiB7X,EAAchT,KAAK8T,aAAaN,yBACjDsX,EAAS9qB,KAAKa,OAAOgkB,cAAc,IAAIgG,EAAe5X,aAC5D,OAAQ4X,EAAe5X,WACnB,KAAKtT,UAAUgB,IAAIe,iBACf1B,KAAKsoB,cAAcvG,QAAQ/hB,KAAKa,OAAQb,KAAKgiB,OAC7C,MACJ,KAAKriB,UAAUgB,IAAIiB,eACf5B,KAAKqoB,YAAYtG,QAAQ/hB,KAAKa,OAAQb,KAAKgiB,OAC3C,MACJ,KAAKriB,UAAUgB,IAAImB,gBACf9B,KAAKooB,aAAarG,QAAQ/hB,KAAKa,OAAQb,KAAKgiB,OAC5C,MACJ,KAAKriB,UAAUgB,IAAIqB,cACfhC,KAAKmoB,YAAYpG,QAAQ/hB,KAAKa,OAAQb,KAAKgiB,OAGnD8I,EAAOpa,MAAMgI,QAAU,OACnB1Y,KAAK8T,aAAaJ,QAAQgF,QAAQxX,aACjClB,KAAKa,OAAOwhB,iBAAiB,IAAI1iB,UAAUgB,IAAIgC,kBAAkB,GAAI+N,MAAMgI,QAAU,QAC1F1Y,KAAK8oB,wBACL9oB,KAAKqf,eAAe9I,WAAWJ,MACnC,CAMAmT,aAAa/P,GACT,GAAKvZ,KAAKa,OAAV,CAGA,GAAI0Y,EAAO,CACP,GAAIvZ,KAAK8T,aAAaJ,QAAQgF,QAAQa,QAAUA,EAC5C,OACJvZ,KAAK8T,aAAaJ,QAAQgF,QAAQa,MAAQA,CAC9C,CACAvZ,KAAKa,OAAOugB,UAAUoB,OAAO,QAAS,QACtCxiB,KAAKa,OAAOugB,UAAUtB,IAAI9f,KAAK+qB,kBACiB,SAA5C/qB,KAAK8T,aAAaJ,QAAQgF,QAAQa,MAClCiO,OACK3F,WAAWliB,UAAUgB,IAAI6C,sBACzBse,iBAAiB,UAAU,IAAM9hB,KAAKspB,iBAG3C9B,OACK3F,WAAWliB,UAAUgB,IAAI6C,sBACzBwnB,oBAAoB,UAAU,IAAMhrB,KAAKspB,gBAhBlD,CAkBJ,CACAyB,iBACI,MAAME,EAAejrB,KAAK8T,aAAaJ,QAAQgF,QAAQa,OAAS,OAC1D2R,EAAa1D,OAAO3F,YACtB2F,OAAO3F,WAAWliB,UAAUgB,IAAI6C,sBAAsB4O,QAC1D,OAAQ6Y,GACJ,IAAK,QACD,OAAOtrB,UAAUgB,IAAI2C,WACzB,IAAK,OACD,OAAO3D,UAAUgB,IAAI4C,UACzB,IAAK,OACD,OAAO2nB,EAAavrB,UAAUgB,IAAI4C,UAAY5D,UAAUgB,IAAI2C,WAExE,CACAwlB,wBACI,IAAK9oB,KAAK+oB,SACN,OACJ,MAAMoC,EAAU,IACTnrB,KAAKa,OAAOgkB,cAAc,IAAIllB,UAAUgB,IAAIc,6CAA6C2f,WAC9F3S,MAAMP,GAAMA,EAAEgE,WAAWvS,UAAUgB,IAAIc,kBAClCN,EAAUmiB,EAAUliB,GAAQpB,KAAKa,OACnCohB,uBAAuBtiB,UAAUgB,IAAIG,gBAAgB,GACrD0iB,qBAAqB,OAC1B,OAAQ2H,GACJ,KAAKxrB,UAAUgB,IAAIe,iBACfP,EAASwgB,aAAa,QAAS3hB,KAAK8T,aAAaJ,QAAQ/L,aAAaiQ,iBACtE0L,EAAS3B,aAAa,QAAS,IAC/BvgB,EAAKugB,aAAa,QAAS3hB,KAAK8T,aAAaJ,QAAQ/L,aAAa0P,aAClE,MACJ,KAAK1X,UAAUgB,IAAIiB,eACfT,EAASwgB,aAAa,QAAS3hB,KAAK8T,aAAaJ,QAAQ/L,aAAakQ,gBACtEyL,EAAS3B,aAAa,QAAS3hB,KAAK8T,aAAaJ,QAAQ/L,aAAasQ,cACtE7W,EAAKugB,aAAa,QAAS3hB,KAAK8T,aAAaJ,QAAQ/L,aAAa2P,YAClE,MACJ,KAAK3X,UAAUgB,IAAImB,gBACfX,EAASwgB,aAAa,QAAS3hB,KAAK8T,aAAaJ,QAAQ/L,aAAaoQ,cACtEuL,EAAS3B,aAAa,QAAS3hB,KAAK8T,aAAaJ,QAAQ/L,aAAayQ,YACtEhX,EAAKugB,aAAa,QAAS3hB,KAAK8T,aAAaJ,QAAQ/L,aAAa6P,UAClE,MACJ,KAAK7X,UAAUgB,IAAIqB,cACfb,EAASwgB,aAAa,QAAS3hB,KAAK8T,aAAaJ,QAAQ/L,aAAamQ,eACtEwL,EAAS3B,aAAa,QAAS3hB,KAAK8T,aAAaJ,QAAQ/L,aAAauQ,aACtE9W,EAAKugB,aAAa,QAAS3hB,KAAK8T,aAAaJ,QAAQ/L,aAAa4P,WAClE+L,EAAS3B,aAAawJ,EAASnrB,KAAK8T,aAAaL,SAAShN,OAAOzG,KAAK8T,aAAaJ,QAAQ/L,aAAamP,sBAGhHwM,EAASZ,UAAYY,EAASP,aAAaoI,EAC/C,CAMA7qB,OACSN,KAAKa,QAAWb,KAAK+nB,aAE1B/nB,KAAKa,OAAOugB,UAAUoB,OAAO7iB,UAAUgB,IAAIN,MACvCL,KAAK+nB,aACL/nB,KAAKqf,eAAe/I,aAAaH,KAAK,CAClChI,KAAMxO,UAAUE,OAAOS,KACvBuE,KAAM7E,KAAK8T,aAAaoM,MAAQ,KAAOlgB,KAAKuV,MAAMgK,YAAY5T,QAElE3L,KAAK+nB,YAAa,GAEtB7G,SAAS8J,oBAAoB,QAAShrB,KAAKgoB,qBAC/C,CAIA5C,SACI,OAAOplB,KAAK+nB,WAAa/nB,KAAKM,OAASN,KAAKK,MAChD,CAKA+qB,WACIlK,SAAS8J,oBAAoB,QAAShrB,KAAKgoB,qBACtChoB,KAAKa,SAEVb,KAAKa,OACAwhB,iBAAiB,iBACjBtjB,SAAS4e,GAAYA,EAAQqN,oBAAoB,QAAShrB,KAAKkoB,sBACpEloB,KAAKa,OAAOwqB,WAAWC,YAAYtrB,KAAKa,QACxCb,KAAK0oB,aAAU5iB,EACnB,CAKAujB,eACI,MAAMtiB,EAAWma,SAASC,cAAc,OACxCpa,EAASqa,UAAUtB,IAAIngB,UAAUgB,IAAIE,QACrC,MAAM0qB,EAAWrK,SAASC,cAAc,OACxCoK,EAASnK,UAAUtB,IAAIngB,UAAUgB,IAAIc,eACrC8pB,EAASlK,OAAOrhB,KAAKwrB,kBAAmBxrB,KAAKsoB,cAAcrH,YAAajhB,KAAKqoB,YAAYpH,YAAajhB,KAAKooB,aAAanH,YAAajhB,KAAKmoB,YAAYlH,aACtJ,MAAMwK,EAAWvK,SAASC,cAAc,OACxCsK,EAASrK,UAAUtB,IAAIngB,UAAUgB,IAAI8B,eACrCgpB,EAAS5P,YAAY7b,KAAKuoB,YAAYtH,UAAUjhB,KAAK0rB,SAASzV,KAAKjW,QACnEyrB,EAAS5P,YAAY7b,KAAKwoB,YAAYvH,aACtCwK,EAAS5P,YAAY7b,KAAKyoB,cAAcxH,aACxCwK,EAAS5P,YAAY7b,KAAK2mB,cAAc1F,aACxC,MAAMjgB,EAAUkgB,SAASC,cAAc,OASvC,GARAngB,EAAQogB,UAAUtB,IAAIngB,UAAUgB,IAAIK,SACpCA,EAAQqgB,UAAUrhB,KAAK2rB,sBACnB3rB,KAAK8T,aAAaJ,QAAQgF,QAAQrV,QAClC0D,EAASqa,UAAUtB,IAAIngB,UAAUgB,IAAI0C,QAErCrD,KAAK8T,aAAaJ,QAAQgF,QAAQxW,eAClC6E,EAASqa,UAAUtB,IAAI,iBAEvB9f,KAAK8T,aAAaJ,QAAQgF,QAAQxX,YAAclB,KAAK4rB,gBAErD,YADA5rB,KAAK6rB,uBAAuB9kB,EAAUwkB,EAAUE,EAAUzqB,GAGH,QAAvDhB,KAAK8T,aAAaJ,QAAQgF,QAAQK,kBAClChS,EAAS8U,YAAY7a,GAEzB,MAAM8qB,EAAqB,CAACC,EAAUC,EAAWrO,EAASsO,KACjDF,IAEDC,IACArO,EAAQyD,UAAUtB,IAAIngB,UAAUgB,IAAIyC,UAChC6oB,GACAtO,EAAQyD,UAAUtB,IAAIngB,UAAUgB,IAAIN,OAE5C0G,EAAS8U,YAAY8B,GAAQ,EAEjCmO,EAAmB9rB,KAAK+oB,SAAU/oB,KAAK6oB,SAAU0C,EAAyD,UAA/CvrB,KAAK8T,aAAaJ,QAAQgF,QAAQI,UAC7FgT,EAAmB9rB,KAAK6oB,SAAU7oB,KAAK+oB,SAAU0C,EAAyD,UAA/CzrB,KAAK8T,aAAaJ,QAAQgF,QAAQI,UAClC,WAAvD9Y,KAAK8T,aAAaJ,QAAQgF,QAAQK,kBAClChS,EAAS8U,YAAY7a,GAEzB,MAAMkrB,EAAQhL,SAASC,cAAc,OACrC+K,EAAM9K,UAAUtB,IAAI,SACpBoM,EAAMvK,aAAa,oBAAqB,IACxC5a,EAAS8U,YAAYqQ,GACrBlsB,KAAK0oB,QAAU3hB,CACnB,CACA8kB,uBAAuB9kB,EAAUwkB,EAAUE,EAAUzqB,GACjD+F,EAASqa,UAAUtB,IAAIngB,UAAUgB,IAAIO,YACsB,QAAvDlB,KAAK8T,aAAaJ,QAAQgF,QAAQK,kBAClChS,EAAS8U,YAAY7a,GAEzB,MAAMyiB,EAAMvC,SAASC,cAAc,OACnCsC,EAAIrC,UAAUtB,IAAI,UAClByL,EAASnK,UAAUtB,IAAI,WACvB2L,EAASrK,UAAUtB,IAAI,WACvB2D,EAAI5H,YAAY0P,GAChB9H,EAAI5H,YAAY4P,GAChB1kB,EAAS8U,YAAY4H,GACsC,WAAvDzjB,KAAK8T,aAAaJ,QAAQgF,QAAQK,kBAClChS,EAAS8U,YAAY7a,GAEzBhB,KAAK0oB,QAAU3hB,CACnB,CAII8hB,eACA,OAAQ7oB,KAAK8T,aAAaJ,QAAQgF,QAAQQ,WAAWG,QAChDrZ,KAAK8T,aAAaJ,QAAQgF,QAAQQ,WAAW9R,OAC1CpH,KAAK8T,aAAaJ,QAAQgF,QAAQQ,WAAWtN,SAC7C5L,KAAK8T,aAAaJ,QAAQgF,QAAQQ,WAAWrN,QACzD,CAIIkd,eACA,OAAQ/oB,KAAK8T,aAAaJ,QAAQgF,QAAQQ,WAAWC,WAChDnZ,KAAK8T,aAAaJ,QAAQgF,QAAQQ,WAAWrX,MAC1C7B,KAAK8T,aAAaJ,QAAQgF,QAAQQ,WAAWnX,OAC7C/B,KAAK8T,aAAaJ,QAAQgF,QAAQQ,WAAWrU,KACzD,CACI+mB,sBACA,OAAO5rB,KAAK+oB,UAAY/oB,KAAK6oB,QACjC,CAKA8C,qBACI,MAAM3qB,EAAU,GAChB,GAAIhB,KAAK8T,aAAaJ,QAAQgF,QAAQO,QAAQ7W,MAAO,CACjD,MAAMmf,EAAML,SAASC,cAAc,OACnCI,EAAII,aAAa,cAAeZ,EAAc3e,OAC9Cmf,EAAII,aAAa,QAAS3hB,KAAK8T,aAAaJ,QAAQ/L,aAAavF,OACjEmf,EAAI1F,YAAY7b,KAAK0rB,SAAS1rB,KAAK8T,aAAaJ,QAAQgF,QAAQC,MAAMvW,QACtEpB,EAAQ+U,KAAKwL,EACjB,CACA,IAAKvhB,KAAK8T,aAAaJ,QAAQgF,QAAQxX,YACnClB,KAAK+oB,UACL/oB,KAAK6oB,SAAU,CACf,IAAIsD,EAAOC,EACwC,UAA/CpsB,KAAK8T,aAAaJ,QAAQgF,QAAQI,UAClCqT,EAAQnsB,KAAK8T,aAAaJ,QAAQ/L,aAAaqQ,WAC/CoU,EAAOpsB,KAAK8T,aAAaJ,QAAQgF,QAAQC,MAAM9T,OAG/CsnB,EAAQnsB,KAAK8T,aAAaJ,QAAQ/L,aAAawQ,WAC/CiU,EAAOpsB,KAAK8T,aAAaJ,QAAQgF,QAAQC,MAAM3H,MAEnD,MAAMuQ,EAAML,SAASC,cAAc,OACnCI,EAAII,aAAa,cAAeZ,EAAcsL,cAC9C9K,EAAII,aAAa,QAASwK,GAC1B5K,EAAI1F,YAAY7b,KAAK0rB,SAASU,IAC9BprB,EAAQ+U,KAAKwL,EACjB,CACA,GAAIvhB,KAAK8T,aAAaJ,QAAQgF,QAAQO,QAAQrC,MAAO,CACjD,MAAM2K,EAAML,SAASC,cAAc,OACnCI,EAAII,aAAa,cAAeZ,EAAcnK,OAC9C2K,EAAII,aAAa,QAAS3hB,KAAK8T,aAAaJ,QAAQ/L,aAAaiP,OACjE2K,EAAI1F,YAAY7b,KAAK0rB,SAAS1rB,KAAK8T,aAAaJ,QAAQgF,QAAQC,MAAM/B,QACtE5V,EAAQ+U,KAAKwL,EACjB,CACA,GAAIvhB,KAAK8T,aAAaJ,QAAQgF,QAAQO,QAAQpC,MAAO,CACjD,MAAM0K,EAAML,SAASC,cAAc,OACnCI,EAAII,aAAa,cAAeZ,EAAclK,OAC9C0K,EAAII,aAAa,QAAS3hB,KAAK8T,aAAaJ,QAAQ/L,aAAakP,OACjE0K,EAAI1F,YAAY7b,KAAK0rB,SAAS1rB,KAAK8T,aAAaJ,QAAQgF,QAAQC,MAAM9B,QACtE7V,EAAQ+U,KAAKwL,EACjB,CACA,OAAOvgB,CACX,CAKAwqB,kBACI,MAAM1qB,EAAiBogB,SAASC,cAAc,OAC9CrgB,EAAesgB,UAAUtB,IAAIngB,UAAUgB,IAAIG,gBAC3C,MAAMK,EAAW+f,SAASC,cAAc,OACxChgB,EAASigB,UAAUtB,IAAIngB,UAAUgB,IAAIQ,UACrCA,EAASwgB,aAAa,cAAeZ,EAAc5f,UACnDA,EAAS0a,YAAY7b,KAAK0rB,SAAS1rB,KAAK8T,aAAaJ,QAAQgF,QAAQC,MAAuC,QAAjCuI,SAAS0I,gBAAgBC,IAAgB,OAAS,cAE7H,MAAMvG,EAAWpC,SAASC,cAAc,OACxCmC,EAASlC,UAAUtB,IAAIngB,UAAUgB,IAAII,QACrCuiB,EAAS3B,aAAa,cAAeZ,EAAcuL,oBACnD,MAAMlrB,EAAO8f,SAASC,cAAc,OAMpC,OALA/f,EAAKggB,UAAUtB,IAAIngB,UAAUgB,IAAIS,MACjCA,EAAKugB,aAAa,cAAeZ,EAAc3f,MAC/CA,EAAKya,YAAY7b,KAAK0rB,SAAS1rB,KAAK8T,aAAaJ,QAAQgF,QAAQC,MAAuC,QAAjCuI,SAAS0I,gBAAgBC,IAAgB,WAAa,UAE7H/oB,EAAeugB,OAAOlgB,EAAUmiB,EAAUliB,GACnCN,CACX,CAOA4qB,SAASa,GACL,GAAqD,YAAjDvsB,KAAK8T,aAAaJ,QAAQgF,QAAQC,MAAMxK,KAAoB,CAC5D,MAAMqe,EAAMtL,SAASuL,gBAAgB,6BAA8B,OAC7DL,EAAOlL,SAASuL,gBAAgB,6BAA8B,OAIpE,OAHAL,EAAKzK,aAAa,aAAc4K,GAChCH,EAAKzK,aAAa,OAAQ4K,GAC1BC,EAAI3Q,YAAYuQ,GACTI,CACX,CACA,MAAMJ,EAAOlL,SAASC,cAAc,KAEpC,OADAiL,EAAKhL,UAAUtB,OAAOyM,EAAU/P,MAAM,MAC/B4P,CACX,CAMAM,WACI,MAAMC,EAAa3sB,KAAK+nB,WACxB/nB,KAAKorB,WACDuB,GACA3sB,KAAKK,MACb,EAMJ,MAAMusB,QACF7sB,cACIC,KAAK8T,aAAef,EAAeJ,OAAOQ,cAC1CnT,KAAKuV,MAAQxC,EAAeJ,OAAOuM,OACnClf,KAAKof,WAAarM,EAAeJ,OAAOkB,YACxC7T,KAAK0Y,QAAU3F,EAAeJ,OAAOmV,SACrC9nB,KAAKqf,eAAiBtM,EAAeJ,OAAO0D,eAC5CrW,KAAKqf,eAAe5I,OAAOZ,WAAW8S,IAClC3oB,KAAK6sB,GAAGlE,EAAOpqB,EAAGoqB,EAAOlS,OAAO,GAExC,CAOAoW,GAAGtuB,EAAGkY,GACF,MAAMkM,EAAgBpkB,GAAGokB,cACzB,GAAIA,GAAevB,WAAWwB,SAASjjB,UAAUgB,IAAIU,UACjD,OACJoV,EAASA,GAAUkM,GAAe7E,SAASrH,OAC3C,MAAM8I,GAAcvf,KAAKuV,MAAMgK,YAAcvf,KAAK8T,aAAaL,UAC1D9H,MACL,OAAQ8K,GACJ,KAAKsK,EAAc3f,KACnB,KAAK2f,EAAc5f,SACfnB,KAAK8sB,mBAAmBrW,GACxB,MACJ,KAAKsK,EAAcuL,mBACftsB,KAAK0Y,QAAQwR,UAAU,GACvBlqB,KAAK0Y,QAAQoQ,wBACb,MACJ,KAAK/H,EAAc7I,YACnB,KAAK6I,EAAc3I,WACnB,KAAK2I,EAAc9I,aACfjY,KAAK+sB,yBAAyBtW,EAAQkM,GACtC,MACJ,KAAK5B,EAAca,UACf5hB,KAAKgtB,gBAAgBrK,GACrB,MACJ,KAAK5B,EAAcyF,WAAY,CAC3B,IAAIzjB,GAAQ4f,EAAc7E,QAAQ7S,MAC9BsU,EAAWnY,OAAS,IAAMpH,KAAK8T,aAAaF,eAC5C7Q,GAAQ,IACZwc,EAAWnY,MAAQrE,EACnB/C,KAAKuV,MAAMsK,SAASN,EAAYvf,KAAKuV,MAAMiK,iBAC3Cxf,KAAKitB,YAAY1uB,GACjB,KACJ,CACA,KAAKwiB,EAAc2F,aACfnH,EAAW3T,SAAW+W,EAAc7E,QAAQ7S,MAC5CjL,KAAKuV,MAAMsK,SAASN,EAAYvf,KAAKuV,MAAMiK,iBAC3Cxf,KAAKitB,YAAY1uB,GACjB,MAEJ,KAAKwiB,EAAc6F,aACfrH,EAAW1T,SAAW8W,EAAc7E,QAAQ7S,MAC5CjL,KAAKuV,MAAMsK,SAASN,EAAYvf,KAAKuV,MAAMiK,iBAC3Cxf,KAAKitB,YAAY1uB,GACjB,MAEJ,KAAKwiB,EAAc+D,eACf9kB,KAAKktB,iBAAiB3N,EAAY7Z,EAAK0B,OACvC,MACJ,KAAK2Z,EAAciE,iBACfhlB,KAAKktB,iBAAiB3N,EAAY7Z,EAAKkG,QAAS5L,KAAK8T,aAAaJ,QAAQqG,UAC1E,MACJ,KAAKgH,EAAcmE,iBACfllB,KAAKktB,iBAAiB3N,EAAY7Z,EAAKmG,SACvC,MACJ,KAAKkV,EAAcgE,eACf/kB,KAAKktB,iBAAiB3N,EAAY7Z,EAAK0B,OAAQ,GAC/C,MACJ,KAAK2Z,EAAckE,iBACfjlB,KAAKktB,iBAAiB3N,EAAY7Z,EAAKkG,SAA+C,EAAtC5L,KAAK8T,aAAaJ,QAAQqG,UAC1E,MACJ,KAAKgH,EAAcoE,iBACfnlB,KAAKktB,iBAAiB3N,EAAY7Z,EAAKmG,SAAU,GACjD,MACJ,KAAKkV,EAAc7d,eACflD,KAAKktB,iBAAiB3N,EAAY7Z,EAAK0B,MAAOpH,KAAKuV,MAAMgK,WAAWnY,OAAS,IAAM,GAAK,IACxF,MACJ,KAAK2Z,EAAcsL,aACfrsB,KAAKmtB,aAAaxK,GAClB,MACJ,KAAK5B,EAAcgJ,UACnB,KAAKhJ,EAAcmF,UACnB,KAAKnF,EAAcoF,YACnB,KAAKpF,EAAcqF,YAEVpmB,KAAK8T,aAAaJ,QAAQgF,QAAQxX,YACD,UAAlClB,KAAK8T,aAAaP,cAElBsT,SAASQ,gBAAgBrnB,KAAK0Y,QAAQjX,eAEtColB,SAASG,gBAAgBhnB,KAAK0Y,QAAQjW,gBAE1CzC,KAAKotB,0BAA0B3W,GAC/B,MACJ,KAAKsK,EAAcnK,MACf5W,KAAKuV,MAAMsK,SAAS,MACpB7f,KAAK0Y,QAAQoQ,wBACb,MACJ,KAAK/H,EAAclK,MACf7W,KAAK0Y,QAAQpY,OACb,MACJ,KAAKygB,EAAc3e,MAAO,CACtB,MAAMA,GAAQ,IAAI8E,UAAWC,gBAAgBnH,KAAK8T,aAAaJ,QAAQ/L,cACvE3H,KAAKqf,eAAe3I,eAAeP,KAAK/T,GAEpCpC,KAAKof,WAAWpS,QAAQ5K,EAAOsD,EAAKb,OACpC7E,KAAKuV,MAAMsK,SAASzd,EAAOpC,KAAKuV,MAAMiK,iBAC1C,KACJ,EAER,CACA4N,0BAA0B3W,GACtB,IAAKzW,KAAK0Y,QAAQmQ,SAGd,YAFAlpB,UAAU8D,cAAcgC,WAAW,uDAIvCzF,KAAK8T,aAAaP,YAAc,QAChCvT,KAAK0Y,QAAQ7X,OACRwhB,iBAAiB,IAAI1iB,UAAUgB,IAAI8B,uBACnC1D,SAASsuB,GAAiBA,EAAY3c,MAAMgI,QAAU,SAC3D,IAAI4U,EAAa,GACjB,OAAQ7W,GACJ,KAAKsK,EAAcgJ,UACfuD,EAAa3tB,UAAUgB,IAAIgC,eAC3B3C,KAAK0Y,QAAQqJ,QAAQ,SACrB,MACJ,KAAKhB,EAAcmF,UACfoH,EAAa3tB,UAAUgB,IAAIiC,cAC3B5C,KAAK0Y,QAAQqJ,QAAQrc,EAAK0B,OAC1B,MACJ,KAAK2Z,EAAcoF,YACfmH,EAAa3tB,UAAUgB,IAAIkC,gBAC3B7C,KAAK0Y,QAAQqJ,QAAQrc,EAAKkG,SAC1B,MACJ,KAAKmV,EAAcqF,YACfkH,EAAa3tB,UAAUgB,IAAImC,gBAC3B9C,KAAK0Y,QAAQqJ,QAAQrc,EAAKmG,SAGjC7L,KAAK0Y,QAAQ7X,OAAOohB,uBAAuBqL,GAAY,GAAI5c,MAAMgI,QAAU,MAChF,CACAoU,mBAAmBrW,GACf,MAAM7P,KAAEA,EAAIsM,KAAEA,GAASF,EAAchT,KAAK8T,aAAaN,yBACnDiD,IAAWsK,EAAc3f,KACzBpB,KAAK8T,aAAaL,SAAShH,WAAWyG,EAAMtM,GAE5C5G,KAAK8T,aAAaL,SAAShH,YAAmB,EAARyG,EAAWtM,GACrD5G,KAAKqf,eAAe9I,WAAWJ,OAC/BnW,KAAK0Y,QAAQwR,WACjB,CAKA+C,YAAY1uB,GACHyB,KAAK8T,aAAaF,cAClB5T,KAAK8T,aAAaJ,QAAQgF,QAAQQ,WAAWtN,SAC7C5L,KAAK8T,aAAaJ,QAAQgF,QAAQM,UAClChZ,KAAK8T,aAAaJ,QAAQgF,QAAQrV,OAInCrD,KAAK6sB,GAAGtuB,EAAGwiB,EAAcgJ,WAHzB/pB,KAAK0Y,QAAQpY,MAKrB,CAOA4sB,iBAAiB3N,EAAY3Y,EAAMqE,EAAQ,GACvC,MAAMsiB,EAAUhO,EAAW9S,WAAWxB,EAAOrE,GACzC5G,KAAKof,WAAWpS,QAAQugB,EAAS3mB,IACjC5G,KAAKuV,MAAMsK,SAAS0N,EAASvtB,KAAKuV,MAAMiK,gBAEhD,CACAuN,yBAAyBtW,EAAQkM,GAC7B,MAAM1X,GAAS0X,EAAc7E,QAAQ7S,MACrC,OAAQwL,GACJ,KAAKsK,EAAc7I,YACflY,KAAK8T,aAAaL,SAAS1R,MAAQkJ,EACnC,MACJ,KAAK8V,EAAc3I,WACnB,KAAK2I,EAAc9I,aACfjY,KAAK8T,aAAaL,SAAS5R,KAAOoJ,EAGtCjL,KAAK8T,aAAaN,0BAClBxT,KAAK8T,aAAaR,yBAClBtT,KAAKuV,MAAMsK,SAAS7f,KAAK8T,aAAaL,SAAUzT,KAAKuV,MAAMiK,iBACtDxf,KAAK8T,aAAaJ,QAAQgF,QAAQrV,QACnCrD,KAAK0Y,QAAQpY,QAIjBN,KAAK0Y,QAAQwR,WAAW,EAEhC,CACAiD,aAAaxK,GACLA,EAAcI,aAAa,WAC3B/iB,KAAK8T,aAAaJ,QAAQ/L,aAAaqQ,YACvC2K,EAAchB,aAAa,QAAS3hB,KAAK8T,aAAaJ,QAAQ/L,aAAawQ,YAC3EwK,EAAcmD,UAAY9lB,KAAK0Y,QAAQgT,SAAS1rB,KAAK8T,aAAaJ,QAAQgF,QAAQC,MAAM3H,MAAMwc,UAC9FxtB,KAAK0Y,QAAQoQ,wBACb9oB,KAAK8T,aAAaH,uBAGlBgP,EAAchB,aAAa,QAAS3hB,KAAK8T,aAAaJ,QAAQ/L,aAAaqQ,YAC3E2K,EAAcmD,UAAY9lB,KAAK0Y,QAAQgT,SAAS1rB,KAAK8T,aAAaJ,QAAQgF,QAAQC,MAAM9T,MAAM2oB,UAC1FxtB,KAAK0Y,QAAQmQ,WACb7oB,KAAKotB,0BAA0BrM,EAAcgJ,WAC7C/pB,KAAK0Y,QAAQqJ,QAAQ,WAG7B/hB,KAAK0Y,QAAQ7X,OACRwhB,iBAAiB,IAAI1iB,UAAUgB,IAAIc,mBAAmB9B,UAAUgB,IAAI8B,iBACpE1D,SAASsuB,GAAgBxG,SAASzB,OAAOiI,KAC9CrtB,KAAKqf,eAAe9I,WAAWJ,MACnC,CACA6W,gBAAgBrK,GACZ,MAAM1gB,EAAMjC,KAAK8T,aAAaL,SAAS9H,MACnCgX,EAAcvB,UAAUwB,SAASjjB,UAAUgB,IAAIW,MAC/CW,EAAIwK,YAAY,EAAG/G,EAAK3D,OAExB4gB,EAAcvB,UAAUwB,SAASjjB,UAAUgB,IAAIY,MAC/CU,EAAIwK,WAAW,EAAG/G,EAAK3D,OAE3BE,EAAI4C,MAAQ8d,EAAc7E,QAAQ7b,IAC9BjC,KAAK8T,aAAaJ,QAAQgC,UAC1B1V,KAAKytB,gBAAgBxrB,GAChBjC,KAAK8T,aAAaJ,QAAQiG,cAC/B3Z,KAAK0tB,gBAAgBzrB,GAGrBjC,KAAKuV,MAAMsK,SAAS5d,EAAKjC,KAAKuV,MAAMiK,iBAEnCxf,KAAK0Y,QAAQmQ,UACb7oB,KAAK8T,aAAaJ,QAAQgF,QAAQM,UAClChZ,KAAK8T,aAAaJ,QAAQgF,QAAQrV,QAClCrD,KAAK8T,aAAaJ,QAAQiG,eAC1B3Z,KAAK8T,aAAaJ,QAAQgC,WAC3B1V,KAAK0Y,QAAQpY,MAErB,CACAotB,gBAAgBzrB,GACZ,IAAIuT,EAAQxV,KAAKuV,MAAM0K,YAAYhe,EAAKyD,EAAKb,OAC9B,IAAX2Q,EACAxV,KAAKuV,MAAMsK,SAAS,KAAMrK,IAG1BA,EAAQxV,KAAKuV,MAAMiK,gBAAkB,EACJ,IAA7Bxf,KAAKuV,MAAM+J,OAAOjO,SAClBmE,EAAQ,GACZxV,KAAKuV,MAAMsK,SAAS5d,EAAKuT,GAEjC,CACAiY,gBAAgBxrB,GACZ,OAAQjC,KAAKuV,MAAM+J,OAAOjO,QACtB,KAAK,EACDrR,KAAKuV,MAAMqB,QACX,MAEJ,KAAK,EAAG,CACJ,MAAM+W,EAAQ3tB,KAAKuV,MAAM+J,OAAO,GAChC,GAAIrd,EAAI2rB,YAAcD,EAAMC,UAAW,CACnC5tB,KAAKuV,MAAMqB,QACX,KACJ,CACA,OAAI3U,EAAI6K,SAAS6gB,IACb3tB,KAAKuV,MAAMsK,SAAS5d,EAAK,QACzBjC,KAAKuV,MAAMsK,SAAS8N,EAAO,SAI3B3tB,KAAKuV,MAAMsK,SAAS5d,EAAK,EAGjC,EAEJjC,KAAKuV,MAAMsK,SAAS5d,EAAK,EAC7B,EAMJ,MAAM4rB,cACF9tB,YAAY4d,EAASjK,EAAU,CAAC,GAE5B1T,KAAK8tB,aAAe,CAAC,EACrB9tB,KAAK+tB,aAAc,EAOnB/tB,KAAKguB,kBAAqBC,IACtB,MAAMC,EAAsBD,GAAOE,OACnC,GAAID,EACA,OACJ,MAAME,EAAc,KACZpuB,KAAKuV,MAAMgK,aACXvf,KAAK8T,aAAaL,SAAWzT,KAAKuV,MAAMgK,WAAW5T,MAAK,EAE1DV,EAAQjL,KAAK8T,aAAarL,MAAMwC,MACtC,GAAIjL,KAAK8T,aAAaJ,QAAQiG,cAC1B,IACI,MAAM0U,EAAapjB,EAAMuR,MAAMxc,KAAK8T,aAAaJ,QAAQkG,wBACzD,IAAK,IAAI7P,EAAI,EAAGA,EAAIskB,EAAWhd,OAAQtH,IACnC/J,KAAKuV,MAAMqK,aAAayO,EAAWtkB,GAAIA,GAE3CqkB,GACJ,CACA,MACIrpB,QAAQC,KAAK,wFACjB,MAGAhF,KAAKuV,MAAMqK,aAAa3U,EAAO,GAC/BmjB,GACJ,EAOJpuB,KAAKsuB,kBAAoB,KACjBtuB,KAAK8T,aAAa6J,SAAStc,UAC3BrB,KAAK8T,aAAarL,OAAOpH,UAE7BrB,KAAKolB,QAAQ,EAr3FrBrS,EAAiB,IAAIP,eAw3FjBxS,KAAKqf,eAAiBtM,EAAeJ,OAAO0D,eAC5CrW,KAAK8T,aAAef,EAAeJ,OAAOQ,cAC1CnT,KAAK0Y,QAAU3F,EAAeJ,OAAOmV,SACrC9nB,KAAKuV,MAAQxC,EAAeJ,OAAOuM,OACnClf,KAAKuuB,QAAUxb,EAAeJ,OAAOia,SAChCjP,GACDhe,UAAU8D,cAAcwB,qBAE5BjF,KAAK8T,aAAa6J,QAAUA,EAC5B3d,KAAKwuB,mBAAmB9a,EAAS2E,GAAgB,GACjDrY,KAAK8T,aAAaL,SAAStM,gBAAgBnH,KAAK8T,aAAaJ,QAAQ/L,cACrE3H,KAAK8T,aAAaoM,OAAQ,EAC1BlgB,KAAKyuB,mBACLzuB,KAAK0uB,oBACD1uB,KAAK8T,aAAaJ,QAAQgF,QAAQrV,QAClCrD,KAAK0Y,QAAQrY,OACjBL,KAAKqf,eAAe/I,aAAaT,WAAWtX,IACxCyB,KAAK2uB,cAAcpwB,EAAE,IAEzByB,KAAKqf,eAAe9I,WAAWV,WAAU,KACrC7V,KAAK4uB,aAAa,IAEtB5uB,KAAKqf,eAAe3I,eAAeb,WAAWsE,IAC1Cna,KAAKyT,SAAW0G,CAAQ,GAEhC,CACI1G,eACA,OAAOzT,KAAK8T,aAAaL,QAC7B,CACIA,aAASxI,GACTjL,KAAK8T,aAAaL,SAAWxI,EAC7BjL,KAAK8T,aAAaL,SAAStM,gBAAgBnH,KAAK8T,aAAaJ,QAAQ/L,cACrE3H,KAAK0Y,QAAQqJ,QAA0C,UAAlC/hB,KAAK8T,aAAaP,YAA0B,QAAU,WAC/E,CAQAsb,cAAcnb,EAASob,GAAQ,GACvBA,EACA9uB,KAAKwuB,mBAAmB9a,EAAS2E,GAEjCrY,KAAKwuB,mBAAmB9a,EAAS1T,KAAK8T,aAAaJ,SACvD1T,KAAK8T,aAAaL,SAAStM,gBAAgBnH,KAAK8T,aAAaJ,QAAQ/L,cACrE3H,KAAK0Y,QAAQgU,UACjB,CAMAtH,SACQplB,KAAK+tB,aAET/tB,KAAK0Y,QAAQ0M,QACjB,CAMA/kB,OACQL,KAAK+tB,aAET/tB,KAAK0Y,QAAQrY,MACjB,CAMAC,OACIN,KAAK0Y,QAAQpY,MACjB,CAMAyuB,UACI/uB,KAAK+tB,aAAc,EAGnB/tB,KAAK8T,aAAarL,OAAOkZ,aAAa,WAAY,YAClD3hB,KAAK0Y,QAAQpY,MACjB,CAMA0uB,SACIhvB,KAAK+tB,aAAc,EACnB/tB,KAAK8T,aAAarL,OAAOwmB,gBAAgB,WAC7C,CAMArY,QACI5W,KAAK8T,aAAarL,MAAMwC,MAAQ,GAChCjL,KAAKuV,MAAMqB,OACf,CAQAf,UAAUqZ,EAAYC,GAKlB,IAAIC,EAHsB,iBAAfF,IACPA,EAAa,CAACA,IAOdE,EAJCtf,MAAM2K,QAAQ0U,GAICA,EAHA,CAACA,GAKjBD,EAAW7d,SAAW+d,EAAc/d,QACpC1R,UAAU8D,cAAcyB,oBAE5B,MAAMmqB,EAAc,GACpB,IAAK,IAAItlB,EAAI,EAAGA,EAAImlB,EAAW7d,OAAQtH,IAAK,CACxC,MAAMulB,EAAYJ,EAAWnlB,GAQ7B,GAPK+F,MAAM2K,QAAQza,KAAK8tB,aAAawB,MACjCtvB,KAAK8tB,aAAawB,GAAa,IAEnCtvB,KAAK8tB,aAAawB,GAAWvZ,KAAKqZ,EAAcrlB,IAChDslB,EAAYtZ,KAAK,CACbC,YAAahW,KAAKuvB,aAAatZ,KAAKjW,KAAMsvB,EAAWtvB,KAAK8tB,aAAawB,GAAWje,OAAS,KAErE,IAAtB6d,EAAW7d,OACX,OAAOge,EAAY,EAE3B,CACA,OAAOA,CACX,CAKAG,UACIxvB,KAAK0Y,QAAQpY,OAEbN,KAAK0Y,QAAQ0S,WACbprB,KAAKqf,eAAejJ,UACpBpW,KAAK8T,aAAarL,OAAOuiB,oBAAoB,SAAUhrB,KAAKguB,mBACxDhuB,KAAK8T,aAAaJ,QAAQ4E,kBAC1BtY,KAAK8T,aAAarL,OAAOuiB,oBAAoB,QAAShrB,KAAKsuB,mBAE/DtuB,KAAKyvB,SAASzE,oBAAoB,QAAShrB,KAAKsuB,mBAChDtuB,KAAK8tB,aAAe,CAAC,CACzB,CAMAloB,OAAO8pB,GACH,MAAMC,EAAQC,EAAcF,GACvBC,GAEL3vB,KAAK6uB,cAAc,CACflnB,aAAcgoB,GAEtB,CAOAhB,cAAcV,GACVA,EAAMnV,SAAW9Y,KAAK8T,aAAaP,YACnC,MAAMsc,EAAgB5B,EAAM9f,OAASxO,UAAUE,OAAOK,OACtD,GAAI2vB,EAAe,CACf,MAAMhrB,KAAEA,EAAIsb,QAAEA,EAAOC,QAAEA,GAAY6N,EACnC,GAAKppB,GAAQsb,GAAWtb,EAAKsI,OAAOgT,KAC9BC,IAAYvb,IAASsb,EACvB,OAEJngB,KAAK8vB,wBAAwB7B,GAC7BjuB,KAAK8T,aAAarL,OAAOsnB,cAEzB,IAAIC,YAAY,SAAU,CAAE7B,OAAQF,IACxC,CAKA,GAJAjuB,KAAK8T,aAAa6J,QAAQoS,cAE1B,IAAIC,YAAY/B,EAAM9f,KAAM,CAAEggB,OAAQF,KAElCzG,OAAOyI,OAAQ,CAEf,MAAM7xB,EAAIopB,OAAOyI,OACbJ,GAAiB7vB,KAAK8T,aAAarL,MACnCrK,EAAE4B,KAAK8T,aAAarL,OAAOynB,QAAQjC,GAGnC7vB,EAAE4B,KAAK8T,aAAa6J,SAASuS,QAAQjC,EAE7C,CACAjuB,KAAKmwB,SAASlC,EAClB,CACAkC,SAASlC,GAEAne,MAAM2K,QAAQza,KAAK8tB,aAAaG,EAAM9f,QAI3CnO,KAAK8tB,aAAaG,EAAM9f,MAAMpP,SAAS+W,IACnCA,EAASmY,EAAM,GAEvB,CAKAW,cACI5uB,KAAK2uB,cAAc,CACfxgB,KAAMxO,UAAUE,OAAOM,OACvBsT,SAAUzT,KAAK8T,aAAaL,SAAS9H,OAE7C,CACA4jB,aAAaa,EAAW5a,GACpBxV,KAAK8tB,aAAasC,GAAWla,OAAOV,EAAO,EAC/C,CAQAgZ,mBAAmBvP,EAAQxB,EAAS4S,GAAiB,GACjD,IAAI3S,EAAYxB,gBAAgBG,SAAS4C,GACzCvB,EAAYxB,gBAAgBuC,cAAcf,EAAWD,GACjD4S,IACA3S,EAAYxB,gBAAgBoU,eAAetwB,KAAK8T,aAAa6J,QAASD,IAC1ExB,gBAAgBqU,mBAAmB7S,GACnCA,EAAUjK,SAAWiK,EAAUjK,SAAStM,gBAAgBuW,EAAU/V,cAC7D3H,KAAK8T,aAAaL,SAAStG,OAAOuQ,EAAUjK,YAC7CzT,KAAK8T,aAAaL,SAAWiK,EAAUjK,UAMvCiK,EAAUhF,QAAQQ,WAAWrX,OAC7B7B,KAAK8T,aAAaR,wBAA0B,GAE5CoK,EAAUhF,QAAQQ,WAAWnX,QAC7B/B,KAAK8T,aAAaR,wBAA0B,GAE5CoK,EAAUhF,QAAQQ,WAAWrU,OAC7B7E,KAAK8T,aAAaR,wBAA0B,GAEhDtT,KAAK8T,aAAaN,wBAA0BlE,KAAKqb,IAAI3qB,KAAK8T,aAAaR,wBAAyBtT,KAAK8T,aAAaN,yBAE9GR,EAAchT,KAAK8T,aAAaN,yBAAyBxH,OACzD0R,EAAUhF,QAAQI,WAClB9Y,KAAK8T,aAAaN,wBAA0BlE,KAAKqb,IAAI3X,EAAciQ,WAAW/U,GAAMA,EAAElC,OAAS0R,EAAUhF,QAAQI,WAAW9Y,KAAK8T,aAAaR,0BAE9ItT,KAAK0Y,SAASkQ,WACd5oB,KAAK0Y,QAAQqJ,QAAQ,OAErBrE,EAAUhF,QAAQQ,WAAWI,wBACQxT,IAArC4X,EAAU/V,aAAa9B,UACvB6X,EAAU/V,aAAa9B,UAAY,WACOC,IAArC4X,EAAU/V,aAAa9B,YAC5B6X,EAAU/V,aAAa9B,UAAYiB,EAAe4W,EAAU/V,aAAa/B,SAE7E5F,KAAK8T,aAAaJ,QAAUgK,CAChC,CAMA+Q,mBACI,GAAyC,SAArCzuB,KAAK8T,aAAa6J,QAAQ6S,QAC1BxwB,KAAK8T,aAAarL,MAAQzI,KAAK8T,aAAa6J,YAE3C,CACD,MAAM8S,EAAQzwB,KAAK8T,aAAa6J,QAAQG,QAAQC,cAE5C/d,KAAK8T,aAAarL,MADT3C,MAAT2qB,GAA+B,WAATA,EAElBzwB,KAAK8T,aAAa6J,QAAQkH,cAAc,SAIxC7kB,KAAK8T,aAAa6J,QAAQkH,cAAc4L,EAEpD,CACKzwB,KAAK8T,aAAarL,SAElBzI,KAAK8T,aAAarL,MAAMwC,OAASjL,KAAK8T,aAAaJ,QAAQ+E,cAC5DzY,KAAK8T,aAAarL,MAAMwC,MAAQjL,KAAKuV,MAAMkK,YAAYzf,KAAK8T,aAAaJ,QAAQ+E,cACrFzY,KAAK8T,aAAarL,MAAMqZ,iBAAiB,SAAU9hB,KAAKguB,mBACpDhuB,KAAK8T,aAAaJ,QAAQ4E,kBAC1BtY,KAAK8T,aAAarL,MAAMqZ,iBAAiB,QAAS9hB,KAAKsuB,mBAEvDtuB,KAAK8T,aAAarL,MAAMwC,OACxBjL,KAAKguB,oBAEb,CAKAU,oBACI,GAAI1uB,KAAK8T,aAAaJ,QAAQgF,QAAQrV,OAClC,OACJ,IAAIotB,EAAQzwB,KAAK8T,aAAa6J,QAAQG,QAAQE,eACjC,WAATyS,IACAA,EAAQ,qCAEZzwB,KAAKyvB,QACQ3pB,MAAT2qB,EACMzwB,KAAK8T,aAAa6J,QAClB3d,KAAK8T,aAAa6J,QAAQkH,cAAc4L,GAClDzwB,KAAKyvB,QAAQ3N,iBAAiB,QAAS9hB,KAAKsuB,kBAChD,CAMAwB,wBAAwBvxB,IAGnByB,KAAK8T,aAAaJ,QAAQmG,wBACvB7Z,KAAK8T,aAAaJ,QAAQiG,eAC1B3Z,KAAK8T,aAAaJ,QAAQgF,QAAQrV,QAClCrD,KAAK8T,aAAaJ,QAAQgF,QAAQxX,aAEjClB,KAAK0Y,QAAQmQ,UAEd7oB,KAAK0Y,QAAQ7X,QACPohB,uBAAuBtiB,UAAUgB,IAAIN,MAAM,GAC5C+gB,UAAUwB,SAASjjB,UAAUgB,IAAI8B,iBAKpClE,EAAE4hB,SAAWngB,KAAK8T,aAAaJ,QAAQsG,YACxCzb,EAAE4hB,SAAW5hB,EAAEsG,MAAMsI,OAAO5O,EAAE4hB,WAGnCuQ,aAAa1wB,KAAK2wB,2BAClB3wB,KAAK2wB,0BAA4B5J,YAAW,KACpC/mB,KAAK0Y,QAAQ7X,QACbb,KAAKqf,eAAe5I,OAAON,KAAK,CAC5B5X,EAAG,CACCokB,cAAe3iB,KAAK0Y,QAAQ7X,OAAOgkB,cAAc,IAAIllB,UAAUgB,IAAII,WAEvE0V,OAAQsK,EAAcsL,cAE9B,GACDrsB,KAAK8T,aAAaJ,QAAQoG,uCACjC,EAMJ,MAAM8V,EAAgB,CAAC,EAMjBgB,EAAcC,IACZjB,EAAciB,EAAE7kB,QAEpB4jB,EAAciB,EAAE7kB,MAAQ6kB,EAAElpB,aAAY,EAOpC/B,EAAUirB,IACZ,MAAMlB,EAAQC,EAAciB,GACvBlB,IAELtX,EAAe1Q,aAAegoB,EAAK,EAQjCmB,EAAS,SAAUC,EAAQC,OAASlrB,GACtC,OAAKirB,GAEAA,EAAOE,YAERF,EAAOC,EAAQ,CAAEnD,4BAAe3O,YAAO4I,gBAAS5gB,kBAAUvH,qBAAauxB,GACvEH,EAAOE,WAAY,GAEhBC,GANIA,CAOf,EACMC,EAAU,QACVD,EAAkB,CACpBrD,4BACAiD,SACAF,aACAhrB,SACAjG,oBACA0Y,iBACAnR,kBACAxB,OACAyrB,UACAlX,yBAuDJ,MAAM9b,EApDe,CACnBizB,UAAW,KACXvD,cAAeA,cACfiD,OAAQA,EACRF,WAAYA,EACZhrB,OAAQA,EACRjG,UAAWA,UACX0Y,eAAgBA,EAChBnR,SAAUA,SACNxB,WAAU,OAAOA,CAAM,EAC3ByrB,QAASA,EACTlX,sBAAuBA,GA2CzB9b,EAAc2yB,QAxCI,CAACtmB,EAAG6mB,EAAWC,KAC7BD,EAAUnS,MAAMqS,UAAU3R,aAAe,SAAU3U,EAAOuK,GACtD,IAAI5P,EAAS5F,KAAK8T,aAAaJ,QAAQ/L,aAAa/B,OAAQa,EAASzG,KAAK8T,aAAaJ,QAAQ/L,aAAalB,OAC5G,GAAIA,EAAQ,CACR,IAAI+qB,EAAO,CACP5rB,UAEA6rB,EAAa,IAAIH,EAAUpqB,SAAS3H,EAAiB2H,SAASwqB,WAAWzmB,EAAOxE,EAAQ+qB,GAAMG,YAElG,GAAIF,GAAcA,EAAW7D,WAAc6D,EAAW7D,UAAW,CAC7D,IAAI/oB,EAAOysB,EAAUpqB,SAASkG,QAAQqkB,EAAY7rB,GAClD5F,KAAK6f,SAAShb,EAAM2Q,EACxB,MAEIzQ,QAAQ3E,MAAM,wCAEtB,MAEI2E,QAAQ3E,MAAM,kBAEtB,EACAixB,EAAUnS,MAAMqS,UAAU9R,YAAc,SAAU5a,GAC9C,IAAIe,EAAS5F,KAAK8T,aAAaJ,QAAQ/L,aAAa/B,OAAQa,EAASzG,KAAK8T,aAAaJ,QAAQ/L,aAAalB,OAC5G,GAAIA,EAAQ,CACR,IAAI+qB,EAAO,CACP5rB,SACAgsB,eAAgB,WAEpB,OAAO/sB,EAAOtF,EAAiB2H,SAAS2qB,WAAWhtB,EAAM2sB,GAAMM,SAASrrB,GAAU,EACtF,CAEI1B,QAAQ3E,MAAM,kBAEtB,CAAC;;;;;;AAeLjC,EAAc4zB,gBAAkB,SAAUf,EAAQgB,GAChD,OAAoB,IAAhBhyB,KAAKqR,OACAlT,EAAc8zB,iBAAiBjyB,KAAMgxB,EAAQgB,GAG/ChyB,KAAKkyB,MAAK,WACf/zB,EAAc8zB,iBAAiBjyB,KAAMgxB,EAAQgB,EAC/C,GACF,EAEA7zB,EAAc8zB,iBAAmB,SAAUE,EAAInB,EAAQgB,GACrD,IAAII,EAAO9yB,EAAoB,QAAE6yB,GAAIC,KAAKj0B,EAAcwB,UAAUC,SAUlE,GATsB,iBAAXoxB,IACLA,EAAS1xB,EAAoB,QAAEwxB,OAAO,CAAC,EAAG3yB,EAAcka,eAAgB2Y,IAGzEoB,IACHA,EAAO,IAAIj0B,EAAc0vB,cAAcvuB,EAAoB,QAAE6yB,GAAI,GAAInB,GACrE1xB,EAAoB,QAAE6yB,GAAIC,KAAKj0B,EAAcwB,UAAUC,QAASwyB,IAG5C,iBAAXpB,EAAqB,CAC9B,QAAqBlrB,IAAjBssB,EAAKpB,GACP,MAAM,IAAIvxB,MAAM,oBAAoBuxB,MAEtC,QAAiBlrB,IAAbksB,EACF,OAAOI,EAAKpB,KACP,CACU,SAAXA,IACFoB,EAAKC,6CAA8C,GAErD,MAAMC,EAAMF,EAAKpB,GAAQgB,GAEzB,OADAI,EAAKC,6CAA8C,EAC5CC,CACT,CACF,CACF,EAkFA,MAAMtmB,EAAO,gBACPumB,EAAqBjzB,EAAoB,QAAEkzB,GAAGxmB,GAQpD,OAPA1M,EAAoB,QAAEkzB,GAAGxmB,GAAQ7N,EAAc4zB,gBAC/CzyB,EAAoB,QAAEkzB,GAAGxmB,GAAMymB,YAAct0B,EAAc0vB,cAC3DvuB,EAAoB,QAAEkzB,GAAGxmB,GAAM0mB,WAAa,WAE1C,OADApzB,EAAoB,QAAEkzB,GAAGxmB,GAAQumB,EAC1Bp0B,EAAc4zB,eACvB,EAEO5zB,CAER,CAxrJmB,CAwrJjB8xB,OAAQ5xB"}