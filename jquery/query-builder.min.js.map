{"version":3,"sources":["../template/php2023/jquery/query-builder.js"],"names":["root","factory","define","amd","module","exports","require","jQuery","this","$","extendext","options","name","src","copy","copyIsArray","clone","target","arguments","i","length","deep","arrayMode","toLowerCase","isFunction","isArray","concat","extend","forEach","e","type","indexOf","push","isPlainObject","Array","undefined","_globals","doT","version","templateSettings","evaluate","interpolate","encode","use","useParams","defineParams","conditional","iterate","varname","strip","append","selfcontained","doNotSkipEncoded","template","compile","log","encodeHTMLSource","encodeHTMLRules","matchHTML","code","toString","replace","m","eval","startend","start","end","startencode","split","skip","resolveDefs","c","block","def","assign","value","substring","param","v","arg","text","Function","s","d","rw","__exp","RegExp","unescape","tmpl","needhtmlencode","indv","cse","sid","str","elsecase","vname","iname","_encodeHTML","console","QueryBuilder","$el","queryBuilder","settings","DEFAULTS","model","Model","status","id","generated_id","group_id","rule_id","has_optgroup","has_operator_optgroup","filters","icons","operators","templates","plugins","lang","regional","Utils","error","lang_code","allow_groups","Object","keys","tpl","attr","Math","floor","random","addClass","checkFilters","checkOperators","bindEvents","initPlugins","prototype","trigger","event","Event","_tojQueryEvent","builder","triggerHandler","slice","call","change","on","cb","off","once","one","filter","map","join","types","string","integer","double","date","time","datetime","boolean","inputs","modifiable_options","selectors","group_container","rule_container","filter_container","operator_container","value_container","error_container","condition_container","rule_header","group_header","group_actions","rule_actions","rules_list","group_condition","rule_filter","rule_operator","rule_value","add_rule","delete_rule","add_group","delete_group","OPERATORS","equal","nb_inputs","multiple","apply_to","not_equal","in","not_in","less","less_or_equal","greater","greater_or_equal","between","not_between","begins_with","not_begins_with","contains","not_contains","ends_with","not_ends_with","is_empty","is_not_empty","is_null","is_not_null","sort_filters","display_errors","allow_empty","conditions","default_condition","inputs_separator","select_placeholder","display_empty_filter","default_filter","optgroups","default_rule_flags","filter_readonly","operator_readonly","value_readonly","no_delete","default_group_flags","condition_readonly","no_add_rule","no_add_group","group","rule","filterSelect","operatorSelect","ruleValueSelect","ruleValueCheck","remove_group","remove_rule","defaults","fct","methods","tmp","plugin","getPluginOptions","property","init","rules","setRules","setRoot","definedFilters","input","operator","field","label","optgroup","values","cleanValues","iterateOptions","bind","groupSort","placeholder","placeholder_value","entry","sort","self","a","b","translate","localeCompare","definedOperators","Selectors","is","$group","closest","getModel","condition","val","$rule","getFilterById","getOperatorByType","addRule","deleteRule","addGroup","deleteGroup","drop","node","remove","refreshGroupsConditions","add","parent","index","prependTo","find","insertAfter","move","detach","update","oldValue","Rule","updateError","applyRuleFlags","updateRuleFilter","updateRuleOperator","updateRuleValue","applyGroupFlags","updateGroupCondition","data","flags","nextGroupId","parseHTML","getGroupTemplate","Group","tooltip","placement","level","isDefaultPrevented","isRoot","del","each","previousCondition","$this","prop","toggleClass","walk","nextRuleId","getRuleTemplate","createRuleFilters","$filterSelect","getRuleFilterSelect","html","createRuleOperators","$operatorContainer","empty","getOperators","$operatorSelect","getRuleOperatorSelect","default_operator","__","createRuleInput","$valueContainer","$inputs","$ruleInput","getRuleInput","trim","document","css","input_event","_updating_input","_updating_value","getRuleInputValue","plugin_config","default_value","previousFilter","previousOperator","hide","previousValue","setRuleInputValue","clearErrors","removeClass","errorMessage","fmt","eq","triggerValidationError","destroy","removeAttr","clear","removeData","reset","setOptions","opt","Node","validate","skip_empty","valid","parse","done","errors","validateValue","res","getRules","get_flags","allow_invalid","out","groupData","getGroupFlags","isEmptyObject","ruleData","getRuleFlags","parseGroupFlags","item","parseRuleFlags","validation","result","callback","_validateValue","tempValue","allow_empty_value","j","min","parseInt","getValidationMessage","max","format","test","isNaN","parseFloat","step","toPrecision","window","DateTime","fromFormat","isValid","l","doThrow","valueGetter","$value","escapeElementId","value_separator","subval","changeType","valueSetter","readonly","all","ret","key","category","translation","messages","h","getRuleValueSelect","getRuleValueCheck","value_id","size","rows","utils","args","message","err","Error","ew","parseNumber","parseDateTime","toSQLDate","convertToBool","escapeString","additionalEscape","escaped","escapeRegExp","$0","$1","$2","items","newItems","idx","lastIndexOf","splice","defineModelProperties","obj","fields","defineProperty","enumerable","get","set","apply","getPos","getNodePos","removeNode","moveAfter","moveAtBegin","moveAtEnd","insertNode","create","constructor","reverse","cbRule","cbGroup","context","stop","recursive","getStmtConfig","stmt","config","match","fn","option","setFilters","deleteOrphans","filtersIds","checkOrphans","updateBuilder","updateDisabledFilters","selectpicker","addFilter","newFilters","position","some","removeFilter","filterIds","mode","$p","description","getFilterDescription","appendTo","icon","$b","after","dir","container","title","invert","display_rules_button","invert_rules","disable_template","$h","silent_fail","operatorOpposites","conditionOpposites","AND","OR","tempOpts","no_invert","not","updateGroupNot","before","json","toUpperCase","operation","SQLParser","nodes","Op","$nor","boolean_as_integer","sqlOperators","op","sep","mod","escape","sqlRuleOperator","LIKE","IN","BETWEEN","IS","sqlStatements","question_mark","params","run","numbered","char","named","indexes","sqlRuleStatement","esc","sql","regex1","regex2","getSQL","nl","parts","ope","sqlFn","ruleExpression","groupExpression","getRulesFromSQL","query","parsed","where","curr","flatten","next","left","right","sqlrl","opVal","JSON","stringify","finalValue","searchChars","getSQLFieldID","setRulesFromSQL","matchingFilters","used_filters","applyDisabledFilters","clearDisabledFilters","unique","filterId","groups","__locale","__author","no_filter","empty_group","radio_empty","checkbox_empty","select_empty","string_empty","string_exceed_min_length","string_exceed_max_length","string_invalid_format","number_nan","number_not_integer","number_not_double","number_exceed_min","number_exceed_max","number_wrong_step","number_between_invalid","datetime_empty","datetime_invalid","datetime_exceed_min","datetime_exceed_max","datetime_between_invalid","boolean_not_valid","operator_not_multiple","NOT"],"mappings":"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","sourcesContent":["/*!\n * jQuery.extendext 1.0.0\n *\n * Copyright 2014-2019 Damien \"Mistic\" Sorel (http://www.strangeplanet.fr)\n * Licensed under MIT (http://opensource.org/licenses/MIT)\n * \n * Based on jQuery.extend by jQuery Foundation, Inc. and other contributors\n */\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define('jquery-extendext', ['jquery'], factory);\n    }\n    else if (typeof module === 'object' && module.exports) {\n        module.exports = factory(require('jquery'));\n    }\n    else {\n        factory(root.jQuery);\n    }\n}(this, function ($) {\n    \"use strict\";\n\n    $.extendext = function () {\n        var options, name, src, copy, copyIsArray, clone,\n            target = arguments[0] || {},\n            i = 1,\n            length = arguments.length,\n            deep = false,\n            arrayMode = 'default';\n\n        // Handle a deep copy situation\n        if (typeof target === \"boolean\") {\n            deep = target;\n\n            // Skip the boolean and the target\n            target = arguments[i++] || {};\n        }\n\n        // Handle array mode parameter\n        if (typeof target === \"string\") {\n            arrayMode = target.toLowerCase();\n            if (arrayMode !== 'concat' && arrayMode !== 'replace' && arrayMode !== 'extend') {\n                arrayMode = 'default';\n            }\n\n            // Skip the string param\n            target = arguments[i++] || {};\n        }\n\n        // Handle case when target is a string or something (possible in deep copy)\n        if (typeof target !== \"object\" && !$.isFunction(target)) {\n            target = {};\n        }\n\n        // Extend jQuery itself if only one argument is passed\n        if (i === length) {\n            target = this;\n            i--;\n        }\n\n        for (; i < length; i++) {\n            // Only deal with non-null/undefined values\n            if ((options = arguments[i]) !== null) {\n                // Special operations for arrays\n                if ($.isArray(options) && arrayMode !== 'default') {\n                    clone = target && $.isArray(target) ? target : [];\n\n                    switch (arrayMode) {\n                    case 'concat':\n                        target = clone.concat($.extend(deep, [], options));\n                        break;\n\n                    case 'replace':\n                        target = $.extend(deep, [], options);\n                        break;\n\n                    case 'extend':\n                        options.forEach(function (e, i) {\n                            if (typeof e === 'object') {\n                                var type = $.isArray(e) ? [] : {};\n                                clone[i] = $.extendext(deep, arrayMode, clone[i] || type, e);\n\n                            } else if (clone.indexOf(e) === -1) {\n                                clone.push(e);\n                            }\n                        });\n\n                        target = clone;\n                        break;\n                    }\n\n                } else {\n                    // Extend the base object\n                    for (name in options) {\n                        copy = options[name];\n\n                        // Prevent never-ending loop\n                        if (name === '__proto__' || target === copy) {\n                            continue;\n                        }\n\n                        // Recurse if we're merging plain objects or arrays\n                        if (deep && copy && ( $.isPlainObject(copy) ||\n                            (copyIsArray = $.isArray(copy)) )) {\n                            src = target[name];\n\n                            // Ensure proper type for the source value\n                            if ( copyIsArray && !Array.isArray( src ) ) {\n                                clone = [];\n                            } else if ( !copyIsArray && !$.isPlainObject( src ) ) {\n                                clone = {};\n                            } else {\n                                clone = src;\n                            }\n                            copyIsArray = false;\n\n                            // Never move original objects, clone them\n                            target[name] = $.extendext(deep, arrayMode, clone, copy);\n\n                            // Don't bring in undefined values\n                        } else if (copy !== undefined) {\n                            target[name] = copy;\n                        }\n                    }\n                }\n            }\n        }\n\n        // Return the modified object\n        return target;\n    };\n}));\n\n\n// doT.js\n// 2011-2014, Laura Doktorova, https://github.com/olado/doT\n// Licensed under the MIT license.\n\n(function () {\n\t\"use strict\";\n\n\tvar doT = {\n\t\tname: \"doT\",\n\t\tversion: \"1.1.1\",\n\t\ttemplateSettings: {\n\t\t\tevaluate:    /\\{\\{([\\s\\S]+?(\\}?)+)\\}\\}/g,\n\t\t\tinterpolate: /\\{\\{=([\\s\\S]+?)\\}\\}/g,\n\t\t\tencode:      /\\{\\{!([\\s\\S]+?)\\}\\}/g,\n\t\t\tuse:         /\\{\\{#([\\s\\S]+?)\\}\\}/g,\n\t\t\tuseParams:   /(^|[^\\w$])def(?:\\.|\\[[\\'\\\"])([\\w$\\.]+)(?:[\\'\\\"]\\])?\\s*\\:\\s*([\\w$\\.]+|\\\"[^\\\"]+\\\"|\\'[^\\']+\\'|\\{[^\\}]+\\})/g,\n\t\t\tdefine:      /\\{\\{##\\s*([\\w\\.$]+)\\s*(\\:|=)([\\s\\S]+?)#\\}\\}/g,\n\t\t\tdefineParams:/^\\s*([\\w$]+):([\\s\\S]+)/,\n\t\t\tconditional: /\\{\\{\\?(\\?)?\\s*([\\s\\S]*?)\\s*\\}\\}/g,\n\t\t\titerate:     /\\{\\{~\\s*(?:\\}\\}|([\\s\\S]+?)\\s*\\:\\s*([\\w$]+)\\s*(?:\\:\\s*([\\w$]+))?\\s*\\}\\})/g,\n\t\t\tvarname:\t\"it\",\n\t\t\tstrip:\t\ttrue,\n\t\t\tappend:\t\ttrue,\n\t\t\tselfcontained: false,\n\t\t\tdoNotSkipEncoded: false\n\t\t},\n\t\ttemplate: undefined, //fn, compile template\n\t\tcompile:  undefined, //fn, for express\n\t\tlog: true\n\t}, _globals;\n\n\tdoT.encodeHTMLSource = function(doNotSkipEncoded) {\n\t\tvar encodeHTMLRules = { \"&\": \"&#38;\", \"<\": \"&#60;\", \">\": \"&#62;\", '\"': \"&#34;\", \"'\": \"&#39;\", \"/\": \"&#47;\" },\n\t\t\tmatchHTML = doNotSkipEncoded ? /[&<>\"'\\/]/g : /&(?!#?\\w+;)|<|>|\"|'|\\//g;\n\t\treturn function(code) {\n\t\t\treturn code ? code.toString().replace(matchHTML, function(m) {return encodeHTMLRules[m] || m;}) : \"\";\n\t\t};\n\t};\n\n\t_globals = (function(){ return this || (0,eval)(\"this\"); }());\n\n\t/* istanbul ignore else */\n\tif (typeof module !== \"undefined\" && module.exports) {\n\t\tmodule.exports = doT;\n\t} else if (typeof define === \"function\" && define.amd) {\n\t\tdefine('doT', function(){return doT;});\n\t} else {\n\t\t_globals.doT = doT;\n\t}\n\n\tvar startend = {\n\t\tappend: { start: \"'+(\",      end: \")+'\",      startencode: \"'+encodeHTML(\" },\n\t\tsplit:  { start: \"';out+=(\", end: \");out+='\", startencode: \"';out+=encodeHTML(\" }\n\t}, skip = /$^/;\n\n\tfunction resolveDefs(c, block, def) {\n\t\treturn ((typeof block === \"string\") ? block : block.toString())\n\t\t.replace(c.define || skip, function(m, code, assign, value) {\n\t\t\tif (code.indexOf(\"def.\") === 0) {\n\t\t\t\tcode = code.substring(4);\n\t\t\t}\n\t\t\tif (!(code in def)) {\n\t\t\t\tif (assign === \":\") {\n\t\t\t\t\tif (c.defineParams) value.replace(c.defineParams, function(m, param, v) {\n\t\t\t\t\t\tdef[code] = {arg: param, text: v};\n\t\t\t\t\t});\n\t\t\t\t\tif (!(code in def)) def[code]= value;\n\t\t\t\t} else {\n\t\t\t\t\tnew Function(\"def\", \"def['\"+code+\"']=\" + value)(def);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn \"\";\n\t\t})\n\t\t.replace(c.use || skip, function(m, code) {\n\t\t\tif (c.useParams) code = code.replace(c.useParams, function(m, s, d, param) {\n\t\t\t\tif (def[d] && def[d].arg && param) {\n\t\t\t\t\tvar rw = (d+\":\"+param).replace(/'|\\\\/g, \"_\");\n\t\t\t\t\tdef.__exp = def.__exp || {};\n\t\t\t\t\tdef.__exp[rw] = def[d].text.replace(new RegExp(\"(^|[^\\\\w$])\" + def[d].arg + \"([^\\\\w$])\", \"g\"), \"$1\" + param + \"$2\");\n\t\t\t\t\treturn s + \"def.__exp['\"+rw+\"']\";\n\t\t\t\t}\n\t\t\t});\n\t\t\tvar v = new Function(\"def\", \"return \" + code)(def);\n\t\t\treturn v ? resolveDefs(c, v, def) : v;\n\t\t});\n\t}\n\n\tfunction unescape(code) {\n\t\treturn code.replace(/\\\\('|\\\\)/g, \"$1\").replace(/[\\r\\t\\n]/g, \" \");\n\t}\n\n\tdoT.template = function(tmpl, c, def) {\n\t\tc = c || doT.templateSettings;\n\t\tvar cse = c.append ? startend.append : startend.split, needhtmlencode, sid = 0, indv,\n\t\t\tstr  = (c.use || c.define) ? resolveDefs(c, tmpl, def || {}) : tmpl;\n\n\t\tstr = (\"var out='\" + (c.strip ? str.replace(/(^|\\r|\\n)\\t* +| +\\t*(\\r|\\n|$)/g,\" \")\n\t\t\t\t\t.replace(/\\r|\\n|\\t|\\/\\*[\\s\\S]*?\\*\\//g,\"\"): str)\n\t\t\t.replace(/'|\\\\/g, \"\\\\$&\")\n\t\t\t.replace(c.interpolate || skip, function(m, code) {\n\t\t\t\treturn cse.start + unescape(code) + cse.end;\n\t\t\t})\n\t\t\t.replace(c.encode || skip, function(m, code) {\n\t\t\t\tneedhtmlencode = true;\n\t\t\t\treturn cse.startencode + unescape(code) + cse.end;\n\t\t\t})\n\t\t\t.replace(c.conditional || skip, function(m, elsecase, code) {\n\t\t\t\treturn elsecase ?\n\t\t\t\t\t(code ? \"';}else if(\" + unescape(code) + \"){out+='\" : \"';}else{out+='\") :\n\t\t\t\t\t(code ? \"';if(\" + unescape(code) + \"){out+='\" : \"';}out+='\");\n\t\t\t})\n\t\t\t.replace(c.iterate || skip, function(m, iterate, vname, iname) {\n\t\t\t\tif (!iterate) return \"';} } out+='\";\n\t\t\t\tsid+=1; indv=iname || \"i\"+sid; iterate=unescape(iterate);\n\t\t\t\treturn \"';var arr\"+sid+\"=\"+iterate+\";if(arr\"+sid+\"){var \"+vname+\",\"+indv+\"=-1,l\"+sid+\"=arr\"+sid+\".length-1;while(\"+indv+\"<l\"+sid+\"){\"\n\t\t\t\t\t+vname+\"=arr\"+sid+\"[\"+indv+\"+=1];out+='\";\n\t\t\t})\n\t\t\t.replace(c.evaluate || skip, function(m, code) {\n\t\t\t\treturn \"';\" + unescape(code) + \"out+='\";\n\t\t\t})\n\t\t\t+ \"';return out;\")\n\t\t\t.replace(/\\n/g, \"\\\\n\").replace(/\\t/g, '\\\\t').replace(/\\r/g, \"\\\\r\")\n\t\t\t.replace(/(\\s|;|\\}|^|\\{)out\\+='';/g, '$1').replace(/\\+''/g, \"\");\n\t\t\t//.replace(/(\\s|;|\\}|^|\\{)out\\+=''\\+/g,'$1out+=');\n\n\t\tif (needhtmlencode) {\n\t\t\tif (!c.selfcontained && _globals && !_globals._encodeHTML) _globals._encodeHTML = doT.encodeHTMLSource(c.doNotSkipEncoded);\n\t\t\tstr = \"var encodeHTML = typeof _encodeHTML !== 'undefined' ? _encodeHTML : (\"\n\t\t\t\t+ doT.encodeHTMLSource.toString() + \"(\" + (c.doNotSkipEncoded || '') + \"));\"\n\t\t\t\t+ str;\n\t\t}\n\t\ttry {\n\t\t\treturn new Function(c.varname, str);\n\t\t} catch (e) {\n\t\t\t/* istanbul ignore else */\n\t\t\tif (typeof console !== \"undefined\") console.log(\"Could not create a template function: \" + str);\n\t\t\tthrow e;\n\t\t}\n\t};\n\n\tdoT.compile = function(tmpl, def) {\n\t\treturn doT.template(tmpl, null, def);\n\t};\n}());\n\n\n/*!\n * jQuery QueryBuilder 2.6.2\n * Copyright 2014-2022 Damien \"Mistic\" Sorel (http://www.strangeplanet.fr)\n * Licensed under MIT (https://opensource.org/licenses/MIT)\n */\n(function(root, factory) {\n    if (typeof define == 'function' && define.amd) {\n        define('query-builder', ['jquery', 'dot/doT', 'jquery-extendext'], factory);\n    }\n    else if (typeof module === 'object' && module.exports) {\n        module.exports = factory(require('jquery'), require('dot/doT'), require('jquery-extendext'));\n    }\n    else {\n        factory(root.jQuery, root.doT);\n    }\n}(this, function($, doT) {\n\"use strict\";\n\n/**\n * @typedef {object} Filter\n * @memberof QueryBuilder\n * @description See {@link http://querybuilder.js.org/index.html#filters}\n */\n\n/**\n * @typedef {object} Operator\n * @memberof QueryBuilder\n * @description See {@link http://querybuilder.js.org/index.html#operators}\n */\n\n/**\n * @param {jQuery} $el\n * @param {object} options - see {@link http://querybuilder.js.org/#options}\n * @constructor\n */\nvar QueryBuilder = function($el, options) {\n    $el[0].queryBuilder = this;\n\n    /**\n     * Element container\n     * @member {jQuery}\n     * @readonly\n     */\n    this.$el = $el;\n\n    /**\n     * Configuration object\n     * @member {object}\n     * @readonly\n     */\n    this.settings = $.extendext(true, 'replace', {}, QueryBuilder.DEFAULTS, options);\n\n    /**\n     * Internal model\n     * @member {Model}\n     * @readonly\n     */\n    this.model = new Model();\n\n    /**\n     * Internal status\n     * @member {object}\n     * @property {string} id - id of the container\n     * @property {boolean} generated_id - if the container id has been generated\n     * @property {int} group_id - current group id\n     * @property {int} rule_id - current rule id\n     * @property {boolean} has_optgroup - if filters have optgroups\n     * @property {boolean} has_operator_optgroup - if operators have optgroups\n     * @readonly\n     * @private\n     */\n    this.status = {\n        id: null,\n        generated_id: false,\n        group_id: 0,\n        rule_id: 0,\n        has_optgroup: false,\n        has_operator_optgroup: false\n    };\n\n    /**\n     * List of filters\n     * @member {QueryBuilder.Filter[]}\n     * @readonly\n     */\n    this.filters = this.settings.filters;\n\n    /**\n     * List of icons\n     * @member {object.<string, string>}\n     * @readonly\n     */\n    this.icons = this.settings.icons;\n\n    /**\n     * List of operators\n     * @member {QueryBuilder.Operator[]}\n     * @readonly\n     */\n    this.operators = this.settings.operators;\n\n    /**\n     * List of templates\n     * @member {object.<string, function>}\n     * @readonly\n     */\n    this.templates = this.settings.templates;\n\n    /**\n     * Plugins configuration\n     * @member {object.<string, object>}\n     * @readonly\n     */\n    this.plugins = this.settings.plugins;\n\n    /**\n     * Translations object\n     * @member {object}\n     * @readonly\n     */\n    this.lang = null;\n\n    // translations : english << 'lang_code' << custom\n    if (QueryBuilder.regional['en'] === undefined) {\n        Utils.error('Config', '\"i18n/en.js\" not loaded.');\n    }\n    this.lang = $.extendext(true, 'replace', {}, QueryBuilder.regional['en'], QueryBuilder.regional[this.settings.lang_code], this.settings.lang);\n\n    // \"allow_groups\" can be boolean or int\n    if (this.settings.allow_groups === false) {\n        this.settings.allow_groups = 0;\n    }\n    else if (this.settings.allow_groups === true) {\n        this.settings.allow_groups = -1;\n    }\n\n    // init templates\n    Object.keys(this.templates).forEach(function(tpl) {\n        if (!this.templates[tpl]) {\n            this.templates[tpl] = QueryBuilder.templates[tpl];\n        }\n        if (typeof this.templates[tpl] == 'string') {\n            this.templates[tpl] = doT.template(this.templates[tpl]);\n        }\n    }, this);\n\n    // ensure we have a container id\n    if (!this.$el.attr('id')) {\n        this.$el.attr('id', 'qb_' + Math.floor(Math.random() * 99999));\n        this.status.generated_id = true;\n    }\n    this.status.id = this.$el.attr('id');\n\n    // INIT\n    this.$el.addClass('query-builder');\n\n    this.filters = this.checkFilters(this.filters);\n    this.operators = this.checkOperators(this.operators);\n    this.bindEvents();\n    this.initPlugins();\n};\n\n$.extend(QueryBuilder.prototype, /** @lends QueryBuilder.prototype */ {\n    /**\n     * Triggers an event on the builder container\n     * @param {string} type\n     * @returns {$.Event}\n     */\n    trigger: function(type) {\n        var event = new $.Event(this._tojQueryEvent(type), {\n            builder: this\n        });\n\n        this.$el.triggerHandler(event, Array.prototype.slice.call(arguments, 1));\n\n        return event;\n    },\n\n    /**\n     * Triggers an event on the builder container and returns the modified value\n     * @param {string} type\n     * @param {*} value\n     * @returns {*}\n     */\n    change: function(type, value) {\n        var event = new $.Event(this._tojQueryEvent(type, true), {\n            builder: this,\n            value: value\n        });\n\n        this.$el.triggerHandler(event, Array.prototype.slice.call(arguments, 2));\n\n        return event.value;\n    },\n\n    /**\n     * Attaches an event listener on the builder container\n     * @param {string} type\n     * @param {function} cb\n     * @returns {QueryBuilder}\n     */\n    on: function(type, cb) {\n        this.$el.on(this._tojQueryEvent(type), cb);\n        return this;\n    },\n\n    /**\n     * Removes an event listener from the builder container\n     * @param {string} type\n     * @param {function} [cb]\n     * @returns {QueryBuilder}\n     */\n    off: function(type, cb) {\n        this.$el.off(this._tojQueryEvent(type), cb);\n        return this;\n    },\n\n    /**\n     * Attaches an event listener called once on the builder container\n     * @param {string} type\n     * @param {function} cb\n     * @returns {QueryBuilder}\n     */\n    once: function(type, cb) {\n        this.$el.one(this._tojQueryEvent(type), cb);\n        return this;\n    },\n\n    /**\n     * Appends `.queryBuilder` and optionally `.filter` to the events names\n     * @param {string} name\n     * @param {boolean} [filter=false]\n     * @returns {string}\n     * @private\n     */\n    _tojQueryEvent: function(name, filter) {\n        return name.split(' ').map(function(type) {\n            return type + '.queryBuilder' + (filter ? '.filter' : '');\n        }).join(' ');\n    }\n});\n\n\n/**\n * Allowed types and their internal representation\n * @type {object.<string, string>}\n * @readonly\n * @private\n */\nQueryBuilder.types = {\n    'string':   'string',\n    'integer':  'number',\n    'double':   'number',\n    'date':     'datetime',\n    'time':     'datetime',\n    'datetime': 'datetime',\n    'boolean':  'boolean'\n};\n\n/**\n * Allowed inputs\n * @type {string[]}\n * @readonly\n * @private\n */\nQueryBuilder.inputs = [\n    'text',\n    'number',\n    'textarea',\n    'radio',\n    'checkbox',\n    'select'\n];\n\n/**\n * Runtime modifiable options with `setOptions` method\n * @type {string[]}\n * @readonly\n * @private\n */\nQueryBuilder.modifiable_options = [\n    'display_errors',\n    'allow_groups',\n    'allow_empty',\n    'default_condition',\n    'default_filter'\n];\n\n/**\n * CSS selectors for common components\n * @type {object.<string, string>}\n * @readonly\n */\nQueryBuilder.selectors = {\n    group_container:      '.rules-group-container',\n    rule_container:       '.rule-container',\n    filter_container:     '.rule-filter-container',\n    operator_container:   '.rule-operator-container',\n    value_container:      '.rule-value-container',\n    error_container:      '.error-container',\n    condition_container:  '.rules-group-header .group-conditions',\n\n    rule_header:          '.rule-header',\n    group_header:         '.rules-group-header',\n    group_actions:        '.group-actions',\n    rule_actions:         '.rule-actions',\n\n    rules_list:           '.rules-group-body>.rules-list',\n\n    group_condition:      '.rules-group-header [name$=_cond]',\n    rule_filter:          '.rule-filter-container [name$=_filter]',\n    rule_operator:        '.rule-operator-container [name$=_operator]',\n    rule_value:           '.rule-value-container [name*=_value_]',\n\n    add_rule:             '[data-add=rule]',\n    delete_rule:          '[data-delete=rule]',\n    add_group:            '[data-add=group]',\n    delete_group:         '[data-delete=group]'\n};\n\n/**\n * Template strings (see template.js)\n * @type {object.<string, string>}\n * @readonly\n */\nQueryBuilder.templates = {};\n\n/**\n * Localized strings (see i18n/)\n * @type {object.<string, object>}\n * @readonly\n */\nQueryBuilder.regional = {};\n\n/**\n * Default operators\n * @type {object.<string, object>}\n * @readonly\n */\nQueryBuilder.OPERATORS = {\n    equal:            { type: 'equal',            nb_inputs: 1, multiple: false, apply_to: ['string', 'number', 'datetime', 'boolean'] },\n    not_equal:        { type: 'not_equal',        nb_inputs: 1, multiple: false, apply_to: ['string', 'number', 'datetime', 'boolean'] },\n    in:               { type: 'in',               nb_inputs: 1, multiple: true,  apply_to: ['string', 'number', 'datetime'] },\n    not_in:           { type: 'not_in',           nb_inputs: 1, multiple: true,  apply_to: ['string', 'number', 'datetime'] },\n    less:             { type: 'less',             nb_inputs: 1, multiple: false, apply_to: ['number', 'datetime'] },\n    less_or_equal:    { type: 'less_or_equal',    nb_inputs: 1, multiple: false, apply_to: ['number', 'datetime'] },\n    greater:          { type: 'greater',          nb_inputs: 1, multiple: false, apply_to: ['number', 'datetime'] },\n    greater_or_equal: { type: 'greater_or_equal', nb_inputs: 1, multiple: false, apply_to: ['number', 'datetime'] },\n    between:          { type: 'between',          nb_inputs: 2, multiple: false, apply_to: ['number', 'datetime'] },\n    not_between:      { type: 'not_between',      nb_inputs: 2, multiple: false, apply_to: ['number', 'datetime'] },\n    begins_with:      { type: 'begins_with',      nb_inputs: 1, multiple: false, apply_to: ['string'] },\n    not_begins_with:  { type: 'not_begins_with',  nb_inputs: 1, multiple: false, apply_to: ['string'] },\n    contains:         { type: 'contains',         nb_inputs: 1, multiple: false, apply_to: ['string'] },\n    not_contains:     { type: 'not_contains',     nb_inputs: 1, multiple: false, apply_to: ['string'] },\n    ends_with:        { type: 'ends_with',        nb_inputs: 1, multiple: false, apply_to: ['string'] },\n    not_ends_with:    { type: 'not_ends_with',    nb_inputs: 1, multiple: false, apply_to: ['string'] },\n    is_empty:         { type: 'is_empty',         nb_inputs: 0, multiple: false, apply_to: ['string'] },\n    is_not_empty:     { type: 'is_not_empty',     nb_inputs: 0, multiple: false, apply_to: ['string'] },\n    is_null:          { type: 'is_null',          nb_inputs: 0, multiple: false, apply_to: ['string', 'number', 'datetime', 'boolean'] },\n    is_not_null:      { type: 'is_not_null',      nb_inputs: 0, multiple: false, apply_to: ['string', 'number', 'datetime', 'boolean'] }\n};\n\n/**\n * Default configuration\n * @type {object}\n * @readonly\n */\nQueryBuilder.DEFAULTS = {\n    filters: [],\n    plugins: [],\n\n    sort_filters: false,\n    display_errors: true,\n    allow_groups: -1,\n    allow_empty: false,\n    conditions: ['AND', 'OR'],\n    default_condition: 'AND',\n    inputs_separator: ' , ',\n    select_placeholder: '------',\n    display_empty_filter: true,\n    default_filter: null,\n    optgroups: {},\n\n    default_rule_flags: {\n        filter_readonly: false,\n        operator_readonly: false,\n        value_readonly: false,\n        no_delete: false\n    },\n\n    default_group_flags: {\n        condition_readonly: false,\n        no_add_rule: false,\n        no_add_group: false,\n        no_delete: false\n    },\n\n    templates: {\n        group: null,\n        rule: null,\n        filterSelect: null,\n        operatorSelect: null,\n        ruleValueSelect: null,\n        ruleValueCheck: null\n    },\n\n    lang_code: 'en',\n    lang: {},\n\n    operators: [\n        'equal',\n        'not_equal',\n        'in',\n        'not_in',\n        'less',\n        'less_or_equal',\n        'greater',\n        'greater_or_equal',\n        'between',\n        'not_between',\n        'begins_with',\n        'not_begins_with',\n        'contains',\n        'not_contains',\n        'ends_with',\n        'not_ends_with',\n        'is_empty',\n        'is_not_empty',\n        'is_null',\n        'is_not_null'\n    ],\n\n    icons: {\n        add_group:    'fa-solid fa-circle-plus',\n        add_rule:     'fa-solid fa-plus',\n        remove_group: 'fa-solid fa-xmark',\n        remove_rule:  'fa-solid fa-xmark',\n        error:        'fa-solid fa-circle-exclamation'\n    }\n};\n\n\n/**\n * @module plugins\n */\n\n/**\n * Definition of available plugins\n * @type {object.<String, object>}\n */\nQueryBuilder.plugins = {};\n\n/**\n * Gets or extends the default configuration\n * @param {object} [options] - new configuration\n * @returns {undefined|object} nothing or configuration object (copy)\n */\nQueryBuilder.defaults = function(options) {\n    if (typeof options == 'object') {\n        $.extendext(true, 'replace', QueryBuilder.DEFAULTS, options);\n    }\n    else if (typeof options == 'string') {\n        if (typeof QueryBuilder.DEFAULTS[options] == 'object') {\n            return $.extend(true, {}, QueryBuilder.DEFAULTS[options]);\n        }\n        else {\n            return QueryBuilder.DEFAULTS[options];\n        }\n    }\n    else {\n        return $.extend(true, {}, QueryBuilder.DEFAULTS);\n    }\n};\n\n/**\n * Registers a new plugin\n * @param {string} name\n * @param {function} fct - init function\n * @param {object} [def] - default options\n */\nQueryBuilder.define = function(name, fct, def) {\n    QueryBuilder.plugins[name] = {\n        fct: fct,\n        def: def || {}\n    };\n};\n\n/**\n * Adds new methods to QueryBuilder prototype\n * @param {object.<string, function>} methods\n */\nQueryBuilder.extend = function(methods) {\n    $.extend(QueryBuilder.prototype, methods);\n};\n\n/**\n * Initializes plugins for an instance\n * @throws ConfigError\n * @private\n */\nQueryBuilder.prototype.initPlugins = function() {\n    if (!this.plugins) {\n        return;\n    }\n\n    if (Array.isArray(this.plugins)) {\n        var tmp = {};\n        this.plugins.forEach(function(plugin) {\n            tmp[plugin] = null;\n        });\n        this.plugins = tmp;\n    }\n\n    Object.keys(this.plugins).forEach(function(plugin) {\n        if (plugin in QueryBuilder.plugins) {\n            this.plugins[plugin] = $.extend(true, {},\n                QueryBuilder.plugins[plugin].def,\n                this.plugins[plugin] || {}\n            );\n\n            QueryBuilder.plugins[plugin].fct.call(this, this.plugins[plugin]);\n        }\n        else {\n            Utils.error('Config', 'Unable to find plugin \"{0}\"', plugin);\n        }\n    }, this);\n};\n\n/**\n * Returns the config of a plugin, if the plugin is not loaded, returns the default config.\n * @param {string} name\n * @param {string} [property]\n * @throws ConfigError\n * @returns {*}\n */\nQueryBuilder.prototype.getPluginOptions = function(name, property) {\n    var plugin;\n    if (this.plugins && this.plugins[name]) {\n        plugin = this.plugins[name];\n    }\n    else if (QueryBuilder.plugins[name]) {\n        plugin = QueryBuilder.plugins[name].def;\n    }\n\n    if (plugin) {\n        if (property) {\n            return plugin[property];\n        }\n        else {\n            return plugin;\n        }\n    }\n    else {\n        Utils.error('Config', 'Unable to find plugin \"{0}\"', name);\n    }\n};\n\n\n/**\n * Final initialisation of the builder\n * @param {object} [rules]\n * @fires QueryBuilder.afterInit\n * @private\n */\nQueryBuilder.prototype.init = function(rules) {\n    /**\n     * When the initilization is done, just before creating the root group\n     * @event afterInit\n     * @memberof QueryBuilder\n     */\n    this.trigger('afterInit');\n\n    if (rules) {\n        this.setRules(rules);\n        delete this.settings.rules;\n    }\n    else {\n        this.setRoot(true);\n    }\n};\n\n/**\n * Checks the configuration of each filter\n * @param {QueryBuilder.Filter[]} filters\n * @returns {QueryBuilder.Filter[]}\n * @throws ConfigError\n */\nQueryBuilder.prototype.checkFilters = function(filters) {\n    var definedFilters = [];\n\n    if (!filters || filters.length === 0) {\n        Utils.error('Config', 'Missing filters list');\n    }\n\n    filters.forEach(function(filter, i) {\n        if (!filter.id) {\n            Utils.error('Config', 'Missing filter {0} id', i);\n        }\n        if (definedFilters.indexOf(filter.id) != -1) {\n            Utils.error('Config', 'Filter \"{0}\" already defined', filter.id);\n        }\n        definedFilters.push(filter.id);\n\n        if (!filter.type) {\n            filter.type = 'string';\n        }\n        else if (!QueryBuilder.types[filter.type]) {\n            Utils.error('Config', 'Invalid type \"{0}\"', filter.type);\n        }\n\n        if (!filter.input) {\n            filter.input = QueryBuilder.types[filter.type] === 'number' ? 'number' : 'text';\n        }\n        else if (typeof filter.input != 'function' && QueryBuilder.inputs.indexOf(filter.input) == -1) {\n            Utils.error('Config', 'Invalid input \"{0}\"', filter.input);\n        }\n\n        if (filter.operators) {\n            filter.operators.forEach(function(operator) {\n                if (typeof operator != 'string') {\n                    Utils.error('Config', 'Filter operators must be global operators types (string)');\n                }\n            });\n        }\n\n        if (!filter.field) {\n            filter.field = filter.id;\n        }\n        if (!filter.label) {\n            filter.label = filter.field;\n        }\n\n        if (!filter.optgroup) {\n            filter.optgroup = null;\n        }\n        else {\n            this.status.has_optgroup = true;\n\n            // register optgroup if needed\n            if (!this.settings.optgroups[filter.optgroup]) {\n                this.settings.optgroups[filter.optgroup] = filter.optgroup;\n            }\n        }\n\n        switch (filter.input) {\n            case 'radio':\n            case 'checkbox':\n                if (!filter.values || filter.values.length < 1) {\n                    Utils.error('Config', 'Missing filter \"{0}\" values', filter.id);\n                }\n                break;\n\n            case 'select':\n                var cleanValues = [];\n                filter.has_optgroup = false;\n\n                Utils.iterateOptions(filter.values, function(value, label, optgroup) {\n                    cleanValues.push({\n                        value: value,\n                        label: label,\n                        optgroup: optgroup || null\n                    });\n\n                    if (optgroup) {\n                        filter.has_optgroup = true;\n\n                        // register optgroup if needed\n                        if (!this.settings.optgroups[optgroup]) {\n                            this.settings.optgroups[optgroup] = optgroup;\n                        }\n                    }\n                }.bind(this));\n\n                if (filter.has_optgroup) {\n                    filter.values = Utils.groupSort(cleanValues, 'optgroup');\n                }\n                else {\n                    filter.values = cleanValues;\n                }\n\n                if (filter.placeholder) {\n                    if (filter.placeholder_value === undefined) {\n                        filter.placeholder_value = -1;\n                    }\n\n                    filter.values.forEach(function(entry) {\n                        if (entry.value == filter.placeholder_value) {\n                            Utils.error('Config', 'Placeholder of filter \"{0}\" overlaps with one of its values', filter.id);\n                        }\n                    });\n                }\n                break;\n        }\n    }, this);\n\n    if (this.settings.sort_filters) {\n        if (typeof this.settings.sort_filters == 'function') {\n            filters.sort(this.settings.sort_filters);\n        }\n        else {\n            var self = this;\n            filters.sort(function(a, b) {\n                return self.translate(a.label).localeCompare(self.translate(b.label));\n            });\n        }\n    }\n\n    if (this.status.has_optgroup) {\n        filters = Utils.groupSort(filters, 'optgroup');\n    }\n\n    return filters;\n};\n\n/**\n * Checks the configuration of each operator\n * @param {QueryBuilder.Operator[]} operators\n * @returns {QueryBuilder.Operator[]}\n * @throws ConfigError\n */\nQueryBuilder.prototype.checkOperators = function(operators) {\n    var definedOperators = [];\n\n    operators.forEach(function(operator, i) {\n        if (typeof operator == 'string') {\n            if (!QueryBuilder.OPERATORS[operator]) {\n                Utils.error('Config', 'Unknown operator \"{0}\"', operator);\n            }\n\n            operators[i] = operator = $.extendext(true, 'replace', {}, QueryBuilder.OPERATORS[operator]);\n        }\n        else {\n            if (!operator.type) {\n                Utils.error('Config', 'Missing \"type\" for operator {0}', i);\n            }\n\n            if (QueryBuilder.OPERATORS[operator.type]) {\n                operators[i] = operator = $.extendext(true, 'replace', {}, QueryBuilder.OPERATORS[operator.type], operator);\n            }\n\n            if (operator.nb_inputs === undefined || operator.apply_to === undefined) {\n                Utils.error('Config', 'Missing \"nb_inputs\" and/or \"apply_to\" for operator \"{0}\"', operator.type);\n            }\n        }\n\n        if (definedOperators.indexOf(operator.type) != -1) {\n            Utils.error('Config', 'Operator \"{0}\" already defined', operator.type);\n        }\n        definedOperators.push(operator.type);\n\n        if (!operator.optgroup) {\n            operator.optgroup = null;\n        }\n        else {\n            this.status.has_operator_optgroup = true;\n\n            // register optgroup if needed\n            if (!this.settings.optgroups[operator.optgroup]) {\n                this.settings.optgroups[operator.optgroup] = operator.optgroup;\n            }\n        }\n    }, this);\n\n    if (this.status.has_operator_optgroup) {\n        operators = Utils.groupSort(operators, 'optgroup');\n    }\n\n    return operators;\n};\n\n/**\n * Adds all events listeners to the builder\n * @private\n */\nQueryBuilder.prototype.bindEvents = function() {\n    var self = this;\n    var Selectors = QueryBuilder.selectors;\n\n    // group condition change\n    this.$el.on('change.queryBuilder', Selectors.group_condition, function() {\n        if ($(this).is(':checked')) {\n            var $group = $(this).closest(Selectors.group_container);\n            self.getModel($group).condition = $(this).val();\n        }\n    });\n\n    // rule filter change\n    this.$el.on('change.queryBuilder', Selectors.rule_filter, function() {\n        var $rule = $(this).closest(Selectors.rule_container);\n        self.getModel($rule).filter = self.getFilterById($(this).val());\n    });\n\n    // rule operator change\n    this.$el.on('change.queryBuilder', Selectors.rule_operator, function() {\n        var $rule = $(this).closest(Selectors.rule_container);\n        self.getModel($rule).operator = self.getOperatorByType($(this).val());\n    });\n\n    // add rule button\n    this.$el.on('click.queryBuilder', Selectors.add_rule, function() {\n        var $group = $(this).closest(Selectors.group_container);\n        self.addRule(self.getModel($group));\n    });\n\n    // delete rule button\n    this.$el.on('click.queryBuilder', Selectors.delete_rule, function() {\n        var $rule = $(this).closest(Selectors.rule_container);\n        self.deleteRule(self.getModel($rule));\n    });\n\n    if (this.settings.allow_groups !== 0) {\n        // add group button\n        this.$el.on('click.queryBuilder', Selectors.add_group, function() {\n            var $group = $(this).closest(Selectors.group_container);\n            self.addGroup(self.getModel($group));\n        });\n\n        // delete group button\n        this.$el.on('click.queryBuilder', Selectors.delete_group, function() {\n            var $group = $(this).closest(Selectors.group_container);\n            self.deleteGroup(self.getModel($group));\n        });\n    }\n\n    // model events\n    this.model.on({\n        'drop': function(e, node) {\n            node.$el.remove();\n            self.refreshGroupsConditions();\n        },\n        'add': function(e, parent, node, index) {\n            if (index === 0) {\n                node.$el.prependTo(parent.$el.find('>' + QueryBuilder.selectors.rules_list));\n            }\n            else {\n                node.$el.insertAfter(parent.rules[index - 1].$el);\n            }\n            self.refreshGroupsConditions();\n        },\n        'move': function(e, node, group, index) {\n            node.$el.detach();\n\n            if (index === 0) {\n                node.$el.prependTo(group.$el.find('>' + QueryBuilder.selectors.rules_list));\n            }\n            else {\n                node.$el.insertAfter(group.rules[index - 1].$el);\n            }\n            self.refreshGroupsConditions();\n        },\n        'update': function(e, node, field, value, oldValue) {\n            if (node instanceof Rule) {\n                switch (field) {\n                    case 'error':\n                        self.updateError(node);\n                        break;\n\n                    case 'flags':\n                        self.applyRuleFlags(node);\n                        break;\n\n                    case 'filter':\n                        self.updateRuleFilter(node, oldValue);\n                        break;\n\n                    case 'operator':\n                        self.updateRuleOperator(node, oldValue);\n                        break;\n\n                    case 'value':\n                        self.updateRuleValue(node, oldValue);\n                        break;\n                }\n            }\n            else {\n                switch (field) {\n                    case 'error':\n                        self.updateError(node);\n                        break;\n\n                    case 'flags':\n                        self.applyGroupFlags(node);\n                        break;\n\n                    case 'condition':\n                        self.updateGroupCondition(node, oldValue);\n                        break;\n                }\n            }\n        }\n    });\n};\n\n/**\n * Creates the root group\n * @param {boolean} [addRule=true] - adds a default empty rule\n * @param {object} [data] - group custom data\n * @param {object} [flags] - flags to apply to the group\n * @returns {Group} root group\n * @fires QueryBuilder.afterAddGroup\n */\nQueryBuilder.prototype.setRoot = function(addRule, data, flags) {\n    addRule = (addRule === undefined || addRule === true);\n\n    var group_id = this.nextGroupId();\n    var $group = $($.parseHTML(this.getGroupTemplate(group_id, 1)));\n\n    this.$el.append($group);\n    this.model.root = new Group(null, $group);\n    this.model.root.model = this.model;\n\n    this.model.root.data = data;\n    this.model.root.flags = $.extend({}, this.settings.default_group_flags, flags);\n    this.model.root.condition = this.settings.default_condition;\n\n    this.trigger('afterAddGroup', this.model.root);\n\n    this.model.root.$el.find(\"[data-bs-toggle=tooltip]\").tooltip({\n        //*** container: this.$el[0], // Note: Do not put in this.$el[0] or the position of the tooltip will be affected after size change (e.g. after adding a rule)\n        trigger: \"hover\",\n        placement: \"bottom\"\n    });\n\n    if (addRule) {\n        this.addRule(this.model.root);\n    }\n\n    return this.model.root;\n};\n\n/**\n * Adds a new group\n * @param {Group} parent\n * @param {boolean} [addRule=true] - adds a default empty rule\n * @param {object} [data] - group custom data\n * @param {object} [flags] - flags to apply to the group\n * @returns {Group}\n * @fires QueryBuilder.beforeAddGroup\n * @fires QueryBuilder.afterAddGroup\n */\nQueryBuilder.prototype.addGroup = function(parent, addRule, data, flags) {\n    addRule = (addRule === undefined || addRule === true);\n\n    var level = parent.level + 1;\n\n    /**\n     * Just before adding a group, can be prevented.\n     * @event beforeAddGroup\n     * @memberof QueryBuilder\n     * @param {Group} parent\n     * @param {boolean} addRule - if an empty rule will be added in the group\n     * @param {int} level - nesting level of the group, 1 is the root group\n     */\n    var e = this.trigger('beforeAddGroup', parent, addRule, level);\n    if (e.isDefaultPrevented()) {\n        return null;\n    }\n\n    var group_id = this.nextGroupId();\n    var $group = $(this.getGroupTemplate(group_id, level));\n    var model = parent.addGroup($group);\n\n    model.data = data;\n    model.flags = $.extend({}, this.settings.default_group_flags, flags);\n    model.condition = this.settings.default_condition;\n\n    /**\n     * Just after adding a group\n     * @event afterAddGroup\n     * @memberof QueryBuilder\n     * @param {Group} group\n     */\n    this.trigger('afterAddGroup', model);\n\n    model.$el.find(\"[data-bs-toggle=tooltip]\").tooltip({\n        //*** container: this.$el[0],\n        trigger: \"hover\",\n        placement: \"bottom\"\n    });\n\n    /**\n     * After any change in the rules\n     * @event rulesChanged\n     * @memberof QueryBuilder\n     */\n    this.trigger('rulesChanged');\n\n    if (addRule) {\n        this.addRule(model);\n    }\n\n    return model;\n};\n\n/**\n * Tries to delete a group. The group is not deleted if at least one rule is flagged `no_delete`.\n * @param {Group} group\n * @returns {boolean} if the group has been deleted\n * @fires QueryBuilder.beforeDeleteGroup\n * @fires QueryBuilder.afterDeleteGroup\n */\nQueryBuilder.prototype.deleteGroup = function(group) {\n    if (group.isRoot()) {\n        return false;\n    }\n\n    /**\n     * Just before deleting a group, can be prevented\n     * @event beforeDeleteGroup\n     * @memberof QueryBuilder\n     * @param {Group} parent\n     */\n    var e = this.trigger('beforeDeleteGroup', group);\n    if (e.isDefaultPrevented()) {\n        return false;\n    }\n\n    var del = true;\n\n    group.each('reverse', function(rule) {\n        del &= this.deleteRule(rule);\n    }, function(group) {\n        del &= this.deleteGroup(group);\n    }, this);\n\n    if (del) {\n        group.drop();\n\n        /**\n         * Just after deleting a group\n         * @event afterDeleteGroup\n         * @memberof QueryBuilder\n         */\n        this.trigger('afterDeleteGroup');\n\n        this.trigger('rulesChanged');\n    }\n\n    return del;\n};\n\n/**\n * Performs actions when a group's condition changes\n * @param {Group} group\n * @param {object} previousCondition\n * @fires QueryBuilder.afterUpdateGroupCondition\n * @private\n */\nQueryBuilder.prototype.updateGroupCondition = function(group, previousCondition) {\n    group.$el.find('>' + QueryBuilder.selectors.group_condition).each(function() {\n        var $this = $(this);\n        $this.prop('checked', $this.val() === group.condition);\n        $this.parent().toggleClass('active', $this.val() === group.condition);\n    });\n\n    /**\n     * After the group condition has been modified\n     * @event afterUpdateGroupCondition\n     * @memberof QueryBuilder\n     * @param {Group} group\n     * @param {object} previousCondition\n     */\n    this.trigger('afterUpdateGroupCondition', group, previousCondition);\n\n    this.trigger('rulesChanged');\n};\n\n/**\n * Updates the visibility of conditions based on number of rules inside each group\n * @private\n */\nQueryBuilder.prototype.refreshGroupsConditions = function() {\n    (function walk(group) {\n        if (!group.flags || (group.flags && !group.flags.condition_readonly)) {\n            group.$el.find('>' + QueryBuilder.selectors.group_condition).prop('disabled', group.rules.length <= 1)\n                .parent().toggleClass('disabled', group.rules.length <= 1);\n        }\n\n        group.each(null, function(group) {\n            walk(group);\n        }, this);\n    }(this.model.root));\n};\n\n/**\n * Adds a new rule\n * @param {Group} parent\n * @param {object} [data] - rule custom data\n * @param {object} [flags] - flags to apply to the rule\n * @returns {Rule}\n * @fires QueryBuilder.beforeAddRule\n * @fires QueryBuilder.afterAddRule\n * @fires QueryBuilder.changer:getDefaultFilter\n */\nQueryBuilder.prototype.addRule = function(parent, data, flags) {\n    /**\n     * Just before adding a rule, can be prevented\n     * @event beforeAddRule\n     * @memberof QueryBuilder\n     * @param {Group} parent\n     */\n    var e = this.trigger('beforeAddRule', parent);\n    if (e.isDefaultPrevented()) {\n        return null;\n    }\n\n    var rule_id = this.nextRuleId();\n    var $rule = $($.parseHTML(this.getRuleTemplate(rule_id)));\n    var model = parent.addRule($rule);\n\n    model.data = data;\n    model.flags = $.extend({}, this.settings.default_rule_flags, flags);\n\n    /**\n     * Just after adding a rule\n     * @event afterAddRule\n     * @memberof QueryBuilder\n     * @param {Rule} rule\n     */\n    this.trigger('afterAddRule', model);\n\n    model.$el.find(\"[data-bs-toggle=tooltip]\").tooltip({\n        //*** container: this.$el[0],\n        trigger: \"hover\",\n        placement: \"bottom\"\n    });\n\n    this.trigger('rulesChanged');\n\n    this.createRuleFilters(model);\n\n    if (this.settings.default_filter || !this.settings.display_empty_filter) {\n        /**\n         * Modifies the default filter for a rule\n         * @event changer:getDefaultFilter\n         * @memberof QueryBuilder\n         * @param {QueryBuilder.Filter} filter\n         * @param {Rule} rule\n         * @returns {QueryBuilder.Filter}\n         */\n        model.filter = this.change('getDefaultFilter',\n            this.getFilterById(this.settings.default_filter || this.filters[0].id),\n            model\n        );\n    }\n\n    return model;\n};\n\n/**\n * Tries to delete a rule\n * @param {Rule} rule\n * @returns {boolean} if the rule has been deleted\n * @fires QueryBuilder.beforeDeleteRule\n * @fires QueryBuilder.afterDeleteRule\n */\nQueryBuilder.prototype.deleteRule = function(rule) {\n    if (rule.flags.no_delete) {\n        return false;\n    }\n\n    /**\n     * Just before deleting a rule, can be prevented\n     * @event beforeDeleteRule\n     * @memberof QueryBuilder\n     * @param {Rule} rule\n     */\n    var e = this.trigger('beforeDeleteRule', rule);\n    if (e.isDefaultPrevented()) {\n        return false;\n    }\n\n    rule.drop();\n\n    /**\n     * Just after deleting a rule\n     * @event afterDeleteRule\n     * @memberof QueryBuilder\n     */\n    this.trigger('afterDeleteRule');\n\n    this.trigger('rulesChanged');\n\n    return true;\n};\n\n/**\n * Creates the filters for a rule\n * @param {Rule} rule\n * @fires QueryBuilder.changer:getRuleFilters\n * @fires QueryBuilder.afterCreateRuleFilters\n * @private\n */\nQueryBuilder.prototype.createRuleFilters = function(rule) {\n    /**\n     * Modifies the list a filters available for a rule\n     * @event changer:getRuleFilters\n     * @memberof QueryBuilder\n     * @param {QueryBuilder.Filter[]} filters\n     * @param {Rule} rule\n     * @returns {QueryBuilder.Filter[]}\n     */\n    var filters = this.change('getRuleFilters', this.filters, rule);\n    var $filterSelect = $($.parseHTML(this.getRuleFilterSelect(rule, filters)));\n\n    rule.$el.find(QueryBuilder.selectors.filter_container).html($filterSelect);\n\n    /**\n     * After creating the dropdown for filters\n     * @event afterCreateRuleFilters\n     * @memberof QueryBuilder\n     * @param {Rule} rule\n     */\n    this.trigger('afterCreateRuleFilters', rule);\n\n    this.applyRuleFlags(rule);\n};\n\n/**\n * Creates the operators for a rule and init the rule operator\n * @param {Rule} rule\n * @fires QueryBuilder.afterCreateRuleOperators\n * @private\n */\nQueryBuilder.prototype.createRuleOperators = function(rule) {\n    var $operatorContainer = rule.$el.find(QueryBuilder.selectors.operator_container).empty();\n\n    if (!rule.filter) {\n        return;\n    }\n\n    var operators = this.getOperators(rule.filter);\n    var $operatorSelect = $($.parseHTML(this.getRuleOperatorSelect(rule, operators)));\n\n    $operatorContainer.html($operatorSelect);\n\n    // set the operator without triggering update event\n    if (rule.filter.default_operator) {\n        rule.__.operator = this.getOperatorByType(rule.filter.default_operator);\n    }\n    else {\n        rule.__.operator = operators[0];\n    }\n\n    rule.$el.find(QueryBuilder.selectors.rule_operator).val(rule.operator.type);\n\n    /**\n     * After creating the dropdown for operators\n     * @event afterCreateRuleOperators\n     * @memberof QueryBuilder\n     * @param {Rule} rule\n     * @param {QueryBuilder.Operator[]} operators - allowed operators for this rule\n     */\n    this.trigger('afterCreateRuleOperators', rule, operators);\n\n    this.applyRuleFlags(rule);\n};\n\n/**\n * Creates the main input for a rule\n * @param {Rule} rule\n * @fires QueryBuilder.afterCreateRuleInput\n * @private\n */\nQueryBuilder.prototype.createRuleInput = function(rule) {\n    var $valueContainer = rule.$el.find(QueryBuilder.selectors.value_container).empty();\n\n    rule.__.value = undefined;\n\n    if (!rule.filter || !rule.operator || rule.operator.nb_inputs === 0) {\n        return;\n    }\n\n    var self = this;\n    var $inputs = $();\n    var filter = rule.filter;\n\n    for (var i = 0; i < rule.operator.nb_inputs; i++) {\n        var $ruleInput = $($.parseHTML(this.getRuleInput(rule, i).trim(), document, true)); // Keep scripts //***\n        if (i > 0) $valueContainer.append(this.settings.inputs_separator);\n        $valueContainer.append($ruleInput);\n        $inputs = $inputs.add($ruleInput);\n    }\n\n    $valueContainer.css('display', '');\n\n    $inputs.on('change ' + (filter.input_event || ''), function() {\n        if (!rule._updating_input) {\n            rule._updating_value = true;\n            rule.value = self.getRuleInputValue(rule);\n            rule._updating_value = false;\n        }\n    });\n\n    if (filter.plugin) {\n        $inputs[filter.plugin](filter.plugin_config || {});\n    }\n\n    /**\n     * After creating the input for a rule and initializing optional plugin\n     * @event afterCreateRuleInput\n     * @memberof QueryBuilder\n     * @param {Rule} rule\n     */\n    this.trigger('afterCreateRuleInput', rule);\n\n    if (filter.default_value !== undefined) {\n        rule.value = filter.default_value;\n    }\n    else {\n        rule._updating_value = true;\n        rule.value = self.getRuleInputValue(rule);\n        rule._updating_value = false;\n    }\n\n    this.applyRuleFlags(rule);\n};\n\n/**\n * Performs action when a rule's filter changes\n * @param {Rule} rule\n * @param {object} previousFilter\n * @fires QueryBuilder.afterUpdateRuleFilter\n * @private\n */\nQueryBuilder.prototype.updateRuleFilter = function(rule, previousFilter) {\n    this.createRuleOperators(rule);\n    this.createRuleInput(rule);\n\n    rule.$el.find(QueryBuilder.selectors.rule_filter).val(rule.filter ? rule.filter.id : '-1');\n\n    // clear rule data if the filter changed\n    if (previousFilter && rule.filter && previousFilter.id !== rule.filter.id) {\n        rule.data = undefined;\n    }\n\n    /**\n     * After the filter has been updated and the operators and input re-created\n     * @event afterUpdateRuleFilter\n     * @memberof QueryBuilder\n     * @param {Rule} rule\n     * @param {object} previousFilter\n     */\n    this.trigger('afterUpdateRuleFilter', rule, previousFilter);\n\n    this.trigger('rulesChanged');\n};\n\n/**\n * Performs actions when a rule's operator changes\n * @param {Rule} rule\n * @param {object} previousOperator\n * @fires QueryBuilder.afterUpdateRuleOperator\n * @private\n */\nQueryBuilder.prototype.updateRuleOperator = function(rule, previousOperator) {\n    var $valueContainer = rule.$el.find(QueryBuilder.selectors.value_container);\n\n    if (!rule.operator || rule.operator.nb_inputs === 0) {\n        $valueContainer.hide();\n\n        rule.__.value = undefined;\n    }\n    else {\n        $valueContainer.css('display', '');\n\n        if ($valueContainer.is(':empty') || !previousOperator ||\n            rule.operator.nb_inputs !== previousOperator.nb_inputs ||\n            rule.operator.optgroup !== previousOperator.optgroup\n        ) {\n            this.createRuleInput(rule);\n        }\n    }\n\n    if (rule.operator) {\n        rule.$el.find(QueryBuilder.selectors.rule_operator).val(rule.operator.type);\n\n        // refresh value if the format changed for this operator\n        rule.__.value = this.getRuleInputValue(rule);\n    }\n\n    /**\n     *  After the operator has been updated and the input optionally re-created\n     * @event afterUpdateRuleOperator\n     * @memberof QueryBuilder\n     * @param {Rule} rule\n     * @param {object} previousOperator\n     */\n    this.trigger('afterUpdateRuleOperator', rule, previousOperator);\n\n    this.trigger('rulesChanged');\n};\n\n/**\n * Performs actions when rule's value changes\n * @param {Rule} rule\n * @param {object} previousValue\n * @fires QueryBuilder.afterUpdateRuleValue\n * @private\n */\nQueryBuilder.prototype.updateRuleValue = function(rule, previousValue) {\n    if (!rule._updating_value) {\n        this.setRuleInputValue(rule, rule.value);\n    }\n\n    /**\n     * After the rule value has been modified\n     * @event afterUpdateRuleValue\n     * @memberof QueryBuilder\n     * @param {Rule} rule\n     * @param {*} previousValue\n     */\n    this.trigger('afterUpdateRuleValue', rule, previousValue);\n\n    this.trigger('rulesChanged');\n};\n\n/**\n * Changes a rule's properties depending on its flags\n * @param {Rule} rule\n * @fires QueryBuilder.afterApplyRuleFlags\n * @private\n */\nQueryBuilder.prototype.applyRuleFlags = function(rule) {\n    var flags = rule.flags;\n    var Selectors = QueryBuilder.selectors;\n\n    rule.$el.find(Selectors.rule_filter).prop('disabled', flags.filter_readonly);\n    rule.$el.find(Selectors.rule_operator).prop('disabled', flags.operator_readonly);\n    rule.$el.find(Selectors.rule_value).prop('disabled', flags.value_readonly);\n\n    if (flags.no_delete) {\n        rule.$el.find(Selectors.delete_rule).remove();\n    }\n\n    /**\n     * After rule's flags has been applied\n     * @event afterApplyRuleFlags\n     * @memberof QueryBuilder\n     * @param {Rule} rule\n     */\n    this.trigger('afterApplyRuleFlags', rule);\n};\n\n/**\n * Changes group's properties depending on its flags\n * @param {Group} group\n * @fires QueryBuilder.afterApplyGroupFlags\n * @private\n */\nQueryBuilder.prototype.applyGroupFlags = function(group) {\n    var flags = group.flags;\n    var Selectors = QueryBuilder.selectors;\n\n    group.$el.find('>' + Selectors.group_condition).prop('disabled', flags.condition_readonly)\n        .parent().toggleClass('readonly', flags.condition_readonly);\n\n    if (flags.no_add_rule) {\n        group.$el.find(Selectors.add_rule).remove();\n    }\n    if (flags.no_add_group) {\n        group.$el.find(Selectors.add_group).remove();\n    }\n    if (flags.no_delete) {\n        group.$el.find(Selectors.delete_group).remove();\n    }\n\n    /**\n     * After group's flags has been applied\n     * @event afterApplyGroupFlags\n     * @memberof QueryBuilder\n     * @param {Group} group\n     */\n    this.trigger('afterApplyGroupFlags', group);\n};\n\n/**\n * Clears all errors markers\n * @param {Node} [node] default is root Group\n */\nQueryBuilder.prototype.clearErrors = function(node) {\n    node = node || this.model.root;\n\n    if (!node) {\n        return;\n    }\n\n    node.error = null;\n\n    if (node instanceof Group) {\n        node.each(function(rule) {\n            rule.error = null;\n        }, function(group) {\n            this.clearErrors(group);\n        }, this);\n    }\n};\n\n/**\n * Adds/Removes error on a Rule or Group\n * @param {Node} node\n * @fires QueryBuilder.changer:displayError\n * @private\n */\nQueryBuilder.prototype.updateError = function(node) {\n    if (this.settings.display_errors) {\n        if (node.error === null) {\n            node.$el.removeClass('has-error');\n        }\n        else {\n            var errorMessage = this.translate('errors', node.error[0]);\n            errorMessage = Utils.fmt(errorMessage, node.error.slice(1));\n\n            /**\n             * Modifies an error message before display\n             * @event changer:displayError\n             * @memberof QueryBuilder\n             * @param {string} errorMessage - the error message (translated and formatted)\n             * @param {array} error - the raw error array (error code and optional arguments)\n             * @param {Node} node\n             * @returns {string}\n             */\n            errorMessage = this.change('displayError', errorMessage, node.error, node);\n\n            node.$el.addClass('has-error'); //***\n\n            if (errorMessage)\n                node.$el.find(QueryBuilder.selectors.error_container).eq(0).html(errorMessage); //***\n        }\n    }\n};\n\n/**\n * Triggers a validation error event\n * @param {Node} node\n * @param {string|array} error\n * @param {*} value\n * @fires QueryBuilder.validationError\n * @private\n */\nQueryBuilder.prototype.triggerValidationError = function(node, error, value) {\n    if (!Array.isArray(error)) {\n        error = [error];\n    }\n\n    /**\n     * Fired when a validation error occurred, can be prevented\n     * @event validationError\n     * @memberof QueryBuilder\n     * @param {Node} node\n     * @param {string} error\n     * @param {*} value\n     */\n    var e = this.trigger('validationError', node, error, value);\n    if (!e.isDefaultPrevented()) {\n        node.error = error;\n    }\n};\n\n\n/**\n * Destroys the builder\n * @fires QueryBuilder.beforeDestroy\n */\nQueryBuilder.prototype.destroy = function() {\n    /**\n     * Before the {@link QueryBuilder#destroy} method\n     * @event beforeDestroy\n     * @memberof QueryBuilder\n     */\n    this.trigger('beforeDestroy');\n\n    if (this.status.generated_id) {\n        this.$el.removeAttr('id');\n    }\n\n    this.clear();\n    this.model = null;\n\n    this.$el\n        .off('.queryBuilder')\n        .removeClass('query-builder')\n        .removeData('queryBuilder');\n\n    delete this.$el[0].queryBuilder;\n};\n\n/**\n * Clear all rules and resets the root group\n * @fires QueryBuilder.beforeReset\n * @fires QueryBuilder.afterReset\n */\nQueryBuilder.prototype.reset = function() {\n    /**\n     * Before the {@link QueryBuilder#reset} method, can be prevented\n     * @event beforeReset\n     * @memberof QueryBuilder\n     */\n    var e = this.trigger('beforeReset');\n    if (e.isDefaultPrevented()) {\n        return;\n    }\n\n    this.status.group_id = 1;\n    this.status.rule_id = 0;\n\n    this.model.root.empty();\n\n    this.model.root.data = undefined;\n    this.model.root.flags = $.extend({}, this.settings.default_group_flags);\n    this.model.root.condition = this.settings.default_condition;\n\n    this.addRule(this.model.root);\n\n    /**\n     * After the {@link QueryBuilder#reset} method\n     * @event afterReset\n     * @memberof QueryBuilder\n     */\n    this.trigger('afterReset');\n\n    this.trigger('rulesChanged');\n};\n\n/**\n * Clears all rules and removes the root group\n * @fires QueryBuilder.beforeClear\n * @fires QueryBuilder.afterClear\n */\nQueryBuilder.prototype.clear = function() {\n    /**\n     * Before the {@link QueryBuilder#clear} method, can be prevented\n     * @event beforeClear\n     * @memberof QueryBuilder\n     */\n    var e = this.trigger('beforeClear');\n    if (e.isDefaultPrevented()) {\n        return;\n    }\n\n    this.status.group_id = 0;\n    this.status.rule_id = 0;\n\n    if (this.model.root) {\n        this.model.root.drop();\n        this.model.root = null;\n    }\n\n    /**\n     * After the {@link QueryBuilder#clear} method\n     * @event afterClear\n     * @memberof QueryBuilder\n     */\n    this.trigger('afterClear');\n\n    this.trigger('rulesChanged');\n};\n\n/**\n * Modifies the builder configuration.<br>\n * Only options defined in QueryBuilder.modifiable_options are modifiable\n * @param {object} options\n */\nQueryBuilder.prototype.setOptions = function(options) {\n    $.each(options, function(opt, value) {\n        if (QueryBuilder.modifiable_options.indexOf(opt) !== -1) {\n            this.settings[opt] = value;\n        }\n    }.bind(this));\n};\n\n/**\n * Returns the model associated to a DOM object, or the root model\n * @param {jQuery} [target]\n * @returns {Node}\n */\nQueryBuilder.prototype.getModel = function(target) {\n    if (!target) {\n        return this.model.root;\n    }\n    else if (target instanceof Node) {\n        return target;\n    }\n    else {\n        return $(target).data('queryBuilderModel');\n    }\n};\n\n/**\n * Validates the whole builder\n * @param {object} [options]\n * @param {boolean} [options.skip_empty=false] - skips validating rules that have no filter selected\n * @returns {boolean}\n * @fires QueryBuilder.changer:validate\n */\nQueryBuilder.prototype.validate = function(options) {\n    options = $.extend({\n        skip_empty: false\n    }, options);\n\n    this.clearErrors();\n\n    var self = this;\n\n    var valid = (function parse(group) {\n        var done = 0;\n        var errors = 0;\n\n        group.each(function(rule) {\n            if (!rule.filter && options.skip_empty) {\n                return;\n            }\n\n            if (!rule.filter) {\n                self.triggerValidationError(rule, 'no_filter', null);\n                errors++;\n                return;\n            }\n\n            if (!rule.operator) {\n                self.triggerValidationError(rule, 'no_operator', null);\n                errors++;\n                return;\n            }\n\n            if (rule.operator.nb_inputs !== 0) {\n                var valid = self.validateValue(rule, rule.value);\n\n                if (valid !== true) {\n                    self.triggerValidationError(rule, valid, rule.value);\n                    errors++;\n                    return;\n                }\n            }\n\n            done++;\n\n        }, function(group) {\n            var res = parse(group);\n            if (res === true) {\n                done++;\n            }\n            else if (res === false) {\n                errors++;\n            }\n        });\n\n        if (errors > 0) {\n            return false;\n        }\n        else if (done === 0 && !group.isRoot() && options.skip_empty) {\n            return null;\n        }\n        else if (done === 0 && (!self.settings.allow_empty || !group.isRoot())) {\n            self.triggerValidationError(group, 'empty_group', null);\n            return false;\n        }\n\n        return true;\n\n    }(this.model.root));\n\n    /**\n     * Modifies the result of the {@link QueryBuilder#validate} method\n     * @event changer:validate\n     * @memberof QueryBuilder\n     * @param {boolean} valid\n     * @returns {boolean}\n     */\n    return this.change('validate', valid);\n};\n\n/**\n * Gets an object representing current rules\n * @param {object} [options]\n * @param {boolean|string} [options.get_flags=false] - export flags, true: only changes from default flags or 'all'\n * @param {boolean} [options.allow_invalid=false] - returns rules even if they are invalid\n * @param {boolean} [options.skip_empty=false] - remove rules that have no filter selected\n * @returns {object}\n * @fires QueryBuilder.changer:ruleToJson\n * @fires QueryBuilder.changer:groupToJson\n * @fires QueryBuilder.changer:getRules\n */\nQueryBuilder.prototype.getRules = function(options) {\n    options = $.extend({\n        get_flags: false,\n        allow_invalid: false,\n        skip_empty: false\n    }, options);\n\n    var valid = this.validate(options);\n    if (!valid && !options.allow_invalid) {\n        return null;\n    }\n\n    var self = this;\n\n    var out = (function parse(group) {\n        var groupData = {\n            condition: group.condition,\n            rules: []\n        };\n\n        if (group.data) {\n            groupData.data = $.extendext(true, 'replace', {}, group.data);\n        }\n\n        if (options.get_flags) {\n            var flags = self.getGroupFlags(group.flags, options.get_flags === 'all');\n            if (!$.isEmptyObject(flags)) {\n                groupData.flags = flags;\n            }\n        }\n\n        group.each(function(rule) {\n            if ((!rule.filter || rule.value === undefined) && options.skip_empty) { //***\n                return;\n            }\n\n            var value = null;\n            if (!rule.operator || rule.operator.nb_inputs !== 0) {\n                value = rule.value;\n            }\n\n            var ruleData = {\n                id: rule.filter ? rule.filter.id : null,\n                field: rule.filter ? rule.filter.field : null,\n                type: rule.filter ? rule.filter.type : null,\n                input: rule.filter ? rule.filter.input : null,\n                operator: rule.operator ? rule.operator.type : null,\n                value: value\n            };\n\n            if (rule.filter && rule.filter.data || rule.data) {\n                ruleData.data = $.extendext(true, 'replace', {}, rule.filter ? rule.filter.data : {}, rule.data);\n            }\n\n            if (options.get_flags) {\n                var flags = self.getRuleFlags(rule.flags, options.get_flags === 'all');\n                if (!$.isEmptyObject(flags)) {\n                    ruleData.flags = flags;\n                }\n            }\n\n            /**\n             * Modifies the JSON generated from a Rule object\n             * @event changer:ruleToJson\n             * @memberof QueryBuilder\n             * @param {object} json\n             * @param {Rule} rule\n             * @returns {object}\n             */\n            groupData.rules.push(self.change('ruleToJson', ruleData, rule));\n\n        }, function(model) {\n            var data = parse(model);\n            if (data.rules.length !== 0 || !options.skip_empty) {\n                groupData.rules.push(data);\n            }\n        }, this);\n\n        /**\n         * Modifies the JSON generated from a Group object\n         * @event changer:groupToJson\n         * @memberof QueryBuilder\n         * @param {object} json\n         * @param {Group} group\n         * @returns {object}\n         */\n        return self.change('groupToJson', groupData, group);\n\n    }(this.model.root));\n\n    out.valid = valid;\n\n    /**\n     * Modifies the result of the {@link QueryBuilder#getRules} method\n     * @event changer:getRules\n     * @memberof QueryBuilder\n     * @param {object} json\n     * @returns {object}\n     */\n    return this.change('getRules', out);\n};\n\n/**\n * Sets rules from object\n * @param {object} data\n * @param {object} [options]\n * @param {boolean} [options.allow_invalid=false] - silent-fail if the data are invalid\n * @throws RulesError, UndefinedConditionError\n * @fires QueryBuilder.changer:setRules\n * @fires QueryBuilder.changer:jsonToRule\n * @fires QueryBuilder.changer:jsonToGroup\n * @fires QueryBuilder.afterSetRules\n */\nQueryBuilder.prototype.setRules = function(data, options) {\n    options = $.extend({\n        allow_invalid: false\n    }, options);\n\n    if (Array.isArray(data)) {\n        data = {\n            condition: this.settings.default_condition,\n            rules: data\n        };\n    }\n\n    if (!data || !data.rules || (data.rules.length === 0 && !this.settings.allow_empty)) {\n        Utils.error('RulesParse', 'Incorrect data object passed');\n    }\n\n    this.clear();\n    this.setRoot(false, data.data, this.parseGroupFlags(data));\n\n    /**\n     * Modifies data before the {@link QueryBuilder#setRules} method\n     * @event changer:setRules\n     * @memberof QueryBuilder\n     * @param {object} json\n     * @param {object} options\n     * @returns {object}\n     */\n    data = this.change('setRules', data, options);\n\n    var self = this;\n\n    (function add(data, group) {\n        if (group === null) {\n            return;\n        }\n\n        if (data.condition === undefined) {\n            data.condition = self.settings.default_condition;\n        }\n        else if (self.settings.conditions.indexOf(data.condition) == -1) {\n            Utils.error(!options.allow_invalid, 'UndefinedCondition', 'Invalid condition \"{0}\"', data.condition);\n            data.condition = self.settings.default_condition;\n        }\n\n        group.condition = data.condition;\n\n        data.rules.forEach(function(item) {\n            var model;\n\n            if (item.rules !== undefined) {\n                if (self.settings.allow_groups !== -1 && self.settings.allow_groups < group.level) {\n                    Utils.error(!options.allow_invalid, 'RulesParse', 'No more than {0} groups are allowed', self.settings.allow_groups);\n                    self.reset();\n                }\n                else {\n                    model = self.addGroup(group, false, item.data, self.parseGroupFlags(item));\n                    if (model === null) {\n                        return;\n                    }\n\n                    add(item, model);\n                }\n            }\n            else {\n                if (!item.empty) {\n                    if (item.id === undefined) {\n                        Utils.error(!options.allow_invalid, 'RulesParse', 'Missing rule field id');\n                        item.empty = true;\n                    }\n                    if (item.operator === undefined) {\n                        item.operator = 'equal';\n                    }\n                }\n\n                model = self.addRule(group, item.data, self.parseRuleFlags(item));\n                if (model === null) {\n                    return;\n                }\n\n                if (!item.empty) {\n                    model.filter = self.getFilterById(item.id, !options.allow_invalid);\n                }\n\n                if (model.filter) {\n                    model.operator = self.getOperatorByType(item.operator, !options.allow_invalid);\n\n                    if (!model.operator) {\n                        model.operator = self.getOperators(model.filter)[0];\n                    }\n                }\n\n                if (model.operator && model.operator.nb_inputs !== 0) {\n                    if (item.value !== undefined) {\n                        model.value = item.value;\n                    }\n                    else if (model.filter.default_value !== undefined) {\n                        model.value = model.filter.default_value;\n                    }\n                }\n\n                /**\n                 * Modifies the Rule object generated from the JSON\n                 * @event changer:jsonToRule\n                 * @memberof QueryBuilder\n                 * @param {Rule} rule\n                 * @param {object} json\n                 * @returns {Rule} the same rule\n                 */\n                if (self.change('jsonToRule', model, item) != model) {\n                    Utils.error('RulesParse', 'Plugin tried to change rule reference');\n                }\n            }\n        });\n\n        /**\n         * Modifies the Group object generated from the JSON\n         * @event changer:jsonToGroup\n         * @memberof QueryBuilder\n         * @param {Group} group\n         * @param {object} json\n         * @returns {Group} the same group\n         */\n        if (self.change('jsonToGroup', group, data) != group) {\n            Utils.error('RulesParse', 'Plugin tried to change group reference');\n        }\n\n    }(data, this.model.root));\n\n    /**\n     * After the {@link QueryBuilder#setRules} method\n     * @event afterSetRules\n     * @memberof QueryBuilder\n     */\n    this.trigger('afterSetRules');\n};\n\n\n/**\n * Performs value validation\n * @param {Rule} rule\n * @param {string|string[]} value\n * @returns {array|boolean} true or error array\n * @fires QueryBuilder.changer:validateValue\n */\nQueryBuilder.prototype.validateValue = function(rule, value) {\n    var validation = rule.filter.validation || {};\n    var result = true;\n\n    if (validation.callback) {\n        result = validation.callback.call(this, value, rule);\n    }\n    else {\n        result = this._validateValue(rule, value);\n    }\n\n    /**\n     * Modifies the result of the rule validation method\n     * @event changer:validateValue\n     * @memberof QueryBuilder\n     * @param {array|boolean} result - true or an error array\n     * @param {*} value\n     * @param {Rule} rule\n     * @returns {array|boolean}\n     */\n    return this.change('validateValue', result, value, rule);\n};\n\n/**\n * Default validation function\n * @param {Rule} rule\n * @param {string|string[]} value\n * @returns {array|boolean} true or error array\n * @throws ConfigError\n * @private\n */\nQueryBuilder.prototype._validateValue = function(rule, value) {\n    var filter = rule.filter;\n    var operator = rule.operator;\n    var validation = filter.validation || {};\n    var result = true;\n    var tmp, tempValue;\n\n    if (rule.operator.nb_inputs === 1) {\n        value = [value];\n    }\n\n    for (var i = 0; i < operator.nb_inputs; i++) {\n        if (!operator.multiple && Array.isArray(value[i]) && value[i].length > 1) {\n            result = ['operator_not_multiple', operator.type, this.translate('operators', operator.type)];\n            break;\n        }\n\n        switch (filter.input) {\n            case 'radio':\n                if (value[i] === undefined || value[i].length === 0) {\n                    if (!validation.allow_empty_value) {\n                        result = ['radio_empty'];\n                    }\n                    break;\n                }\n                break;\n\n            case 'checkbox':\n                if (value[i] === undefined || value[i].length === 0) {\n                    if (!validation.allow_empty_value) {\n                        result = ['checkbox_empty'];\n                    }\n                    break;\n                }\n                break;\n\n            case 'select':\n                if (value[i] === undefined || value[i].length === 0 || (filter.placeholder && value[i] == filter.placeholder_value)) {\n                    if (!validation.allow_empty_value) {\n                        result = ['select_empty'];\n                    }\n                    break;\n                }\n                break;\n\n            default:\n                tempValue = Array.isArray(value[i]) ? value[i] : [value[i]];\n\n                for (var j = 0; j < tempValue.length; j++) {\n                    switch (QueryBuilder.types[filter.type]) {\n                        case 'string':\n                            if (tempValue[j] === undefined || tempValue[j].length === 0) {\n                                if (!validation.allow_empty_value) {\n                                    result = ['string_empty'];\n                                }\n                                break;\n                            }\n                            if (validation.min !== undefined) {\n                                if (tempValue[j].length < parseInt(validation.min)) {\n                                    result = [this.getValidationMessage(validation, 'min', 'string_exceed_min_length'), validation.min];\n                                    break;\n                                }\n                            }\n                            if (validation.max !== undefined) {\n                                if (tempValue[j].length > parseInt(validation.max)) {\n                                    result = [this.getValidationMessage(validation, 'max', 'string_exceed_max_length'), validation.max];\n                                    break;\n                                }\n                            }\n                            if (validation.format) {\n                                if (typeof validation.format == 'string') {\n                                    validation.format = new RegExp(validation.format);\n                                }\n                                if (!validation.format.test(tempValue[j])) {\n                                    result = [this.getValidationMessage(validation, 'format', 'string_invalid_format'), validation.format];\n                                    break;\n                                }\n                            }\n                            break;\n\n                        case 'number':\n                            if (tempValue[j] === undefined || tempValue[j].length === 0) {\n                                if (!validation.allow_empty_value) {\n                                    result = ['number_nan'];\n                                }\n                                break;\n                            }\n                            if (isNaN(tempValue[j])) {\n                                result = ['number_nan'];\n                                break;\n                            }\n                            if (filter.type == 'integer') {\n                                if (parseInt(tempValue[j]) != tempValue[j]) {\n                                    result = ['number_not_integer'];\n                                    break;\n                                }\n                            }\n                            else {\n                                if (parseFloat(tempValue[j]) != tempValue[j]) {\n                                    result = ['number_not_double'];\n                                    break;\n                                }\n                            }\n                            if (validation.min !== undefined) {\n                                if (tempValue[j] < parseFloat(validation.min)) {\n                                    result = [this.getValidationMessage(validation, 'min', 'number_exceed_min'), validation.min];\n                                    break;\n                                }\n                            }\n                            if (validation.max !== undefined) {\n                                if (tempValue[j] > parseFloat(validation.max)) {\n                                    result = [this.getValidationMessage(validation, 'max', 'number_exceed_max'), validation.max];\n                                    break;\n                                }\n                            }\n                            if (validation.step !== undefined && validation.step !== 'any') {\n                                var v = (tempValue[j] / validation.step).toPrecision(14);\n                                if (parseInt(v) != v) {\n                                    result = [this.getValidationMessage(validation, 'step', 'number_wrong_step'), validation.step];\n                                    break;\n                                }\n                            }\n                            break;\n\n                        case 'datetime':\n                            if (tempValue[j] === undefined || tempValue[j].length === 0) {\n                                if (!validation.allow_empty_value) {\n                                    result = ['datetime_empty'];\n                                }\n                                break;\n                            }\n\n                            // we need Luxon //***\n                            if (validation.format) {\n                                if (!('luxon' in window)) {\n                                    Utils.error('MissingLibrary', 'Luxon is required for Date/Time validation.'); //***\n                                }\n\n                                var datetime = DateTime.fromFormat(tempValue[j], validation.format, validation.options); //***\n                                if (!datetime.isValid()) {\n                                    result = [this.getValidationMessage(validation, 'format', 'datetime_invalid'), validation.format];\n                                    break;\n                                }\n                                else {\n                                    if (validation.min) {\n                                        if (datetime < DateTime.fromFormat(validation.min, validation.format, validation.options)) { //***\n                                            result = [this.getValidationMessage(validation, 'min', 'datetime_exceed_min'), validation.min];\n                                            break;\n                                        }\n                                    }\n                                    if (validation.max) {\n                                        if (datetime > DateTime.fromFormat(validation.max, validation.format, validation.options)) { //***\n                                            result = [this.getValidationMessage(validation, 'max', 'datetime_exceed_max'), validation.max];\n                                            break;\n                                        }\n                                    }\n                                }\n                            }\n                            break;\n\n                        case 'boolean':\n                            if (tempValue[j] === undefined || tempValue[j].length === 0) {\n                                if (!validation.allow_empty_value) {\n                                    result = ['boolean_not_valid'];\n                                }\n                                break;\n                            }\n                            tmp = ('' + tempValue[j]).trim().toLowerCase();\n                            if (tmp !== 'true' && tmp !== 'false' &&\n                                tmp !== 't' && tmp !== 'f' && tmp !== 'y' && tmp !== 'n' && //***\n                                tmp !== '1' && tmp !== '0' && tempValue[j] !== 1 && tempValue[j] !== 0) {\n                                result = ['boolean_not_valid'];\n                                break;\n                            }\n                    }\n\n                    if (result !== true) {\n                        break;\n                    }\n                }\n        }\n\n        if (result !== true) {\n            break;\n        }\n    }\n\n    if ((rule.operator.type === 'between' || rule.operator.type === 'not_between') && value.length === 2) {\n        switch (QueryBuilder.types[filter.type]) {\n            case 'number':\n                if (value[0] > value[1]) {\n                    result = ['number_between_invalid', value[0], value[1]];\n                }\n                break;\n\n            case 'datetime':\n                // we need Luxon //***\n                if (validation.format) {\n                    if (!('luxon' in window)) {\n                        Utils.error('MissingLibrary', 'Luxon is required for Date/Time validation.'); //***\n                    }\n\n                    if (DateTime.fromFormat(value[0], validation.format, validation.options) > DateTime.fromFormat(value[1], validation.format, validation.options)) { //***\n                        result = ['datetime_between_invalid', value[0], value[1]];\n                    }\n                }\n                break;\n        }\n    }\n\n    return result;\n};\n\n/**\n * Returns an incremented group ID\n * @returns {string}\n * @private\n */\nQueryBuilder.prototype.nextGroupId = function() {\n    return this.status.id + '_group_' + (this.status.group_id++);\n};\n\n/**\n * Returns an incremented rule ID\n * @returns {string}\n * @private\n */\nQueryBuilder.prototype.nextRuleId = function() {\n    return this.status.id + '_rule_' + (this.status.rule_id++);\n};\n\n/**\n * Returns the operators for a filter\n * @param {string|object} filter - filter id or filter object\n * @returns {object[]}\n * @fires QueryBuilder.changer:getOperators\n */\nQueryBuilder.prototype.getOperators = function(filter) {\n    if (typeof filter == 'string') {\n        filter = this.getFilterById(filter);\n    }\n\n    var result = [];\n\n    for (var i = 0, l = this.operators.length; i < l; i++) {\n        // filter operators check\n        if (filter.operators) {\n            if (filter.operators.indexOf(this.operators[i].type) == -1) {\n                continue;\n            }\n        }\n        // type check\n        else if (this.operators[i].apply_to.indexOf(QueryBuilder.types[filter.type]) == -1) {\n            continue;\n        }\n\n        result.push(this.operators[i]);\n    }\n\n    // keep sort order defined for the filter\n    if (filter.operators) {\n        result.sort(function(a, b) {\n            return filter.operators.indexOf(a.type) - filter.operators.indexOf(b.type);\n        });\n    }\n\n    /**\n     * Modifies the operators available for a filter\n     * @event changer:getOperators\n     * @memberof QueryBuilder\n     * @param {QueryBuilder.Operator[]} operators\n     * @param {QueryBuilder.Filter} filter\n     * @returns {QueryBuilder.Operator[]}\n     */\n    return this.change('getOperators', result, filter);\n};\n\n/**\n * Returns a particular filter by its id\n * @param {string} id\n * @param {boolean} [doThrow=true]\n * @returns {object|null}\n * @throws UndefinedFilterError\n */\nQueryBuilder.prototype.getFilterById = function(id, doThrow) {\n    if (id == '-1') {\n        return null;\n    }\n\n    for (var i = 0, l = this.filters.length; i < l; i++) {\n        if (this.filters[i].id == id) {\n            return this.filters[i];\n        }\n    }\n\n    Utils.error(doThrow !== false, 'UndefinedFilter', 'Undefined filter \"{0}\"', id);\n\n    return null;\n};\n\n/**\n * Returns a particular operator by its type\n * @param {string} type\n * @param {boolean} [doThrow=true]\n * @returns {object|null}\n * @throws UndefinedOperatorError\n */\nQueryBuilder.prototype.getOperatorByType = function(type, doThrow) {\n    if (type == '-1') {\n        return null;\n    }\n\n    for (var i = 0, l = this.operators.length; i < l; i++) {\n        if (this.operators[i].type == type) {\n            return this.operators[i];\n        }\n    }\n\n    Utils.error(doThrow !== false, 'UndefinedOperator', 'Undefined operator \"{0}\"', type);\n\n    return null;\n};\n\n/**\n * Returns rule's current input value\n * @param {Rule} rule\n * @returns {*}\n * @fires QueryBuilder.changer:getRuleValue\n * @private\n */\nQueryBuilder.prototype.getRuleInputValue = function(rule) {\n    var filter = rule.filter;\n    var operator = rule.operator;\n    var value = [];\n\n    if (filter.valueGetter) {\n        value = filter.valueGetter.call(this, rule);\n    }\n    else {\n        var $value = rule.$el.find(QueryBuilder.selectors.value_container);\n\n        for (var i = 0; i < operator.nb_inputs; i++) {\n            var name = Utils.escapeElementId(rule.id + '_value_' + i);\n            var tmp;\n\n            switch (filter.input) {\n                case 'radio':\n                    value.push($value.find('[name=' + name + ']:checked').val());\n                    break;\n\n                case 'checkbox':\n                    tmp = [];\n                    // jshint loopfunc:true\n                    $value.find('[name=' + name + ']:checked').each(function() {\n                        tmp.push($(this).val());\n                    });\n                    // jshint loopfunc:false\n                    value.push(tmp);\n                    break;\n\n                case 'select':\n                    if (filter.multiple) {\n                        tmp = [];\n                        // jshint loopfunc:true\n                        $value.find('[name=' + name + '] option:selected').each(function() {\n                            tmp.push($(this).val());\n                        });\n                        // jshint loopfunc:false\n                        value.push(tmp);\n                    }\n                    else {\n                        value.push($value.find('[name=' + name + '] option:selected').val());\n                    }\n                    break;\n\n                default:\n                    value.push($value.find('[name=' + name + ']').val());\n            }\n        }\n\n        value = value.map(function(val) {\n            if (operator.multiple && filter.value_separator && typeof val == 'string') {\n                val = val.split(filter.value_separator);\n            }\n\n            if (Array.isArray(val)) {\n                return val.map(function(subval) {\n                    return Utils.changeType(subval, filter); //***\n                });\n            }\n            else {\n                return Utils.changeType(val, filter); //***\n            }\n        });\n\n        if (operator.nb_inputs === 1) {\n            value = value[0];\n        }\n\n        // @deprecated\n        // if (filter.valueParser) {\n        //     value = filter.valueParser.call(this, rule, value);\n        // }\n    }\n\n    /**\n     * Modifies the rule's value grabbed from the DOM\n     * @event changer:getRuleValue\n     * @memberof QueryBuilder\n     * @param {*} value\n     * @param {Rule} rule\n     * @returns {*}\n     */\n    return this.change('getRuleValue', value, rule);\n};\n\n/**\n * Sets the value of a rule's input\n * @param {Rule} rule\n * @param {*} value\n * @private\n */\nQueryBuilder.prototype.setRuleInputValue = function(rule, value) {\n    var filter = rule.filter;\n    var operator = rule.operator;\n\n    if (!filter || !operator) {\n        return;\n    }\n\n    rule._updating_input = true;\n\n    if (filter.valueSetter) {\n        filter.valueSetter.call(this, rule, value);\n    }\n    else {\n        var $value = rule.$el.find(QueryBuilder.selectors.value_container);\n\n        if (operator.nb_inputs == 1) {\n            value = [value];\n        }\n\n        for (var i = 0; i < operator.nb_inputs; i++) {\n            var name = Utils.escapeElementId(rule.id + '_value_' + i);\n\n            switch (filter.input) {\n                case 'radio':\n                    $value.find('[name=' + name + '][value=\"' + value[i] + '\"]').prop('checked', true).trigger('change');\n                    break;\n\n                case 'checkbox':\n                    if (!Array.isArray(value[i])) {\n                        value[i] = [value[i]];\n                    }\n                    // jshint loopfunc:true\n                    value[i].forEach(function(value) {\n                        $value.find('[name=' + name + '][value=\"' + value + '\"]').prop('checked', true).trigger('change');\n                    });\n                    // jshint loopfunc:false\n                    break;\n\n                default:\n                    if (operator.multiple && filter.value_separator && Array.isArray(value[i])) {\n                        value[i] = value[i].join(filter.value_separator);\n                    }\n                    $value.find('[name=' + name + ']').val(value[i]).trigger('change');\n                    break;\n            }\n        }\n    }\n\n    rule._updating_input = false;\n};\n\n/**\n * Parses rule flags\n * @param {object} rule\n * @returns {object}\n * @fires QueryBuilder.changer:parseRuleFlags\n * @private\n */\nQueryBuilder.prototype.parseRuleFlags = function(rule) {\n    var flags = $.extend({}, this.settings.default_rule_flags);\n\n    if (rule.readonly) {\n        $.extend(flags, {\n            filter_readonly: true,\n            operator_readonly: true,\n            value_readonly: true,\n            no_delete: true\n        });\n    }\n\n    if (rule.flags) {\n        $.extend(flags, rule.flags);\n    }\n\n    /**\n     * Modifies the consolidated rule's flags\n     * @event changer:parseRuleFlags\n     * @memberof QueryBuilder\n     * @param {object} flags\n     * @param {object} rule - <b>not</b> a Rule object\n     * @returns {object}\n     */\n    return this.change('parseRuleFlags', flags, rule);\n};\n\n/**\n * Gets a copy of flags of a rule\n * @param {object} flags\n * @param {boolean} [all=false] - return all flags or only changes from default flags\n * @returns {object}\n * @private\n */\nQueryBuilder.prototype.getRuleFlags = function(flags, all) {\n    if (all) {\n        return $.extend({}, flags);\n    }\n    else {\n        var ret = {};\n        $.each(this.settings.default_rule_flags, function(key, value) {\n            if (flags[key] !== value) {\n                ret[key] = flags[key];\n            }\n        });\n        return ret;\n    }\n};\n\n/**\n * Parses group flags\n * @param {object} group\n * @returns {object}\n * @fires QueryBuilder.changer:parseGroupFlags\n * @private\n */\nQueryBuilder.prototype.parseGroupFlags = function(group) {\n    var flags = $.extend({}, this.settings.default_group_flags);\n\n    if (group.readonly) {\n        $.extend(flags, {\n            condition_readonly: true,\n            no_add_rule: true,\n            no_add_group: true,\n            no_delete: true\n        });\n    }\n\n    if (group.flags) {\n        $.extend(flags, group.flags);\n    }\n\n    /**\n     * Modifies the consolidated group's flags\n     * @event changer:parseGroupFlags\n     * @memberof QueryBuilder\n     * @param {object} flags\n     * @param {object} group - <b>not</b> a Group object\n     * @returns {object}\n     */\n    return this.change('parseGroupFlags', flags, group);\n};\n\n/**\n * Gets a copy of flags of a group\n * @param {object} flags\n * @param {boolean} [all=false] - return all flags or only changes from default flags\n * @returns {object}\n * @private\n */\nQueryBuilder.prototype.getGroupFlags = function(flags, all) {\n    if (all) {\n        return $.extend({}, flags);\n    }\n    else {\n        var ret = {};\n        $.each(this.settings.default_group_flags, function(key, value) {\n            if (flags[key] !== value) {\n                ret[key] = flags[key];\n            }\n        });\n        return ret;\n    }\n};\n\n/**\n * Translate a label either by looking in the `lang` object or in itself if it's an object where keys are language codes\n * @param {string} [category]\n * @param {string|object} key\n * @returns {string}\n * @fires QueryBuilder.changer:translate\n */\nQueryBuilder.prototype.translate = function(category, key) {\n    if (key === undefined) { //***\n        key = category;\n        category = undefined;\n    }\n\n    var translation;\n    if (typeof key === 'object') {\n        translation = key[this.settings.lang_code] || key['en'];\n    }\n    else {\n        translation = (category ? this.lang[category] : this.lang)[key] || key;\n    }\n\n    /**\n     * Modifies the translated label\n     * @event changer:translate\n     * @memberof QueryBuilder\n     * @param {string} translation\n     * @param {string|object} key\n     * @param {string} [category]\n     * @returns {string}\n     */\n    return this.change('translate', translation, key, category);\n};\n\n/**\n * Returns a validation message\n * @param {object} validation\n * @param {string} type\n * @param {string} def\n * @returns {string}\n * @private\n */\nQueryBuilder.prototype.getValidationMessage = function(validation, type, def) {\n    return validation.messages && validation.messages[type] || def;\n};\n\n\nQueryBuilder.templates.group = '\\\n<div id=\"{{= it.group_id }}\" class=\"rules-group-container\"> \\\n  <div class=\"rules-group-header\"> \\\n    {{? it.level > 1 }} \\\n    <button type=\"button\" class=\"btn-close float-end m-2\" aria-label=\"{{! it.translate(\"delete_group\") }}\" data-delete=\"group\"></button> \\\n    {{?}} \\\n    <div class=\"btn-group btn-group-sm float-end group-actions\"> \\\n      <button type=\"button\" class=\"btn btn-primary\" data-add=\"rule\" data-bs-toggle=\"tooltip\" title=\"{{! it.translate(\"add_rule\") }}\"> \\\n        <i class=\"{{= it.icons.add_rule }}\"></i> \\\n      </button> \\\n      {{? it.settings.allow_groups === -1 || it.settings.allow_groups >= it.level }} \\\n      <button type=\"button\" class=\"btn btn-primary\" data-add=\"group\" data-bs-toggle=\"tooltip\" title=\"{{! it.translate(\"add_group\") }}\"> \\\n        <i class=\"{{= it.icons.add_group }}\"></i> \\\n      </button> \\\n      {{?}} \\\n    </div> \\\n    {{ var i = 0; }} \\\n    <div class=\"btn-group btn-group-sm group-conditions bg-white\" role=\"group\"> \\\n      {{~ it.conditions: condition }} \\\n        {{ i++; }} \\\n        <input type=\"radio\" class=\"btn-check\" name=\"{{= it.group_id }}_cond\" id=\"{{= it.group_id }}_cond_{{= i }}\" value=\"{{! condition }}\"> \\\n        <label class=\"btn btn-outline-primary\" for=\"{{= it.group_id }}_cond_{{= i }}\">{{= it.translate(\"conditions\", condition) }}</label> \\\n      {{~}} \\\n    </div> \\\n    {{? it.settings.display_errors }} \\\n    <div class=\"error-container\"><i class=\"{{= it.icons.error }}\"></i></div> \\\n    {{?}} \\\n  </div> \\\n  <div class=rules-group-body> \\\n    <div class=rules-list></div> \\\n  </div> \\\n</div>';\n\nQueryBuilder.templates.rule = '\\\n<div id=\"{{= it.rule_id }}\" class=\"rule-container\"> \\\n  <div class=\"rule-header mb-1\"> \\\n    <div class=\"btn-group btn-group-sm float-end rule-actions\"> \\\n      <button type=\"button\" class=\"btn-close m-2\" aria-label=\"{{! it.translate(\"delete_rule\") }}\" data-delete=\"rule\"></button> \\\n    </div> \\\n  </div> \\\n  <div class=\"rule-filter-container\"></div> \\\n  <div class=\"rule-operator-container\"></div> \\\n  <div class=\"rule-value-container\"></div> \\\n</div>';\n\nQueryBuilder.templates.filterSelect = '\\\n{{ var optgroup = null; }} \\\n<select class=\"form-select\" name=\"{{= it.rule.id }}_filter\"> \\\n  {{? it.settings.display_empty_filter }} \\\n    <option value=\"-1\">{{= it.settings.select_placeholder }}</option> \\\n  {{?}} \\\n  {{~ it.filters: filter }} \\\n    {{? optgroup !== filter.optgroup }} \\\n      {{? optgroup !== null }}</optgroup>{{?}} \\\n      {{? (optgroup = filter.optgroup) !== null }} \\\n        <optgroup label=\"{{= it.translate(it.settings.optgroups[optgroup]) }}\"> \\\n      {{?}} \\\n    {{?}} \\\n    <option value=\"{{! filter.id }}\" {{? filter.icon}}data-icon=\"{{= filter.icon}}\"{{?}}>{{= it.translate(filter.label) }}</option> \\\n  {{~}} \\\n  {{? optgroup !== null }}</optgroup>{{?}} \\\n</select>';\n\nQueryBuilder.templates.operatorSelect = '\\\n{{? it.operators.length === 1 }} \\\n<span class=\"rule-operator\"> \\\n{{= it.translate(\"operators\", it.operators[0].type) }} \\\n</span> \\\n{{?}} \\\n{{? it.operators.length > 1 }} \\\n{{ var optgroup = null; }} \\\n<select class=\"form-select{{? it.operators.length === 1 }} hide{{?}}\" name=\"{{= it.rule.id }}_operator\"> \\\n  {{~ it.operators: operator }} \\\n    {{? optgroup !== operator.optgroup }} \\\n      {{? optgroup !== null }}</optgroup>{{?}} \\\n      {{? (optgroup = operator.optgroup) !== null }} \\\n        <optgroup label=\"{{= it.translate(it.settings.optgroups[optgroup]) }}\"> \\\n      {{?}} \\\n    {{?}} \\\n    <option value=\"{{! operator.type }}\" {{? operator.icon}}data-icon=\"{{= operator.icon}}\"{{?}}>{{= it.translate(\"operators\", operator.type) }}</option> \\\n  {{~}} \\\n  {{? optgroup !== null }}</optgroup>{{?}} \\\n</select> \\\n{{?}}';\n\nQueryBuilder.templates.ruleValueSelect = '\\\n{{ var optgroup = null; }} \\\n<select class=\"form-select\" name=\"{{= it.name }}\" {{? it.rule.filter.multiple }}multiple{{?}}> \\\n  {{? it.rule.filter.placeholder }} \\\n    <option value=\"{{! it.rule.filter.placeholder_value }}\" disabled selected>{{= it.rule.filter.placeholder }}</option> \\\n  {{?}} \\\n  {{~ it.rule.filter.values: entry }} \\\n    {{? optgroup !== entry.optgroup }} \\\n      {{? optgroup !== null }}</optgroup>{{?}} \\\n      {{? (optgroup = entry.optgroup) !== null }} \\\n        <optgroup label=\"{{= it.translate(it.settings.optgroups[optgroup]) }}\"> \\\n      {{?}} \\\n    {{?}} \\\n    <option value=\"{{! entry.value }}\">{{= entry.label }}</option> \\\n  {{~}} \\\n  {{? optgroup !== null }}</optgroup>{{?}} \\\n</select>';\n\nQueryBuilder.templates.ruleValueCheck = `\n{{ var i = 0, id = \"\", style = it.rule.filter.vertical ? '' : ' form-check-inline'; }}\n{{~ it.rule.filter.values: entry }}\n<div class=\"form-check{{= style }}\">\n    {{ id = it.name + '_' + (i++); }}\n    <input class=\"form-check-input\" type=\"{{= it.rule.filter.type }}\" name=\"{{= it.name }}\" id=\"{{= id }}\" value=\"{{! entry.value }}\">\n    <label class=\"form-check-label\" for=\"{{= id }}\">{{= entry.value }}</label>\n</div>\n{{~}}`;\n\n/**\n * Returns group's HTML\n * @param {string} group_id\n * @param {int} level\n * @returns {string}\n * @fires QueryBuilder.changer:getGroupTemplate\n * @private\n */\nQueryBuilder.prototype.getGroupTemplate = function(group_id, level) {\n    var h = this.templates.group({\n        builder: this,\n        group_id: group_id,\n        level: level,\n        conditions: this.settings.conditions,\n        icons: this.icons,\n        settings: this.settings,\n        translate: this.translate.bind(this)\n    });\n\n    /**\n     * Modifies the raw HTML of a group\n     * @event changer:getGroupTemplate\n     * @memberof QueryBuilder\n     * @param {string} html\n     * @param {int} level\n     * @returns {string}\n     */\n    return this.change('getGroupTemplate', h, level);\n};\n\n/**\n * Returns rule's HTML\n * @param {string} rule_id\n * @returns {string}\n * @fires QueryBuilder.changer:getRuleTemplate\n * @private\n */\nQueryBuilder.prototype.getRuleTemplate = function(rule_id) {\n    var h = this.templates.rule({\n        builder: this,\n        rule_id: rule_id,\n        icons: this.icons,\n        settings: this.settings,\n        translate: this.translate.bind(this)\n    });\n\n    /**\n     * Modifies the raw HTML of a rule\n     * @event changer:getRuleTemplate\n     * @memberof QueryBuilder\n     * @param {string} html\n     * @returns {string}\n     */\n    return this.change('getRuleTemplate', h);\n};\n\n/**\n * Returns rule's filter HTML\n * @param {Rule} rule\n * @param {object[]} filters\n * @returns {string}\n * @fires QueryBuilder.changer:getRuleFilterTemplate\n * @private\n */\nQueryBuilder.prototype.getRuleFilterSelect = function(rule, filters) {\n    var h = this.templates.filterSelect({\n        builder: this,\n        rule: rule,\n        filters: filters,\n        icons: this.icons,\n        settings: this.settings,\n        translate: this.translate.bind(this)\n    });\n\n    /**\n     * Modifies the raw HTML of the rule's filter dropdown\n     * @event changer:getRuleFilterSelect\n     * @memberof QueryBuilder\n     * @param {string} html\n     * @param {Rule} rule\n     * @param {QueryBuilder.Filter[]} filters\n     * @returns {string}\n     */\n    return this.change('getRuleFilterSelect', h, rule, filters);\n};\n\n/**\n * Returns rule's operator HTML\n * @param {Rule} rule\n * @param {object[]} operators\n * @returns {string}\n * @fires QueryBuilder.changer:getRuleOperatorTemplate\n * @private\n */\nQueryBuilder.prototype.getRuleOperatorSelect = function(rule, operators) {\n    var h = this.templates.operatorSelect({\n        builder: this,\n        rule: rule,\n        operators: operators,\n        icons: this.icons,\n        settings: this.settings,\n        translate: this.translate.bind(this)\n    });\n\n    /**\n     * Modifies the raw HTML of the rule's operator dropdown\n     * @event changer:getRuleOperatorSelect\n     * @memberof QueryBuilder\n     * @param {string} html\n     * @param {Rule} rule\n     * @param {QueryBuilder.Operator[]} operators\n     * @returns {string}\n     */\n    return this.change('getRuleOperatorSelect', h, rule, operators);\n};\n\n/**\n * Returns the rule's value select HTML\n * @param {string} name\n * @param {Rule} rule\n * @returns {string}\n * @fires QueryBuilder.changer:getRuleValueSelect\n * @private\n */\nQueryBuilder.prototype.getRuleValueSelect = function(name, rule) {\n    var h = this.templates.ruleValueSelect({\n        builder: this,\n        name: name,\n        rule: rule,\n        icons: this.icons,\n        settings: this.settings,\n        translate: this.translate.bind(this)\n    });\n\n    /**\n     * Modifies the raw HTML of the rule's value dropdown (in case of a \"select\" filter)\n     * @event changer:getRuleValueSelect\n     * @memberof QueryBuilder\n     * @param {string} html\n     * @param [string} name\n     * @param {Rule} rule\n     * @returns {string}\n     */\n    return this.change('getRuleValueSelect', h, name, rule);\n};\n\n/**\n * Returns the rule's value check/radio HTML\n * @param {string} name\n * @param {Rule} rule\n * @returns {string}\n * @fires QueryBuilder.changer:getRuleValueCheck\n * @private\n */\n QueryBuilder.prototype.getRuleValueCheck = function(name, rule) { //***\n  var h = this.templates.ruleValueCheck({\n      builder: this,\n      name: name,\n      rule: rule,\n      icons: this.icons,\n      settings: this.settings,\n      translate: this.translate.bind(this)\n  });\n\n  /**\n   * Modifies the raw HTML of the rule's value dropdown (in case of a \"checkbox\" or \"radio\" filter)\n   * @event changer:getRuleValueCheck\n   * @memberof QueryBuilder\n   * @param {string} html\n   * @param [string} name\n   * @param {Rule} rule\n   * @returns {string}\n   */\n  return this.change('getRuleValueCheck', h, name, rule);\n};\n\n/**\n * Returns the rule's value HTML\n * @param {Rule} rule\n * @param {int} value_id\n * @returns {string}\n * @fires QueryBuilder.changer:getRuleInput\n * @private\n */\nQueryBuilder.prototype.getRuleInput = function(rule, value_id) {\n    var filter = rule.filter;\n    var validation = rule.filter.validation || {};\n    var name = rule.id + '_value_' + value_id;\n    // var c = filter.vertical ? ' class=block' : '';\n    var h = '';\n    var placeholder = Array.isArray(filter.placeholder) ? filter.placeholder[value_id] : filter.placeholder;\n\n    if (typeof filter.input == 'function') {\n        h = filter.input.call(this, rule, name);\n    }\n    else {\n        switch (filter.input) {\n            case 'radio':\n            case 'checkbox':\n                h = this.getRuleValueCheck(name, rule); //***\n                break;\n\n            case 'select':\n                h = this.getRuleValueSelect(name, rule);\n                break;\n\n            case 'textarea':\n                h += '<textarea class=\"form-control\" name=\"' + name + '\"';\n                if (filter.size) h += ' cols=\"' + filter.size + '\"';\n                if (filter.rows) h += ' rows=\"' + filter.rows + '\"';\n                if (validation.min !== undefined) h += ' minlength=\"' + validation.min + '\"';\n                if (validation.max !== undefined) h += ' maxlength=\"' + validation.max + '\"';\n                if (placeholder) h += ' placeholder=\"' + placeholder + '\"';\n                h += '></textarea>';\n                break;\n\n            case 'number':\n                h += '<input class=\"form-control\" type=\"number\" name=\"' + name + '\"';\n                if (validation.step !== undefined) h += ' step=\"' + validation.step + '\"';\n                if (validation.min !== undefined) h += ' min=\"' + validation.min + '\"';\n                if (validation.max !== undefined) h += ' max=\"' + validation.max + '\"';\n                if (placeholder) h += ' placeholder=\"' + placeholder + '\"';\n                if (filter.size) h += ' size=\"' + filter.size + '\"';\n                h += '>';\n                break;\n\n            default:\n                h += '<input class=\"form-control\" type=\"text\" name=\"' + name + '\"';\n                if (placeholder) h += ' placeholder=\"' + placeholder + '\"';\n                if (filter.type === 'string' && validation.min !== undefined) h += ' minlength=\"' + validation.min + '\"';\n                if (filter.type === 'string' && validation.max !== undefined) h += ' maxlength=\"' + validation.max + '\"';\n                if (filter.size) h += ' size=\"' + filter.size + '\"';\n                h += '>';\n        }\n    }\n\n    /**\n     * Modifies the raw HTML of the rule's input\n     * @event changer:getRuleInput\n     * @memberof QueryBuilder\n     * @param {string} html\n     * @param {Rule} rule\n     * @param {string} name - the name that the input must have\n     * @returns {string}\n     */\n    return this.change('getRuleInput', h, rule, name);\n};\n\n\n/**\n * @namespace\n */\nvar Utils = {};\n\n/**\n * @member {object}\n * @memberof QueryBuilder\n * @see Utils\n */\nQueryBuilder.utils = Utils;\n\n/**\n * @callback Utils#OptionsIteratee\n * @param {string} key\n * @param {string} value\n * @param {string} [optgroup]\n */\n\n/**\n * Iterates over radio/checkbox/selection options, it accept four formats\n *\n * @example\n * // array of values\n * options = ['one', 'two', 'three']\n * @example\n * // simple key-value map\n * options = {1: 'one', 2: 'two', 3: 'three'}\n * @example\n * // array of 1-element maps\n * options = [{1: 'one'}, {2: 'two'}, {3: 'three'}]\n * @example\n * // array of elements\n * options = [{value: 1, label: 'one', optgroup: 'group'}, {value: 2, label: 'two'}]\n *\n * @param {object|array} options\n * @param {Utils#OptionsIteratee} tpl\n */\nUtils.iterateOptions = function(options, tpl) {\n    if (options) {\n        if (Array.isArray(options)) {\n            options.forEach(function(entry, index) { //***\n                if ($.isPlainObject(entry)) {\n                    // array of elements\n                    if ('value' in entry) {\n                        tpl(entry.value, entry.label || entry.value, entry.optgroup);\n                    }\n                    // array of one-element maps\n                    else {\n                        $.each(entry, function(key, val) {\n                            tpl(key, val);\n                            return false; // break after first entry\n                        });\n                    }\n                }\n                // array of values\n                else {\n                    tpl(entry, entry, index); //***\n                }\n            });\n        }\n        // unordered map\n        else {\n            $.each(options, function(key, val) {\n                tpl(key, val);\n            });\n        }\n    }\n};\n\n/**\n * Replaces {0}, {1}, ... in a string\n * @param {string} str\n * @param {...*} args\n * @returns {string}\n */\nUtils.fmt = function(str, args) {\n    if (!Array.isArray(args)) {\n        args = Array.prototype.slice.call(arguments, 1);\n    }\n\n    return str.replace(/{([0-9]+)}/g, function(m, i) {\n        return args[parseInt(i)];\n    });\n};\n\n/**\n * Throws an Error object with custom name or logs an error\n * @param {boolean} [doThrow=true]\n * @param {string} type\n * @param {string} message\n * @param {...*} args\n */\nUtils.error = function() {\n    var i = 0;\n    var doThrow = typeof arguments[i] === 'boolean' ? arguments[i++] : true;\n    var type = arguments[i++];\n    var message = arguments[i++];\n    var args = Array.isArray(arguments[i]) ? arguments[i] : Array.prototype.slice.call(arguments, i);\n\n    if (doThrow) {\n        var err = new Error(Utils.fmt(message, args));\n        err.name = type + 'Error';\n        err.args = args;\n        throw err;\n    }\n    else {\n        console.error(type + 'Error: ' + Utils.fmt(message, args));\n    }\n};\n\n/**\n * Changes the type of a value to int, float or bool //***\n * @param {*} value\n * @param {object} filter\n * @param {string} filter.type - 'integer', 'double', 'boolean' or anything else (passthrough)\n * @returns {*}\n */\nUtils.changeType = function(value, filter) {\n    if (value === '' || value === undefined) {\n        return undefined;\n    }\n\n    switch (filter.type) {\n        // @formatter:off\n        case 'integer':\n            // if (typeof value === 'string' && !/^-?\\d+$/.test(value)) {\n            //     return value;\n            // }\n            // return parseInt(value);\n        case 'double':\n            // if (typeof value === 'string' && !/^-?\\d+\\.?\\d*$/.test(value)) {\n            //     return value;\n            // }\n            // return parseFloat(value);\n            return ew.parseNumber(value);\n        case 'datetime':\n            return ew.parseDateTime(value, filter.data.format).toSQLDate();\n        case 'boolean':\n            return ew.convertToBool(value);\n        default:\n            return value;\n        // @formatter:on\n    }\n};\n\n/**\n * Escapes a string like PHP's mysql_real_escape_string does\n * @param {string} value\n * @param {string} [additionalEscape] additionnal chars to escape\n * @returns {string}\n */\nUtils.escapeString = function(value, additionalEscape) {\n    if (typeof value != 'string') {\n        return value;\n    }\n\n    var escaped = value\n        .replace(/[\\0\\n\\r\\b\\\\\\'\\\"]/g, function(s) {\n            switch (s) {\n                // @formatter:off\n                case '\\0': return '\\\\0';\n                case '\\n': return '\\\\n';\n                case '\\r': return '\\\\r';\n                case '\\b': return '\\\\b';\n                case '\\'': return '\\'\\'';\n                default:   return '\\\\' + s;\n                // @formatter:off\n            }\n        })\n        // uglify compliant\n        .replace(/\\t/g, '\\\\t')\n        .replace(/\\x1a/g, '\\\\Z');\n\n    if (additionalEscape) {\n        escaped = escaped\n            .replace(new RegExp('[' + additionalEscape + ']', 'g'), function(s) {\n                return '\\\\' + s;\n            });\n    }\n\n    return escaped;\n};\n\n/**\n * Escapes a string for use in regex\n * @param {string} str\n * @returns {string}\n */\nUtils.escapeRegExp = function(str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n};\n\n/**\n * Escapes a string for use in HTML element id\n * @param {string} str\n * @returns {string}\n */\nUtils.escapeElementId = function(str) {\n    // Regex based on that suggested by:\n    // https://learn.jquery.com/using-jquery-core/faq/how-do-i-select-an-element-by-an-id-that-has-characters-used-in-css-notation/\n    // - escapes : . [ ] ,\n    // - avoids escaping already escaped values\n    return (str) ? str.replace(/(\\\\)?([:.\\[\\],])/g,\n            function( $0, $1, $2 ) { return $1 ? $0 : '\\\\' + $2; }) : str;\n};\n\n/**\n * Sorts objects by grouping them by `key`, preserving initial order when possible\n * @param {object[]} items\n * @param {string} key\n * @returns {object[]}\n */\nUtils.groupSort = function(items, key) {\n    var optgroups = [];\n    var newItems = [];\n\n    items.forEach(function(item) {\n        var idx;\n\n        if (item[key]) {\n            idx = optgroups.lastIndexOf(item[key]);\n\n            if (idx == -1) {\n                idx = optgroups.length;\n            }\n            else {\n                idx++;\n            }\n        }\n        else {\n            idx = optgroups.length;\n        }\n\n        optgroups.splice(idx, 0, item[key]);\n        newItems.splice(idx, 0, item);\n    });\n\n    return newItems;\n};\n\n/**\n * Defines properties on an Node prototype with getter and setter.<br>\n *     Update events are emitted in the setter through root Model (if any).<br>\n *     The object must have a `__` object, non enumerable property to store values.\n * @param {function} obj\n * @param {string[]} fields\n */\nUtils.defineModelProperties = function(obj, fields) {\n    fields.forEach(function(field) {\n        Object.defineProperty(obj.prototype, field, {\n            enumerable: true,\n            get: function() {\n                return this.__[field];\n            },\n            set: function(value) {\n                var previousValue = (this.__[field] !== null && typeof this.__[field] == 'object') ?\n                    $.extend({}, this.__[field]) :\n                    this.__[field];\n\n                this.__[field] = value;\n\n                if (this.model !== null) {\n                    /**\n                     * After a value of the model changed\n                     * @event model:update\n                     * @memberof Model\n                     * @param {Node} node\n                     * @param {string} field\n                     * @param {*} value\n                     * @param {*} previousValue\n                     */\n                    this.model.trigger('update', this, field, value, previousValue);\n                }\n            }\n        });\n    });\n};\n\n\n/**\n * Main object storing data model and emitting model events\n * @constructor\n */\nfunction Model() {\n    /**\n     * @member {Group}\n     * @readonly\n     */\n    this.root = null;\n\n    /**\n     * Base for event emitting\n     * @member {jQuery}\n     * @readonly\n     * @private\n     */\n    this.$ = $(this);\n}\n\n$.extend(Model.prototype, /** @lends Model.prototype */ {\n    /**\n     * Triggers an event on the model\n     * @param {string} type\n     * @returns {$.Event}\n     */\n    trigger: function(type) {\n        var event = new $.Event(type);\n        this.$.triggerHandler(event, Array.prototype.slice.call(arguments, 1));\n        return event;\n    },\n\n    /**\n     * Attaches an event listener on the model\n     * @param {string} type\n     * @param {function} cb\n     * @returns {Model}\n     */\n    on: function() {\n        this.$.on.apply(this.$, Array.prototype.slice.call(arguments));\n        return this;\n    },\n\n    /**\n     * Removes an event listener from the model\n     * @param {string} type\n     * @param {function} [cb]\n     * @returns {Model}\n     */\n    off: function() {\n        this.$.off.apply(this.$, Array.prototype.slice.call(arguments));\n        return this;\n    },\n\n    /**\n     * Attaches an event listener called once on the model\n     * @param {string} type\n     * @param {function} cb\n     * @returns {Model}\n     */\n    once: function() {\n        this.$.one.apply(this.$, Array.prototype.slice.call(arguments));\n        return this;\n    }\n});\n\n\n/**\n * Root abstract object\n * @constructor\n * @param {Node} [parent]\n * @param {jQuery} $el\n */\nvar Node = function(parent, $el) {\n    if (!(this instanceof Node)) {\n        return new Node(parent, $el);\n    }\n\n    Object.defineProperty(this, '__', { value: {} });\n\n    $el.data('queryBuilderModel', this);\n\n    /**\n     * @name level\n     * @member {int}\n     * @memberof Node\n     * @instance\n     * @readonly\n     */\n    this.__.level = 1;\n\n    /**\n     * @name error\n     * @member {string}\n     * @memberof Node\n     * @instance\n     */\n    this.__.error = null;\n\n    /**\n     * @name flags\n     * @member {object}\n     * @memberof Node\n     * @instance\n     * @readonly\n     */\n    this.__.flags = {};\n\n    /**\n     * @name data\n     * @member {object}\n     * @memberof Node\n     * @instance\n     */\n    this.__.data = undefined;\n\n    /**\n     * @member {jQuery}\n     * @readonly\n     */\n    this.$el = $el;\n\n    /**\n     * @member {string}\n     * @readonly\n     */\n    this.id = $el[0].id;\n\n    /**\n     * @member {Model}\n     * @readonly\n     */\n    this.model = null;\n\n    /**\n     * @member {Group}\n     * @readonly\n     */\n    this.parent = parent;\n};\n\nUtils.defineModelProperties(Node, ['level', 'error', 'data', 'flags']);\n\nObject.defineProperty(Node.prototype, 'parent', {\n    enumerable: true,\n    get: function() {\n        return this.__.parent;\n    },\n    set: function(value) {\n        this.__.parent = value;\n        this.level = value === null ? 1 : value.level + 1;\n        this.model = value === null ? null : value.model;\n    }\n});\n\n/**\n * Checks if this Node is the root\n * @returns {boolean}\n */\nNode.prototype.isRoot = function() {\n    return (this.level === 1);\n};\n\n/**\n * Returns the node position inside its parent\n * @returns {int}\n */\nNode.prototype.getPos = function() {\n    if (this.isRoot()) {\n        return -1;\n    }\n    else {\n        return this.parent.getNodePos(this);\n    }\n};\n\n/**\n * Deletes self\n * @fires Model.model:drop\n */\nNode.prototype.drop = function() {\n    var model = this.model;\n\n    if (!!this.parent) {\n        this.parent.removeNode(this);\n    }\n\n    this.$el.removeData('queryBuilderModel');\n\n    if (model !== null) {\n        /**\n         * After a node of the model has been removed\n         * @event model:drop\n         * @memberof Model\n         * @param {Node} node\n         */\n        model.trigger('drop', this);\n    }\n};\n\n/**\n * Moves itself after another Node\n * @param {Node} target\n * @fires Model.model:move\n */\nNode.prototype.moveAfter = function(target) {\n    if (!this.isRoot()) {\n        this.move(target.parent, target.getPos() + 1);\n    }\n};\n\n/**\n * Moves itself at the beginning of parent or another Group\n * @param {Group} [target]\n * @fires Model.model:move\n */\nNode.prototype.moveAtBegin = function(target) {\n    if (!this.isRoot()) {\n        if (target === undefined) {\n            target = this.parent;\n        }\n\n        this.move(target, 0);\n    }\n};\n\n/**\n * Moves itself at the end of parent or another Group\n * @param {Group} [target]\n * @fires Model.model:move\n */\nNode.prototype.moveAtEnd = function(target) {\n    if (!this.isRoot()) {\n        if (target === undefined) {\n            target = this.parent;\n        }\n\n        this.move(target, target.length() === 0 ? 0 : target.length() - 1);\n    }\n};\n\n/**\n * Moves itself at specific position of Group\n * @param {Group} target\n * @param {int} index\n * @fires Model.model:move\n */\nNode.prototype.move = function(target, index) {\n    if (!this.isRoot()) {\n        if (typeof target === 'number') {\n            index = target;\n            target = this.parent;\n        }\n\n        this.parent.removeNode(this);\n        target.insertNode(this, index, false);\n\n        if (this.model !== null) {\n            /**\n             * After a node of the model has been moved\n             * @event model:move\n             * @memberof Model\n             * @param {Node} node\n             * @param {Node} target\n             * @param {int} index\n             */\n            this.model.trigger('move', this, target, index);\n        }\n    }\n};\n\n\n/**\n * Group object\n * @constructor\n * @extends Node\n * @param {Group} [parent]\n * @param {jQuery} $el\n */\nvar Group = function(parent, $el) {\n    if (!(this instanceof Group)) {\n        return new Group(parent, $el);\n    }\n\n    Node.call(this, parent, $el);\n\n    /**\n     * @member {object[]}\n     * @readonly\n     */\n    this.rules = [];\n\n    /**\n     * @name condition\n     * @member {string}\n     * @memberof Group\n     * @instance\n     */\n    this.__.condition = null;\n};\n\nGroup.prototype = Object.create(Node.prototype);\nGroup.prototype.constructor = Group;\n\nUtils.defineModelProperties(Group, ['condition']);\n\n/**\n * Removes group's content\n */\nGroup.prototype.empty = function() {\n    this.each('reverse', function(rule) {\n        rule.drop();\n    }, function(group) {\n        group.drop();\n    });\n};\n\n/**\n * Deletes self\n */\nGroup.prototype.drop = function() {\n    this.empty();\n    Node.prototype.drop.call(this);\n};\n\n/**\n * Returns the number of children\n * @returns {int}\n */\nGroup.prototype.length = function() {\n    return this.rules.length;\n};\n\n/**\n * Adds a Node at specified index\n * @param {Node} node\n * @param {int} [index=end]\n * @param {boolean} [trigger=false] - fire 'add' event\n * @returns {Node} the inserted node\n * @fires Model.model:add\n */\nGroup.prototype.insertNode = function(node, index, trigger) {\n    if (index === undefined) {\n        index = this.length();\n    }\n\n    this.rules.splice(index, 0, node);\n    node.parent = this;\n\n    if (trigger && this.model !== null) {\n        /**\n         * After a node of the model has been added\n         * @event model:add\n         * @memberof Model\n         * @param {Node} parent\n         * @param {Node} node\n         * @param {int} index\n         */\n        this.model.trigger('add', this, node, index);\n    }\n\n    return node;\n};\n\n/**\n * Adds a new Group at specified index\n * @param {jQuery} $el\n * @param {int} [index=end]\n * @returns {Group}\n * @fires Model.model:add\n */\nGroup.prototype.addGroup = function($el, index) {\n    return this.insertNode(new Group(this, $el), index, true);\n};\n\n/**\n * Adds a new Rule at specified index\n * @param {jQuery} $el\n * @param {int} [index=end]\n * @returns {Rule}\n * @fires Model.model:add\n */\nGroup.prototype.addRule = function($el, index) {\n    return this.insertNode(new Rule(this, $el), index, true);\n};\n\n/**\n * Deletes a specific Node\n * @param {Node} node\n */\nGroup.prototype.removeNode = function(node) {\n    var index = this.getNodePos(node);\n    if (index !== -1) {\n        node.parent = null;\n        this.rules.splice(index, 1);\n    }\n};\n\n/**\n * Returns the position of a child Node\n * @param {Node} node\n * @returns {int}\n */\nGroup.prototype.getNodePos = function(node) {\n    return this.rules.indexOf(node);\n};\n\n/**\n * @callback Model#GroupIteratee\n * @param {Node} node\n * @returns {boolean} stop the iteration\n */\n\n/**\n * Iterate over all Nodes\n * @param {boolean} [reverse=false] - iterate in reverse order, required if you delete nodes\n * @param {Model#GroupIteratee} cbRule - callback for Rules (can be `null` but not omitted)\n * @param {Model#GroupIteratee} [cbGroup] - callback for Groups\n * @param {object} [context] - context for callbacks\n * @returns {boolean} if the iteration has been stopped by a callback\n */\nGroup.prototype.each = function(reverse, cbRule, cbGroup, context) {\n    if (typeof reverse !== 'boolean' && typeof reverse !== 'string') {\n        context = cbGroup;\n        cbGroup = cbRule;\n        cbRule = reverse;\n        reverse = false;\n    }\n    context = context === undefined ? null : context;\n\n    var i = reverse ? this.rules.length - 1 : 0;\n    var l = reverse ? 0 : this.rules.length - 1;\n    var c = reverse ? -1 : 1;\n    var next = function() {\n        return reverse ? i >= l : i <= l;\n    };\n    var stop = false;\n\n    for (; next(); i += c) {\n        if (this.rules[i] instanceof Group) {\n            if (!!cbGroup) {\n                stop = cbGroup.call(context, this.rules[i]) === false;\n            }\n        }\n        else if (!!cbRule) {\n            stop = cbRule.call(context, this.rules[i]) === false;\n        }\n\n        if (stop) {\n            break;\n        }\n    }\n\n    return !stop;\n};\n\n/**\n * Checks if the group contains a particular Node\n * @param {Node} node\n * @param {boolean} [recursive=false]\n * @returns {boolean}\n */\nGroup.prototype.contains = function(node, recursive) {\n    if (this.getNodePos(node) !== -1) {\n        return true;\n    }\n    else if (!recursive) {\n        return false;\n    }\n    else {\n        // the loop will return with false as soon as the Node is found\n        return !this.each(function() {\n            return true;\n        }, function(group) {\n            return !group.contains(node, true);\n        });\n    }\n};\n\n\n/**\n * Rule object\n * @constructor\n * @extends Node\n * @param {Group} parent\n * @param {jQuery} $el\n */\nvar Rule = function(parent, $el) {\n    if (!(this instanceof Rule)) {\n        return new Rule(parent, $el);\n    }\n\n    Node.call(this, parent, $el);\n\n    this._updating_value = false;\n    this._updating_input = false;\n\n    /**\n     * @name filter\n     * @member {QueryBuilder.Filter}\n     * @memberof Rule\n     * @instance\n     */\n    this.__.filter = null;\n\n    /**\n     * @name operator\n     * @member {QueryBuilder.Operator}\n     * @memberof Rule\n     * @instance\n     */\n    this.__.operator = null;\n\n    /**\n     * @name value\n     * @member {*}\n     * @memberof Rule\n     * @instance\n     */\n    this.__.value = undefined;\n};\n\nRule.prototype = Object.create(Node.prototype);\nRule.prototype.constructor = Rule;\n\nUtils.defineModelProperties(Rule, ['filter', 'operator', 'value']);\n\n/**\n * Checks if this Node is the root\n * @returns {boolean} always false\n */\nRule.prototype.isRoot = function() {\n    return false;\n};\n\n\n/**\n * @member {function}\n * @memberof QueryBuilder\n * @see Group\n */\nQueryBuilder.Group = Group;\n\n/**\n * @member {function}\n * @memberof QueryBuilder\n * @see Rule\n */\nQueryBuilder.Rule = Rule;\n\n\n/**\n * The {@link http://learn.jquery.com/plugins/|jQuery Plugins} namespace\n * @external \"jQuery.fn\"\n */\n\n/**\n * Instanciates or accesses the {@link QueryBuilder} on an element\n * @function\n * @memberof external:\"jQuery.fn\"\n * @param {*} option - initial configuration or method name\n * @param {...*} args - method arguments\n *\n * @example\n * $('#builder').queryBuilder({ /** configuration object *\\/ });\n * @example\n * $('#builder').queryBuilder('methodName', methodParam1, methodParam2);\n */\n$.fn.queryBuilder = function(option) {\n    if (this.length === 0) {\n        Utils.error('Config', 'No target defined');\n    }\n    if (this.length > 1) {\n        Utils.error('Config', 'Unable to initialize on multiple target');\n    }\n\n    var data = this.data('queryBuilder');\n    var options = (typeof option == 'object' && option) || {};\n\n    if (!data && option == 'destroy') {\n        return this;\n    }\n    if (!data) {\n        var builder = new QueryBuilder(this, options);\n        this.data('queryBuilder', builder);\n        builder.init(options.rules);\n    }\n    if (typeof option == 'string') {\n        return data[option].apply(data, Array.prototype.slice.call(arguments, 1));\n    }\n\n    return this;\n};\n\n/**\n * @function\n * @memberof external:\"jQuery.fn\"\n * @see QueryBuilder\n */\n$.fn.queryBuilder.constructor = QueryBuilder;\n\n/**\n * @function\n * @memberof external:\"jQuery.fn\"\n * @see QueryBuilder.defaults\n */\n$.fn.queryBuilder.defaults = QueryBuilder.defaults;\n\n/**\n * @function\n * @memberof external:\"jQuery.fn\"\n * @see QueryBuilder.defaults\n */\n$.fn.queryBuilder.extend = QueryBuilder.extend;\n\n/**\n * @function\n * @memberof external:\"jQuery.fn\"\n * @see QueryBuilder.define\n */\n$.fn.queryBuilder.define = QueryBuilder.define;\n\n/**\n * @function\n * @memberof external:\"jQuery.fn\"\n * @see QueryBuilder.regional\n */\n$.fn.queryBuilder.regional = QueryBuilder.regional;\n\n\n/**\n * @class ChangeFilters\n * @memberof module:plugins\n * @description Allows to change available filters after plugin initialization.\n */\n\nQueryBuilder.extend(/** @lends module:plugins.ChangeFilters.prototype */ {\n    /**\n     * Change the filters of the builder\n     * @param {boolean} [deleteOrphans=false] - delete rules using old filters\n     * @param {QueryBuilder[]} filters\n     * @fires module:plugins.ChangeFilters.changer:setFilters\n     * @fires module:plugins.ChangeFilters.afterSetFilters\n     * @throws ChangeFilterError\n     */\n    setFilters: function(deleteOrphans, filters) {\n        var self = this;\n\n        if (filters === undefined) {\n            filters = deleteOrphans;\n            deleteOrphans = false;\n        }\n\n        filters = this.checkFilters(filters);\n\n        /**\n         * Modifies the filters before {@link module:plugins.ChangeFilters.setFilters} method\n         * @event changer:setFilters\n         * @memberof module:plugins.ChangeFilters\n         * @param {QueryBuilder.Filter[]} filters\n         * @returns {QueryBuilder.Filter[]}\n         */\n        filters = this.change('setFilters', filters);\n\n        var filtersIds = filters.map(function(filter) {\n            return filter.id;\n        });\n\n        // check for orphans\n        if (!deleteOrphans) {\n            (function checkOrphans(node) {\n                node.each(\n                    function(rule) {\n                        if (rule.filter && filtersIds.indexOf(rule.filter.id) === -1) {\n                            Utils.error('ChangeFilter', 'A rule is using filter \"{0}\"', rule.filter.id);\n                        }\n                    },\n                    checkOrphans\n                );\n            }(this.model.root));\n        }\n\n        // replace filters\n        this.filters = filters;\n\n        // apply on existing DOM\n        (function updateBuilder(node) {\n            node.each(true,\n                function(rule) {\n                    if (rule.filter && filtersIds.indexOf(rule.filter.id) === -1) {\n                        rule.drop();\n\n                        self.trigger('rulesChanged');\n                    }\n                    else {\n                        self.createRuleFilters(rule);\n\n                        rule.$el.find(QueryBuilder.selectors.rule_filter).val(rule.filter ? rule.filter.id : '-1');\n                        self.trigger('afterUpdateRuleFilter', rule);\n                    }\n                },\n                updateBuilder\n            );\n        }(this.model.root));\n\n        // update plugins\n        if (this.settings.plugins) {\n            if (this.settings.plugins['unique-filter']) {\n                this.updateDisabledFilters();\n            }\n            if (this.settings.plugins['bt-selectpicker']) {\n                this.$el.find(QueryBuilder.selectors.rule_filter).selectpicker('render');\n            }\n        }\n\n        // reset the default_filter if does not exist anymore\n        if (this.settings.default_filter) {\n            try {\n                this.getFilterById(this.settings.default_filter);\n            }\n            catch (e) {\n                this.settings.default_filter = null;\n            }\n        }\n\n        /**\n         * After {@link module:plugins.ChangeFilters.setFilters} method\n         * @event afterSetFilters\n         * @memberof module:plugins.ChangeFilters\n         * @param {QueryBuilder.Filter[]} filters\n         */\n        this.trigger('afterSetFilters', filters);\n    },\n\n    /**\n     * Adds a new filter to the builder\n     * @param {QueryBuilder.Filter|Filter[]} newFilters\n     * @param {int|string} [position=#end] - index or '#start' or '#end'\n     * @fires module:plugins.ChangeFilters.changer:setFilters\n     * @fires module:plugins.ChangeFilters.afterSetFilters\n     * @throws ChangeFilterError\n     */\n    addFilter: function(newFilters, position) {\n        if (position === undefined || position == '#end') {\n            position = this.filters.length;\n        }\n        else if (position == '#start') {\n            position = 0;\n        }\n\n        if (!Array.isArray(newFilters)) {\n            newFilters = [newFilters];\n        }\n\n        var filters = $.extend(true, [], this.filters);\n\n        // numeric position\n        if (parseInt(position) == position) {\n            Array.prototype.splice.apply(filters, [position, 0].concat(newFilters));\n        }\n        else {\n            // after filter by its id\n            if (this.filters.some(function(filter, index) {\n                    if (filter.id == position) {\n                        position = index + 1;\n                        return true;\n                    }\n                })\n            ) {\n                Array.prototype.splice.apply(filters, [position, 0].concat(newFilters));\n            }\n            // defaults to end of list\n            else {\n                Array.prototype.push.apply(filters, newFilters);\n            }\n        }\n\n        this.setFilters(filters);\n    },\n\n    /**\n     * Removes a filter from the builder\n     * @param {string|string[]} filterIds\n     * @param {boolean} [deleteOrphans=false] delete rules using old filters\n     * @fires module:plugins.ChangeFilters.changer:setFilters\n     * @fires module:plugins.ChangeFilters.afterSetFilters\n     * @throws ChangeFilterError\n     */\n    removeFilter: function(filterIds, deleteOrphans) {\n        var filters = $.extend(true, [], this.filters);\n        if (typeof filterIds === 'string') {\n            filterIds = [filterIds];\n        }\n\n        filters = filters.filter(function(filter) {\n            return filterIds.indexOf(filter.id) === -1;\n        });\n\n        this.setFilters(deleteOrphans, filters);\n    }\n});\n\n\n/**\n * @class FilterDescription\n * @memberof module:plugins\n * @description Provides three ways to display a description about a filter: inline or Bootsrap Popover\n * @param {object} [options]\n * @param {string} [options.icon='fa-solid fa-info']\n * @param {string} [options.mode='tooltip'] - inline or tooltip\n */\nQueryBuilder.define('filter-description', function(options) {\n    // Inline\n    if (options.mode === 'inline') {\n        this.on('afterUpdateRuleFilter afterUpdateRuleOperator', function(e, rule) {\n            var $p = rule.$el.find('p.filter-description');\n            var description = e.builder.getFilterDescription(rule.filter, rule);\n\n            if (!description) {\n                $p.hide();\n            }\n            else {\n                if ($p.length === 0) {\n                    $p = $($.parseHTML('<p class=\"filter-description\"></p>'));\n                    $p.appendTo(rule.$el);\n                }\n                else {\n                    $p.css('display', '');\n                }\n\n                $p.html('<i class=\"' + options.icon + '\"></i> ' + description);\n            }\n        });\n    }\n    // Tooltip\n    else if (options.mode === 'tooltip') {\n        this.on('afterUpdateRuleFilter afterUpdateRuleOperator', function(e, rule) {\n            var $b = rule.$el.find('button.filter-description');\n            var description = e.builder.getFilterDescription(rule.filter, rule);\n\n            if (!description) {\n                $b.hide();\n\n                if ($b.data('bs.tooltip')) {\n                    $b.tooltip('hide');\n                }\n            }\n            else {\n                if ($b.length === 0) {\n                    $b = $($.parseHTML('<button type=\"button\" class=\"btn btn-sm btn-light filter-description float-end me-2\" data-bs-toggle=\"tooltip\"><i class=\"' + options.icon + '\"></i></button>'));\n                    rule.$el.find(QueryBuilder.selectors.rule_actions).after($b);\n\n                    $b.tooltip({\n                        placement: document.dir == 'rtl' ? 'right' : 'left',\n                        container: e.builder.$el[0],\n                        html: true,\n                        trigger: 'hover',\n                        title: description\n                    });\n\n                    // $b.on('mouseout', function() {\n                    //     $b.tooltip('hide');\n                    // });\n                }\n                else {\n                    $b.css('display', '');\n                }\n\n                if ($b.attr('aria-describedby')) {\n                    $b.tooltip('show');\n                }\n            }\n        });\n    }\n}, {\n    icon: 'fa-solid fa-info',\n    mode: 'tooltip'\n});\n\nQueryBuilder.extend(/** @lends module:plugins.FilterDescription.prototype */ {\n    /**\n     * Returns the description of a filter for a particular rule (if present)\n     * @param {object} filter\n     * @param {Rule} [rule]\n     * @returns {string}\n     * @private\n     */\n    getFilterDescription: function(filter, rule) {\n        if (!filter) {\n            return undefined;\n        }\n        else if (typeof filter.description == 'function') {\n            return filter.description.call(this, rule);\n        }\n        else {\n            return filter.description;\n        }\n    }\n});\n\n\n/**\n * @class Invert\n * @memberof module:plugins\n * @description Allows to invert a rule operator, a group condition or the entire builder.\n * @param {object} [options]\n * @param {string} [options.icon='fa-solid fa-shuffle']\n * @param {boolean} [options.recursive=true]\n * @param {boolean} [options.invert_rules=true]\n * @param {boolean} [options.display_rules_button=false]\n * @param {boolean} [options.silent_fail=false]\n */\nQueryBuilder.define('invert', function(options) {\n    var self = this;\n    var Selectors = QueryBuilder.selectors;\n\n    // Bind events\n    this.on('afterInit', function () {\n        self.$el.on('click.queryBuilder', '[data-invert=group]', function() {\n            var $group = $(this).closest(Selectors.group_container);\n            self.invert(self.getModel($group), options);\n        });\n\n        if (options.display_rules_button && options.invert_rules) {\n            self.$el.on('click.queryBuilder', '[data-invert=rule]', function() {\n                var $rule = $(this).closest(Selectors.rule_container);\n                self.invert(self.getModel($rule), options);\n            });\n        }\n    });\n\n    // Modify templates\n    if (!options.disable_template) {\n        this.on('getGroupTemplate.filter', function(h) {\n            var $h = $($.parseHTML(h.value));\n            $h.find(Selectors.condition_container).after(\n`<button\n    type=\"button\"\n    class=\"btn btn-sm btn-secondary\"\n    data-bs-toggle=\"tooltip\"\n    title=\"${self.translate('invert')}\" \n    data-invert=\"group\">\n    <i class=\"${options.icon}\"></i>\n</button>`\n            );\n            h.value = $h.prop('outerHTML');\n        });\n\n        if (options.display_rules_button && options.invert_rules) {\n            this.on('getRuleTemplate.filter', function(h) {\n                var $h = $($.parseHTML(h.value));\n                $h.find(Selectors.rule_actions).after(\n`<button\n    type=\"button\"\n    class=\"btn btn-sm btn-secondary\"\n    data-bs-toggle=\"tooltip\"\n    title=\"${self.translate('invert')}\" \n    data-invert=\"rule\">\n    <i class=\"${options.icon}\"></i>\n</button>`\n                );\n                h.value = $h.prop('outerHTML');\n            });\n        }\n    }\n}, {\n    icon: 'fa-solid fa-shuffle',\n    recursive: true,\n    invert_rules: true,\n    display_rules_button: false,\n    silent_fail: false,\n    disable_template: false\n});\n\nQueryBuilder.defaults({\n    operatorOpposites: {\n        'equal':            'not_equal',\n        'not_equal':        'equal',\n        'in':               'not_in',\n        'not_in':           'in',\n        'less':             'greater_or_equal',\n        'less_or_equal':    'greater',\n        'greater':          'less_or_equal',\n        'greater_or_equal': 'less',\n        'between':          'not_between',\n        'not_between':      'between',\n        'begins_with':      'not_begins_with',\n        'not_begins_with':  'begins_with',\n        'contains':         'not_contains',\n        'not_contains':     'contains',\n        'ends_with':        'not_ends_with',\n        'not_ends_with':    'ends_with',\n        'is_empty':         'is_not_empty',\n        'is_not_empty':     'is_empty',\n        'is_null':          'is_not_null',\n        'is_not_null':      'is_null'\n    },\n\n    conditionOpposites: {\n        'AND': 'OR',\n        'OR': 'AND'\n    }\n});\n\nQueryBuilder.extend(/** @lends module:plugins.Invert.prototype */ {\n    /**\n     * Invert a Group, a Rule or the whole builder\n     * @param {Node} [node]\n     * @param {object} [options] {@link module:plugins.Invert}\n     * @fires module:plugins.Invert.afterInvert\n     * @throws InvertConditionError, InvertOperatorError\n     */\n    invert: function(node, options) {\n        if (!(node instanceof Node)) {\n            if (!this.model.root) return;\n            options = node;\n            node = this.model.root;\n        }\n\n        if (typeof options != 'object') options = {};\n        if (options.recursive === undefined) options.recursive = true;\n        if (options.invert_rules === undefined) options.invert_rules = true;\n        if (options.silent_fail === undefined) options.silent_fail = false;\n        if (options.trigger === undefined) options.trigger = true;\n\n        if (node instanceof Group) {\n            // invert group condition\n            if (this.settings.conditionOpposites[node.condition]) {\n                node.condition = this.settings.conditionOpposites[node.condition];\n            }\n            else if (!options.silent_fail) {\n                Utils.error('InvertCondition', 'Unknown inverse of condition \"{0}\"', node.condition);\n            }\n\n            // recursive call\n            if (options.recursive) {\n                var tempOpts = $.extend({}, options, { trigger: false });\n                node.each(function(rule) {\n                    if (options.invert_rules) {\n                        this.invert(rule, tempOpts);\n                    }\n                }, function(group) {\n                    this.invert(group, tempOpts);\n                }, this);\n            }\n        }\n        else if (node instanceof Rule) {\n            if (node.operator && node.filter && !node.filter.no_invert) { //***\n                // invert rule operator\n                if (this.settings.operatorOpposites[node.operator.type]) {\n                    var invert = this.settings.operatorOpposites[node.operator.type];\n                    // check if the invert is \"authorized\"\n                    if (!node.filter.operators || node.filter.operators.indexOf(invert) != -1) {\n                        node.operator = this.getOperatorByType(invert);\n                    }\n                }\n                else if (!options.silent_fail) {\n                    Utils.error('InvertOperator', 'Unknown inverse of operator \"{0}\"', node.operator.type);\n                }\n            }\n        }\n\n        if (options.trigger) {\n            /**\n             * After {@link module:plugins.Invert.invert} method\n             * @event afterInvert\n             * @memberof module:plugins.Invert\n             * @param {Node} node - the main group or rule that has been modified\n             * @param {object} options\n             */\n            this.trigger('afterInvert', node, options);\n\n            this.trigger('rulesChanged');\n        }\n    }\n});\n\n\n/**\n * @class NotGroup\n * @memberof module:plugins\n * @description Adds a \"Not\" checkbox in front of group conditions.\n * @param {object} [options]\n */\nQueryBuilder.define('not-group', function(options) {\n    var self = this;\n\n    // Bind events\n    this.on('afterInit', function() {\n        self.$el.on('click.queryBuilder', '[data-not=group]', function() {\n            var $group = $(this).closest(QueryBuilder.selectors.group_container);\n            var group = self.getModel($group);\n            group.not = !group.not;\n        });\n\n        self.model.on('update', function(e, node, field) {\n            if (node instanceof Group && field === 'not') {\n                self.updateGroupNot(node);\n            }\n        });\n    });\n\n    // Init \"not\" property\n    this.on('afterAddGroup', function(e, group) {\n        group.__.not = false;\n    });\n\n    // Modify templates\n    if (!options.disable_template) {\n        this.on('getGroupTemplate.filter', function(h) {\n            var $h = $($.parseHTML(h.value));\n            $h.find(QueryBuilder.selectors.condition_container).before(`<div class=\"form-check form-switch float-start me-2\">\n    <input class=\"form-check-input\" type=\"checkbox\" role=\"switch\" data-not=\"group\">\n    <label class=\"form-check-label\">${self.translate('NOT')}</label>\n</div>`);\n            h.value = $h.prop('outerHTML');\n        });\n    }\n\n    // Export \"not\" to JSON\n    this.on('groupToJson.filter', function(e, group) {\n        e.value.not = group.not;\n    });\n\n    // Read \"not\" from JSON\n    this.on('jsonToGroup.filter', function(e, json) {\n        e.value.not = !!json.not;\n    });\n\n    // Export \"not\" to SQL\n    this.on('groupToSQL.filter', function(e, group) {\n        if (group.not) {\n            e.value = 'NOT ( ' + e.value + ' )';\n        }\n    });\n\n    // Parse \"NOT\" function from sqlparser\n    this.on('parseSQLNode.filter', function(e) {\n        if (e.value.name && e.value.name.toUpperCase() == 'NOT') {\n            e.value = e.value.arguments.value[0];\n\n            // if the there is no sub-group, create one\n            if (['AND', 'OR'].indexOf(e.value.operation.toUpperCase()) === -1) {\n                e.value = new SQLParser.nodes.Op(\n                    self.settings.default_condition,\n                    e.value,\n                    null\n                );\n            }\n\n            e.value.not = true;\n        }\n    });\n\n    // Request to create sub-group if the \"not\" flag is set\n    this.on('sqlGroupsDistinct.filter', function(e, group, data, i) {\n        if (data.not && i > 0) {\n            e.value = true;\n        }\n    });\n\n    // Read \"not\" from parsed SQL\n    this.on('sqlToGroup.filter', function(e, data) {\n        e.value.not = !!data.not;\n    });\n\n    // Export \"not\" to Mongo\n    this.on('groupToMongo.filter', function(e, group) {\n        var key = '$' + group.condition.toLowerCase();\n        if (group.not && e.value[key]) {\n            e.value = { '$nor': [e.value] };\n        }\n    });\n\n    // Parse \"$nor\" operator from Mongo\n    this.on('parseMongoNode.filter', function(e) {\n        var keys = Object.keys(e.value);\n\n        if (keys[0] == '$nor') {\n            e.value = e.value[keys[0]][0];\n            e.value.not = true;\n        }\n    });\n\n    // Read \"not\" from parsed Mongo\n    this.on('mongoToGroup.filter', function(e, data) {\n        e.value.not = !!data.not;\n    });\n}, {\n    disable_template: false\n});\n\n/**\n * From {@link module:plugins.NotGroup}\n * @name not\n * @member {boolean}\n * @memberof Group\n * @instance\n */\nUtils.defineModelProperties(Group, ['not']);\n\nQueryBuilder.extend(/** @lends module:plugins.NotGroup.prototype */ {\n    /**\n     * Performs actions when a group's not changes\n     * @param {Group} group\n     * @fires module:plugins.NotGroup.afterUpdateGroupNot\n     * @private\n     */\n    updateGroupNot: function(group) {\n        /**\n         * After the group's not flag has been modified\n         * @event afterUpdateGroupNot\n         * @memberof module:plugins.NotGroup\n         * @param {Group} group\n         */\n        this.trigger('afterUpdateGroupNot', group);\n\n        this.trigger('rulesChanged');\n    }\n});\n\n\n/**\n * @class SqlSupport\n * @memberof module:plugins\n * @description Allows to export rules as a SQL WHERE statement as well as populating the builder from an SQL query.\n * @param {object} [options]\n * @param {boolean} [options.boolean_as_integer=true] - `true` to convert boolean values to integer in the SQL output\n */\nQueryBuilder.define('sql-support', function(options) {\n\n}, {\n    boolean_as_integer: true\n});\n\nQueryBuilder.defaults({\n    // operators for internal -> SQL conversion\n    sqlOperators: {\n        equal: { op: '= ?' },\n        not_equal: { op: '!= ?' },\n        in: { op: 'IN(?)', sep: ', ' },\n        not_in: { op: 'NOT IN(?)', sep: ', ' },\n        less: { op: '< ?' },\n        less_or_equal: { op: '<= ?' },\n        greater: { op: '> ?' },\n        greater_or_equal: { op: '>= ?' },\n        between: { op: 'BETWEEN ?', sep: ' AND ' },\n        not_between: { op: 'NOT BETWEEN ?', sep: ' AND ' },\n        begins_with: { op: 'LIKE ?', mod: '{0}%', escape: '%_' },\n        not_begins_with: { op: 'NOT LIKE ?', mod: '{0}%', escape: '%_' },\n        contains: { op: 'LIKE ?', mod: '%{0}%', escape: '%_' },\n        not_contains: { op: 'NOT LIKE ?', mod: '%{0}%', escape: '%_' },\n        ends_with: { op: 'LIKE ?', mod: '%{0}', escape: '%_' },\n        not_ends_with: { op: 'NOT LIKE ?', mod: '%{0}', escape: '%_' },\n        is_empty: { op: '= \\'\\'' },\n        is_not_empty: { op: '!= \\'\\'' },\n        is_null: { op: 'IS NULL' },\n        is_not_null: { op: 'IS NOT NULL' }\n    },\n\n    // operators for SQL -> internal conversion\n    sqlRuleOperator: {\n        '=': function(v) {\n            return {\n                val: v,\n                op: v === '' ? 'is_empty' : 'equal'\n            };\n        },\n        '!=': function(v) {\n            return {\n                val: v,\n                op: v === '' ? 'is_not_empty' : 'not_equal'\n            };\n        },\n        'LIKE': function(v) {\n            if (v.slice(0, 1) == '%' && v.slice(-1) == '%') {\n                return {\n                    val: v.slice(1, -1),\n                    op: 'contains'\n                };\n            }\n            else if (v.slice(0, 1) == '%') {\n                return {\n                    val: v.slice(1),\n                    op: 'ends_with'\n                };\n            }\n            else if (v.slice(-1) == '%') {\n                return {\n                    val: v.slice(0, -1),\n                    op: 'begins_with'\n                };\n            }\n            else {\n                Utils.error('SQLParse', 'Invalid value for LIKE operator \"{0}\"', v);\n            }\n        },\n        'NOT LIKE': function(v) {\n            if (v.slice(0, 1) == '%' && v.slice(-1) == '%') {\n                return {\n                    val: v.slice(1, -1),\n                    op: 'not_contains'\n                };\n            }\n            else if (v.slice(0, 1) == '%') {\n                return {\n                    val: v.slice(1),\n                    op: 'not_ends_with'\n                };\n            }\n            else if (v.slice(-1) == '%') {\n                return {\n                    val: v.slice(0, -1),\n                    op: 'not_begins_with'\n                };\n            }\n            else {\n                Utils.error('SQLParse', 'Invalid value for NOT LIKE operator \"{0}\"', v);\n            }\n        },\n        'IN': function(v) {\n            return { val: v, op: 'in' };\n        },\n        'NOT IN': function(v) {\n            return { val: v, op: 'not_in' };\n        },\n        '<': function(v) {\n            return { val: v, op: 'less' };\n        },\n        '<=': function(v) {\n            return { val: v, op: 'less_or_equal' };\n        },\n        '>': function(v) {\n            return { val: v, op: 'greater' };\n        },\n        '>=': function(v) {\n            return { val: v, op: 'greater_or_equal' };\n        },\n        'BETWEEN': function(v) {\n            return { val: v, op: 'between' };\n        },\n        'NOT BETWEEN': function(v) {\n            return { val: v, op: 'not_between' };\n        },\n        'IS': function(v) {\n            if (v !== null) {\n                Utils.error('SQLParse', 'Invalid value for IS operator');\n            }\n            return { val: null, op: 'is_null' };\n        },\n        'IS NOT': function(v) {\n            if (v !== null) {\n                Utils.error('SQLParse', 'Invalid value for IS operator');\n            }\n            return { val: null, op: 'is_not_null' };\n        }\n    },\n\n    // statements for internal -> SQL conversion\n    sqlStatements: {\n        'question_mark': function() {\n            var params = [];\n            return {\n                add: function(rule, value) {\n                    params.push(value);\n                    return '?';\n                },\n                run: function() {\n                    return params;\n                }\n            };\n        },\n\n        'numbered': function(char) {\n            if (!char || char.length > 1) char = '$';\n            var index = 0;\n            var params = [];\n            return {\n                add: function(rule, value) {\n                    params.push(value);\n                    index++;\n                    return char + index;\n                },\n                run: function() {\n                    return params;\n                }\n            };\n        },\n\n        'named': function(char) {\n            if (!char || char.length > 1) char = ':';\n            var indexes = {};\n            var params = {};\n            return {\n                add: function(rule, value) {\n                    if (!indexes[rule.field]) indexes[rule.field] = 1;\n                    var key = rule.field + '_' + (indexes[rule.field]++);\n                    params[key] = value;\n                    return char + key;\n                },\n                run: function() {\n                    return params;\n                }\n            };\n        }\n    },\n\n    // statements for SQL -> internal conversion\n    sqlRuleStatement: {\n        'question_mark': function(values) {\n            var index = 0;\n            return {\n                parse: function(v) {\n                    return v == '?' ? values[index++] : v;\n                },\n                esc: function(sql) {\n                    return sql.replace(/\\?/g, '\\'?\\'');\n                }\n            };\n        },\n\n        'numbered': function(values, char) {\n            if (!char || char.length > 1) char = '$';\n            var regex1 = new RegExp('^\\\\' + char + '[0-9]+$');\n            var regex2 = new RegExp('\\\\' + char + '([0-9]+)', 'g');\n            return {\n                parse: function(v) {\n                    return regex1.test(v) ? values[v.slice(1) - 1] : v;\n                },\n                esc: function(sql) {\n                    return sql.replace(regex2, '\\'' + (char == '$' ? '$$' : char) + '$1\\'');\n                }\n            };\n        },\n\n        'named': function(values, char) {\n            if (!char || char.length > 1) char = ':';\n            var regex1 = new RegExp('^\\\\' + char);\n            var regex2 = new RegExp('\\\\' + char + '(' + Object.keys(values).join('|') + ')\\\\b', 'g');\n            return {\n                parse: function(v) {\n                    return regex1.test(v) ? values[v.slice(1)] : v;\n                },\n                esc: function(sql) {\n                    return sql.replace(regex2, '\\'' + (char == '$' ? '$$' : char) + '$1\\'');\n                }\n            };\n        }\n    }\n});\n\n/**\n * @typedef {object} SqlQuery\n * @memberof module:plugins.SqlSupport\n * @property {string} sql\n * @property {object} params\n */\n\nQueryBuilder.extend(/** @lends module:plugins.SqlSupport.prototype */ {\n    /**\n     * Returns rules as a SQL query\n     * @param {boolean|string} [stmt] - use prepared statements: false, 'question_mark', 'numbered', 'numbered(@)', 'named', 'named(@)'\n     * @param {boolean} [nl=false] output with new lines\n     * @param {object} [data] - current rules by default\n     * @returns {module:plugins.SqlSupport.SqlQuery}\n     * @fires module:plugins.SqlSupport.changer:getSQLField\n     * @fires module:plugins.SqlSupport.changer:ruleToSQL\n     * @fires module:plugins.SqlSupport.changer:groupToSQL\n     * @throws UndefinedSQLConditionError, UndefinedSQLOperatorError\n     */\n    getSQL: function(stmt, nl, data) {\n        data = (data === undefined) ? this.getRules() : data;\n\n        if (!data) {\n            return null;\n        }\n\n        nl = !!nl ? '\\n' : ' ';\n        var boolean_as_integer = this.getPluginOptions('sql-support', 'boolean_as_integer');\n\n        if (stmt === true) {\n            stmt = 'question_mark';\n        }\n        if (typeof stmt == 'string') {\n            var config = getStmtConfig(stmt);\n            stmt = this.settings.sqlStatements[config[1]](config[2]);\n        }\n\n        var self = this;\n\n        var sql = (function parse(group) {\n            if (!group.condition) {\n                group.condition = self.settings.default_condition;\n            }\n            if (['AND', 'OR'].indexOf(group.condition.toUpperCase()) === -1) {\n                Utils.error('UndefinedSQLCondition', 'Unable to build SQL query with condition \"{0}\"', group.condition);\n            }\n\n            if (!group.rules) {\n                return '';\n            }\n\n            var parts = [];\n\n            group.rules.forEach(function(rule) {\n                if (rule.rules && rule.rules.length > 0) {\n                    parts.push('(' + nl + parse(rule) + nl + ')' + nl);\n                }\n                else {\n                    var sql = self.settings.sqlOperators[rule.operator];\n                    var ope = self.getOperatorByType(rule.operator);\n                    var value = '';\n\n                    if (sql === undefined) {\n                        Utils.error('UndefinedSQLOperator', 'Unknown SQL operation for operator \"{0}\"', rule.operator);\n                    }\n\n                    if (ope.nb_inputs !== 0) {\n                        if (!(rule.value instanceof Array)) {\n                            rule.value = [rule.value];\n                        }\n\n                        rule.value.forEach(function(v, i) {\n                            if (i > 0) {\n                                value += sql.sep;\n                            }\n\n                            if (rule.type == 'boolean' && boolean_as_integer) {\n                                v = v ? 1 : 0;\n                            }\n                            else if (!stmt && rule.type !== 'integer' && rule.type !== 'double' && rule.type !== 'boolean') {\n                                v = Utils.escapeString(v, sql.escape);\n                            }\n\n                            if (sql.mod) {\n                                v = Utils.fmt(sql.mod, v);\n                            }\n\n                            if (stmt) {\n                                value += stmt.add(rule, v);\n                            }\n                            else {\n                                if (typeof v == 'string') {\n                                    v = '\\'' + v + '\\'';\n                                }\n\n                                value += v;\n                            }\n                        });\n                    }\n\n                    var sqlFn = function(v) {\n                        return sql.op.replace('?', function() {\n                            return v;\n                        });\n                    };\n\n                    /**\n                     * Modifies the SQL field used by a rule\n                     * @event changer:getSQLField\n                     * @memberof module:plugins.SqlSupport\n                     * @param {string} field\n                     * @param {Rule} rule\n                     * @returns {string}\n                     */\n                    var field = self.change('getSQLField', rule.field, rule);\n\n                    var ruleExpression = field + ' ' + sqlFn(value);\n\n                    /**\n                     * Modifies the SQL generated for a rule\n                     * @event changer:ruleToSQL\n                     * @memberof module:plugins.SqlSupport\n                     * @param {string} expression\n                     * @param {Rule} rule\n                     * @param {*} value\n                     * @param {function} valueWrapper - function that takes the value and adds the operator\n                     * @returns {string}\n                     */\n                    parts.push(self.change('ruleToSQL', ruleExpression, rule, value, sqlFn));\n                }\n            });\n\n            var groupExpression = parts.join(' ' + group.condition + nl);\n\n            /**\n             * Modifies the SQL generated for a group\n             * @event changer:groupToSQL\n             * @memberof module:plugins.SqlSupport\n             * @param {string} expression\n             * @param {Group} group\n             * @returns {string}\n             */\n            return self.change('groupToSQL', groupExpression, group);\n        }(data));\n\n        if (stmt) {\n            return {\n                sql: sql,\n                params: stmt.run()\n            };\n        }\n        else {\n            return {\n                sql: sql\n            };\n        }\n    },\n\n    /**\n     * Convert a SQL query to rules\n     * @param {string|module:plugins.SqlSupport.SqlQuery} query\n     * @param {boolean|string} stmt\n     * @returns {object}\n     * @fires module:plugins.SqlSupport.changer:parseSQLNode\n     * @fires module:plugins.SqlSupport.changer:getSQLFieldID\n     * @fires module:plugins.SqlSupport.changer:sqlToRule\n     * @fires module:plugins.SqlSupport.changer:sqlToGroup\n     * @throws MissingLibraryError, SQLParseError, UndefinedSQLOperatorError\n     */\n    getRulesFromSQL: function(query, stmt) {\n        if (!('SQLParser' in window)) {\n            Utils.error('MissingLibrary', 'SQLParser is required to parse SQL queries. Get it here https://github.com/mistic100/sql-parser');\n        }\n\n        var self = this;\n\n        if (typeof query == 'string') {\n            query = { sql: query };\n        }\n\n        if (stmt === true) stmt = 'question_mark';\n        if (typeof stmt == 'string') {\n            var config = getStmtConfig(stmt);\n            stmt = this.settings.sqlRuleStatement[config[1]](query.params, config[2]);\n        }\n\n        if (stmt) {\n            query.sql = stmt.esc(query.sql);\n        }\n\n        if (query.sql.toUpperCase().indexOf('SELECT') !== 0) {\n            query.sql = 'SELECT * FROM table WHERE ' + query.sql;\n        }\n\n        var parsed = SQLParser.parse(query.sql);\n\n        if (!parsed.where) {\n            Utils.error('SQLParse', 'No WHERE clause found');\n        }\n\n        /**\n         * Custom parsing of an AST node generated by SQLParser, you can return a sub-part of the tree, or a well formed group or rule JSON\n         * @event changer:parseSQLNode\n         * @memberof module:plugins.SqlSupport\n         * @param {object} AST node\n         * @returns {object} tree, rule or group\n         */\n        var data = self.change('parseSQLNode', parsed.where.conditions);\n\n        // a plugin returned a group\n        if ('rules' in data && 'condition' in data) {\n            return data;\n        }\n\n        // a plugin returned a rule\n        if ('id' in data && 'operator' in data && 'value' in data) {\n            return {\n                condition: this.settings.default_condition,\n                rules: [data]\n            };\n        }\n\n        // create root group\n        var out = self.change('sqlToGroup', {\n            condition: this.settings.default_condition,\n            rules: []\n        }, data);\n\n        // keep track of current group\n        var curr = out;\n\n        (function flatten(data, i) {\n            if (data === null) {\n                return;\n            }\n\n            // allow plugins to manually parse or handle special cases\n            data = self.change('parseSQLNode', data);\n\n            // a plugin returned a group\n            if ('rules' in data && 'condition' in data) {\n                curr.rules.push(data);\n                return;\n            }\n\n            // a plugin returned a rule\n            if ('id' in data && 'operator' in data && 'value' in data) {\n                curr.rules.push(data);\n                return;\n            }\n\n            // data must be a SQL parser node\n            if (!('left' in data) || !('right' in data) || !('operation' in data)) {\n                Utils.error('SQLParse', 'Unable to parse WHERE clause');\n            }\n\n            // it's a node\n            if (['AND', 'OR'].indexOf(data.operation.toUpperCase()) !== -1) {\n                // create a sub-group if the condition is not the same and it's not the first level\n\n                /**\n                 * Given an existing group and an AST node, determines if a sub-group must be created\n                 * @event changer:sqlGroupsDistinct\n                 * @memberof module:plugins.SqlSupport\n                 * @param {boolean} create - true by default if the group condition is different\n                 * @param {object} group\n                 * @param {object} AST\n                 * @param {int} current group level\n                 * @returns {boolean}\n                 */\n                var createGroup = self.change('sqlGroupsDistinct', i > 0 && curr.condition != data.operation.toUpperCase(), curr, data, i);\n\n                if (createGroup) {\n                    /**\n                     * Modifies the group generated from the SQL expression (this is called before the group is filled with rules)\n                     * @event changer:sqlToGroup\n                     * @memberof module:plugins.SqlSupport\n                     * @param {object} group\n                     * @param {object} AST\n                     * @returns {object}\n                     */\n                    var group = self.change('sqlToGroup', {\n                        condition: self.settings.default_condition,\n                        rules: []\n                    }, data);\n\n                    curr.rules.push(group);\n                    curr = group;\n                }\n\n                curr.condition = data.operation.toUpperCase();\n                i++;\n\n                // some magic !\n                var next = curr;\n                flatten(data.left, i);\n\n                curr = next;\n                flatten(data.right, i);\n            }\n            // it's a leaf\n            else {\n                if ($.isPlainObject(data.right.value)) {\n                    Utils.error('SQLParse', 'Value format not supported for {0}.', data.left.value);\n                }\n\n                // convert array\n                var value;\n                if ($.isArray(data.right.value)) {\n                    value = data.right.value.map(function(v) {\n                        return v.value;\n                    });\n                }\n                else {\n                    value = data.right.value;\n                }\n\n                // get actual values\n                if (stmt) {\n                    if ($.isArray(value)) {\n                        value = value.map(stmt.parse);\n                    }\n                    else {\n                        value = stmt.parse(value);\n                    }\n                }\n\n                // convert operator\n                var operator = data.operation.toUpperCase();\n                if (operator == '<>') {\n                    operator = '!=';\n                }\n\n                var sqlrl = self.settings.sqlRuleOperator[operator];\n                if (sqlrl === undefined) {\n                    Utils.error('UndefinedSQLOperator', 'Invalid SQL operation \"{0}\".', data.operation);\n                }\n\n                var opVal = sqlrl.call(this, value, data.operation);\n\n                // find field name\n                var field;\n                if ('values' in data.left) {\n                    field = data.left.values.join('.');\n                }\n                else if ('value' in data.left) {\n                    field = data.left.value;\n                }\n                else {\n                    Utils.error('SQLParse', 'Cannot find field name in {0}', JSON.stringify(data.left));\n                }\n\n                // unescape chars declared by the operator\n                var finalValue = opVal.val;\n                var sql = self.settings.sqlOperators[opVal.op];\n                if (!stmt && sql && sql.escape) {\n                    var searchChars = sql.escape.split('').map(function(c) {\n                        return '\\\\\\\\' + c;\n                    }).join('|');\n                    finalValue = finalValue\n                        .replace(new RegExp('(' + searchChars + ')', 'g'), function(s) {\n                            return s[1];\n                        });\n                }\n\n                var id = self.getSQLFieldID(field, value);\n\n                /**\n                 * Modifies the rule generated from the SQL expression\n                 * @event changer:sqlToRule\n                 * @memberof module:plugins.SqlSupport\n                 * @param {object} rule\n                 * @param {object} AST\n                 * @returns {object}\n                 */\n                var rule = self.change('sqlToRule', {\n                    id: id,\n                    field: field,\n                    operator: opVal.op,\n                    value: finalValue\n                }, data);\n\n                curr.rules.push(rule);\n            }\n        }(data, 0));\n\n        return out;\n    },\n\n    /**\n     * Sets the builder's rules from a SQL query\n     * @see module:plugins.SqlSupport.getRulesFromSQL\n     */\n    setRulesFromSQL: function(query, stmt) {\n        this.setRules(this.getRulesFromSQL(query, stmt));\n    },\n\n    /**\n     * Returns a filter identifier from the SQL field.\n     * Automatically use the only one filter with a matching field, fires a changer otherwise.\n     * @param {string} field\n     * @param {*} value\n     * @fires module:plugins.SqlSupport:changer:getSQLFieldID\n     * @returns {string}\n     * @private\n     */\n    getSQLFieldID: function(field, value) {\n        var matchingFilters = this.filters.filter(function(filter) {\n            return filter.field.toLowerCase() === field.toLowerCase();\n        });\n\n        var id;\n        if (matchingFilters.length === 1) {\n            id = matchingFilters[0].id;\n        }\n        else {\n            /**\n             * Returns a filter identifier from the SQL field\n             * @event changer:getSQLFieldID\n             * @memberof module:plugins.SqlSupport\n             * @param {string} field\n             * @param {*} value\n             * @returns {string}\n             */\n            id = this.change('getSQLFieldID', field, value);\n        }\n\n        return id;\n    }\n});\n\n/**\n * Parses the statement configuration\n * @memberof module:plugins.SqlSupport\n * @param {string} stmt\n * @returns {Array} null, mode, option\n * @private\n */\nfunction getStmtConfig(stmt) {\n    var config = stmt.match(/(question_mark|numbered|named)(?:\\((.)\\))?/);\n    if (!config) config = [null, 'question_mark', undefined];\n    return config;\n}\n\n\n/**\n * @class UniqueFilter\n * @memberof module:plugins\n * @description Allows to define some filters as \"unique\": ie which can be used for only one rule, globally or in the same group.\n */\nQueryBuilder.define('unique-filter', function() {\n    this.status.used_filters = {};\n\n    this.on('afterUpdateRuleFilter', this.updateDisabledFilters);\n    this.on('afterDeleteRule', this.updateDisabledFilters);\n    this.on('afterCreateRuleFilters', this.applyDisabledFilters);\n    this.on('afterReset', this.clearDisabledFilters);\n    this.on('afterClear', this.clearDisabledFilters);\n\n    // Ensure that the default filter is not already used if unique\n    this.on('getDefaultFilter.filter', function(e, model) {\n        var self = e.builder;\n\n        self.updateDisabledFilters();\n\n        if (e.value.id in self.status.used_filters) {\n            var found = self.filters.some(function(filter) {\n                if (!(filter.id in self.status.used_filters) || self.status.used_filters[filter.id].length > 0 && self.status.used_filters[filter.id].indexOf(model.parent) === -1) {\n                    e.value = filter;\n                    return true;\n                }\n            });\n\n            if (!found) {\n                Utils.error(false, 'UniqueFilter', 'No more non-unique filters available');\n                e.value = undefined;\n            }\n        }\n    });\n});\n\nQueryBuilder.extend(/** @lends module:plugins.UniqueFilter.prototype */ {\n    /**\n     * Updates the list of used filters\n     * @param {$.Event} [e]\n     * @private\n     */\n    updateDisabledFilters: function(e) {\n        var self = e ? e.builder : this;\n\n        self.status.used_filters = {};\n\n        if (!self.model) {\n            return;\n        }\n\n        // get used filters\n        (function walk(group) {\n            group.each(function(rule) {\n                if (rule.filter && rule.filter.unique) {\n                    if (!self.status.used_filters[rule.filter.id]) {\n                        self.status.used_filters[rule.filter.id] = [];\n                    }\n                    if (rule.filter.unique == 'group') {\n                        self.status.used_filters[rule.filter.id].push(rule.parent);\n                    }\n                }\n            }, function(group) {\n                walk(group);\n            });\n        }(self.model.root));\n\n        self.applyDisabledFilters(e);\n    },\n\n    /**\n     * Clear the list of used filters\n     * @param {$.Event} [e]\n     * @private\n     */\n    clearDisabledFilters: function(e) {\n        var self = e ? e.builder : this;\n\n        self.status.used_filters = {};\n\n        self.applyDisabledFilters(e);\n    },\n\n    /**\n     * Disabled filters depending on the list of used ones\n     * @param {$.Event} [e]\n     * @private\n     */\n    applyDisabledFilters: function(e) {\n        var self = e ? e.builder : this;\n\n        // re-enable everything\n        self.$el.find(QueryBuilder.selectors.filter_container + ' option').prop('disabled', false);\n\n        // disable some\n        $.each(self.status.used_filters, function(filterId, groups) {\n            if (groups.length === 0) {\n                self.$el.find(QueryBuilder.selectors.filter_container + ' option[value=\"' + filterId + '\"]:not(:selected)').prop('disabled', true);\n            }\n            else {\n                groups.forEach(function(group) {\n                    group.each(function(rule) {\n                        rule.$el.find(QueryBuilder.selectors.filter_container + ' option[value=\"' + filterId + '\"]:not(:selected)').prop('disabled', true);\n                    });\n                });\n            }\n        });\n\n        // update Selectpicker\n        if (self.settings.plugins && self.settings.plugins['bt-selectpicker']) {\n            self.$el.find(QueryBuilder.selectors.rule_filter).selectpicker('render');\n        }\n    }\n});\n\n\n/*!\n * jQuery QueryBuilder 2.6.2\n * Locale: English (en)\n * Author: Damien \"Mistic\" Sorel, http://www.strangeplanet.fr\n * Licensed under MIT (https://opensource.org/licenses/MIT)\n */\n\nQueryBuilder.regional['en'] = {\n  \"__locale\": \"English (en)\",\n  \"__author\": \"Damien \\\"Mistic\\\" Sorel, http://www.strangeplanet.fr\",\n  \"add_rule\": \"Add rule\",\n  \"add_group\": \"Add group\",\n  \"delete_rule\": \"Delete\",\n  \"delete_group\": \"Delete\",\n  \"conditions\": {\n    \"AND\": \"AND\",\n    \"OR\": \"OR\"\n  },\n  \"operators\": {\n    \"equal\": \"equal\",\n    \"not_equal\": \"not equal\",\n    \"in\": \"in\",\n    \"not_in\": \"not in\",\n    \"less\": \"less\",\n    \"less_or_equal\": \"less or equal\",\n    \"greater\": \"greater\",\n    \"greater_or_equal\": \"greater or equal\",\n    \"between\": \"between\",\n    \"not_between\": \"not between\",\n    \"begins_with\": \"begins with\",\n    \"not_begins_with\": \"doesn't begin with\",\n    \"contains\": \"contains\",\n    \"not_contains\": \"doesn't contain\",\n    \"ends_with\": \"ends with\",\n    \"not_ends_with\": \"doesn't end with\",\n    \"is_empty\": \"is empty\",\n    \"is_not_empty\": \"is not empty\",\n    \"is_null\": \"is null\",\n    \"is_not_null\": \"is not null\"\n  },\n  \"errors\": {\n    \"no_filter\": \"No filter selected\",\n    \"empty_group\": \"The group is empty\",\n    \"radio_empty\": \"No value selected\",\n    \"checkbox_empty\": \"No value selected\",\n    \"select_empty\": \"No value selected\",\n    \"string_empty\": \"Empty value\",\n    \"string_exceed_min_length\": \"Must contain at least {0} characters\",\n    \"string_exceed_max_length\": \"Must not contain more than {0} characters\",\n    \"string_invalid_format\": \"Invalid format ({0})\",\n    \"number_nan\": \"Not a number\",\n    \"number_not_integer\": \"Not an integer\",\n    \"number_not_double\": \"Not a real number\",\n    \"number_exceed_min\": \"Must be greater than {0}\",\n    \"number_exceed_max\": \"Must be lower than {0}\",\n    \"number_wrong_step\": \"Must be a multiple of {0}\",\n    \"number_between_invalid\": \"Invalid values, {0} is greater than {1}\",\n    \"datetime_empty\": \"Empty value\",\n    \"datetime_invalid\": \"Invalid date format ({0})\",\n    \"datetime_exceed_min\": \"Must be after {0}\",\n    \"datetime_exceed_max\": \"Must be before {0}\",\n    \"datetime_between_invalid\": \"Invalid values, {0} is greater than {1}\",\n    \"boolean_not_valid\": \"Not a boolean\",\n    \"operator_not_multiple\": \"Operator \\\"{1}\\\" cannot accept multiple values\"\n  },\n  \"invert\": \"Invert\",\n  \"NOT\": \"NOT\"\n};\n\nQueryBuilder.defaults({ lang_code: 'en' });\nreturn QueryBuilder;\n\n}));\n"]}